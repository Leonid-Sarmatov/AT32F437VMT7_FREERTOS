ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	prvTaskIsTaskSuspended:
  24              	.LVL0:
  25              	.LFB15:
  26              		.file 1 "bsp/middlewares/freertos/source/tasks.c"
   1:bsp/middlewares/freertos/source/tasks.c **** /*
   2:bsp/middlewares/freertos/source/tasks.c ****  * FreeRTOS Kernel V10.4.3
   3:bsp/middlewares/freertos/source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:bsp/middlewares/freertos/source/tasks.c ****  *
   5:bsp/middlewares/freertos/source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:bsp/middlewares/freertos/source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:bsp/middlewares/freertos/source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:bsp/middlewares/freertos/source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:bsp/middlewares/freertos/source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:bsp/middlewares/freertos/source/tasks.c ****  * subject to the following conditions:
  11:bsp/middlewares/freertos/source/tasks.c ****  *
  12:bsp/middlewares/freertos/source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:bsp/middlewares/freertos/source/tasks.c ****  * copies or substantial portions of the Software.
  14:bsp/middlewares/freertos/source/tasks.c ****  *
  15:bsp/middlewares/freertos/source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:bsp/middlewares/freertos/source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:bsp/middlewares/freertos/source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:bsp/middlewares/freertos/source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:bsp/middlewares/freertos/source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:bsp/middlewares/freertos/source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:bsp/middlewares/freertos/source/tasks.c ****  *
  22:bsp/middlewares/freertos/source/tasks.c ****  * https://www.FreeRTOS.org
  23:bsp/middlewares/freertos/source/tasks.c ****  * https://github.com/FreeRTOS
  24:bsp/middlewares/freertos/source/tasks.c ****  *
  25:bsp/middlewares/freertos/source/tasks.c ****  */
  26:bsp/middlewares/freertos/source/tasks.c **** 
  27:bsp/middlewares/freertos/source/tasks.c **** /* Standard includes. */
  28:bsp/middlewares/freertos/source/tasks.c **** #include <stdlib.h>
  29:bsp/middlewares/freertos/source/tasks.c **** #include <string.h>
  30:bsp/middlewares/freertos/source/tasks.c **** 
  31:bsp/middlewares/freertos/source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:bsp/middlewares/freertos/source/tasks.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 2


  33:bsp/middlewares/freertos/source/tasks.c ****  * task.h is included from an application file. */
  34:bsp/middlewares/freertos/source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:bsp/middlewares/freertos/source/tasks.c **** 
  36:bsp/middlewares/freertos/source/tasks.c **** /* FreeRTOS includes. */
  37:bsp/middlewares/freertos/source/tasks.c **** #include "FreeRTOS.h"
  38:bsp/middlewares/freertos/source/tasks.c **** #include "task.h"
  39:bsp/middlewares/freertos/source/tasks.c **** #include "timers.h"
  40:bsp/middlewares/freertos/source/tasks.c **** #include "stack_macros.h"
  41:bsp/middlewares/freertos/source/tasks.c **** 
  42:bsp/middlewares/freertos/source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  43:bsp/middlewares/freertos/source/tasks.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  44:bsp/middlewares/freertos/source/tasks.c ****  * for the header files above, but not in this file, in order to generate the
  45:bsp/middlewares/freertos/source/tasks.c ****  * correct privileged Vs unprivileged linkage and placement. */
  46:bsp/middlewares/freertos/source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  47:bsp/middlewares/freertos/source/tasks.c **** 
  48:bsp/middlewares/freertos/source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  49:bsp/middlewares/freertos/source/tasks.c ****  * functions but without including stdio.h here. */
  50:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  51:bsp/middlewares/freertos/source/tasks.c **** 
  52:bsp/middlewares/freertos/source/tasks.c **** /* At the bottom of this file are two optional functions that can be used
  53:bsp/middlewares/freertos/source/tasks.c ****  * to generate human readable text from the raw data generated by the
  54:bsp/middlewares/freertos/source/tasks.c ****  * uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:bsp/middlewares/freertos/source/tasks.c ****  * for convenience only, and are NOT considered part of the kernel. */
  56:bsp/middlewares/freertos/source/tasks.c ****     #include <stdio.h>
  57:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:bsp/middlewares/freertos/source/tasks.c **** 
  59:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_PREEMPTION == 0 )
  60:bsp/middlewares/freertos/source/tasks.c **** 
  61:bsp/middlewares/freertos/source/tasks.c **** /* If the cooperative scheduler is being used then a yield should not be
  62:bsp/middlewares/freertos/source/tasks.c ****  * performed just because a higher priority task has been woken. */
  63:bsp/middlewares/freertos/source/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()
  64:bsp/middlewares/freertos/source/tasks.c **** #else
  65:bsp/middlewares/freertos/source/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  66:bsp/middlewares/freertos/source/tasks.c **** #endif
  67:bsp/middlewares/freertos/source/tasks.c **** 
  68:bsp/middlewares/freertos/source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  69:bsp/middlewares/freertos/source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION              ( ( uint8_t ) 0 ) /* Must be zero as it is the in
  70:bsp/middlewares/freertos/source/tasks.c **** #define taskWAITING_NOTIFICATION                  ( ( uint8_t ) 1 )
  71:bsp/middlewares/freertos/source/tasks.c **** #define taskNOTIFICATION_RECEIVED                 ( ( uint8_t ) 2 )
  72:bsp/middlewares/freertos/source/tasks.c **** 
  73:bsp/middlewares/freertos/source/tasks.c **** /*
  74:bsp/middlewares/freertos/source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  75:bsp/middlewares/freertos/source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  76:bsp/middlewares/freertos/source/tasks.c ****  */
  77:bsp/middlewares/freertos/source/tasks.c **** #define tskSTACK_FILL_BYTE                        ( 0xa5U )
  78:bsp/middlewares/freertos/source/tasks.c **** 
  79:bsp/middlewares/freertos/source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  80:bsp/middlewares/freertos/source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB    ( ( uint8_t ) 0 )
  81:bsp/middlewares/freertos/source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY        ( ( uint8_t ) 1 )
  82:bsp/middlewares/freertos/source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB     ( ( uint8_t ) 2 )
  83:bsp/middlewares/freertos/source/tasks.c **** 
  84:bsp/middlewares/freertos/source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  85:bsp/middlewares/freertos/source/tasks.c ****  * value so the high water mark can be determined.  If none of the following are
  86:bsp/middlewares/freertos/source/tasks.c ****  * set then don't fill the stack so there is no unnecessary dependency on memset. */
  87:bsp/middlewares/freertos/source/tasks.c **** #if ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
  88:bsp/middlewares/freertos/source/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    1
  89:bsp/middlewares/freertos/source/tasks.c **** #else
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 3


  90:bsp/middlewares/freertos/source/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    0
  91:bsp/middlewares/freertos/source/tasks.c **** #endif
  92:bsp/middlewares/freertos/source/tasks.c **** 
  93:bsp/middlewares/freertos/source/tasks.c **** /*
  94:bsp/middlewares/freertos/source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  95:bsp/middlewares/freertos/source/tasks.c ****  */
  96:bsp/middlewares/freertos/source/tasks.c **** #define tskRUNNING_CHAR      ( 'X' )
  97:bsp/middlewares/freertos/source/tasks.c **** #define tskBLOCKED_CHAR      ( 'B' )
  98:bsp/middlewares/freertos/source/tasks.c **** #define tskREADY_CHAR        ( 'R' )
  99:bsp/middlewares/freertos/source/tasks.c **** #define tskDELETED_CHAR      ( 'D' )
 100:bsp/middlewares/freertos/source/tasks.c **** #define tskSUSPENDED_CHAR    ( 'S' )
 101:bsp/middlewares/freertos/source/tasks.c **** 
 102:bsp/middlewares/freertos/source/tasks.c **** /*
 103:bsp/middlewares/freertos/source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 104:bsp/middlewares/freertos/source/tasks.c ****  * global, rather than file scope.
 105:bsp/middlewares/freertos/source/tasks.c ****  */
 106:bsp/middlewares/freertos/source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 107:bsp/middlewares/freertos/source/tasks.c ****     #define static
 108:bsp/middlewares/freertos/source/tasks.c **** #endif
 109:bsp/middlewares/freertos/source/tasks.c **** 
 110:bsp/middlewares/freertos/source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 111:bsp/middlewares/freertos/source/tasks.c ****  * configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 112:bsp/middlewares/freertos/source/tasks.c **** #ifndef configIDLE_TASK_NAME
 113:bsp/middlewares/freertos/source/tasks.c ****     #define configIDLE_TASK_NAME    "IDLE"
 114:bsp/middlewares/freertos/source/tasks.c **** #endif
 115:bsp/middlewares/freertos/source/tasks.c **** 
 116:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 117:bsp/middlewares/freertos/source/tasks.c **** 
 118:bsp/middlewares/freertos/source/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 119:bsp/middlewares/freertos/source/tasks.c ****  * performed in a generic way that is not optimised to any particular
 120:bsp/middlewares/freertos/source/tasks.c ****  * microcontroller architecture. */
 121:bsp/middlewares/freertos/source/tasks.c **** 
 122:bsp/middlewares/freertos/source/tasks.c **** /* uxTopReadyPriority holds the priority of the highest priority ready
 123:bsp/middlewares/freertos/source/tasks.c ****  * state task. */
 124:bsp/middlewares/freertos/source/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority ) \
 125:bsp/middlewares/freertos/source/tasks.c ****     {                                               \
 126:bsp/middlewares/freertos/source/tasks.c ****         if( ( uxPriority ) > uxTopReadyPriority )   \
 127:bsp/middlewares/freertos/source/tasks.c ****         {                                           \
 128:bsp/middlewares/freertos/source/tasks.c ****             uxTopReadyPriority = ( uxPriority );    \
 129:bsp/middlewares/freertos/source/tasks.c ****         }                                           \
 130:bsp/middlewares/freertos/source/tasks.c ****     } /* taskRECORD_READY_PRIORITY */
 131:bsp/middlewares/freertos/source/tasks.c **** 
 132:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 133:bsp/middlewares/freertos/source/tasks.c **** 
 134:bsp/middlewares/freertos/source/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                \
 135:bsp/middlewares/freertos/source/tasks.c ****     {                                                                         \
 136:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxTopPriority = uxTopReadyPriority;                       \
 137:bsp/middlewares/freertos/source/tasks.c ****                                                                               \
 138:bsp/middlewares/freertos/source/tasks.c ****         /* Find the highest priority queue that contains ready tasks. */      \
 139:bsp/middlewares/freertos/source/tasks.c ****         while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) ) \
 140:bsp/middlewares/freertos/source/tasks.c ****         {                                                                     \
 141:bsp/middlewares/freertos/source/tasks.c ****             configASSERT( uxTopPriority );                                    \
 142:bsp/middlewares/freertos/source/tasks.c ****             --uxTopPriority;                                                  \
 143:bsp/middlewares/freertos/source/tasks.c ****         }                                                                     \
 144:bsp/middlewares/freertos/source/tasks.c ****                                                                               \
 145:bsp/middlewares/freertos/source/tasks.c ****         /* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of \
 146:bsp/middlewares/freertos/source/tasks.c ****          * the  same priority get an equal share of the processor time. */                    \
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 4


 147:bsp/middlewares/freertos/source/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) ); \
 148:bsp/middlewares/freertos/source/tasks.c ****         uxTopReadyPriority = uxTopPriority;                                                   \
 149:bsp/middlewares/freertos/source/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK */
 150:bsp/middlewares/freertos/source/tasks.c **** 
 151:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 152:bsp/middlewares/freertos/source/tasks.c **** 
 153:bsp/middlewares/freertos/source/tasks.c **** /* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 154:bsp/middlewares/freertos/source/tasks.c ****  * they are only required when a port optimised method of task selection is
 155:bsp/middlewares/freertos/source/tasks.c ****  * being used. */
 156:bsp/middlewares/freertos/source/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )
 157:bsp/middlewares/freertos/source/tasks.c ****     #define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 158:bsp/middlewares/freertos/source/tasks.c **** 
 159:bsp/middlewares/freertos/source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 160:bsp/middlewares/freertos/source/tasks.c **** 
 161:bsp/middlewares/freertos/source/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 162:bsp/middlewares/freertos/source/tasks.c ****  * performed in a way that is tailored to the particular microcontroller
 163:bsp/middlewares/freertos/source/tasks.c ****  * architecture being used. */
 164:bsp/middlewares/freertos/source/tasks.c **** 
 165:bsp/middlewares/freertos/source/tasks.c **** /* A port optimised version is provided.  Call the port defined macros. */
 166:bsp/middlewares/freertos/source/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority )    portRECORD_READY_PRIORITY( uxPriority, uxTop
 167:bsp/middlewares/freertos/source/tasks.c **** 
 168:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 169:bsp/middlewares/freertos/source/tasks.c **** 
 170:bsp/middlewares/freertos/source/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                                  \
 171:bsp/middlewares/freertos/source/tasks.c ****     {                                                                                           \
 172:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxTopPriority;                                                              \
 173:bsp/middlewares/freertos/source/tasks.c ****                                                                                                 \
 174:bsp/middlewares/freertos/source/tasks.c ****         /* Find the highest priority list that contains ready tasks. */                         \
 175:bsp/middlewares/freertos/source/tasks.c ****         portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );                          \
 176:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 ); \
 177:bsp/middlewares/freertos/source/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );   \
 178:bsp/middlewares/freertos/source/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 179:bsp/middlewares/freertos/source/tasks.c **** 
 180:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 181:bsp/middlewares/freertos/source/tasks.c **** 
 182:bsp/middlewares/freertos/source/tasks.c **** /* A port optimised version is provided, call it only if the TCB being reset
 183:bsp/middlewares/freertos/source/tasks.c ****  * is being referenced from a ready list.  If it is referenced from a delayed
 184:bsp/middlewares/freertos/source/tasks.c ****  * or suspended list then it won't be in a ready list. */
 185:bsp/middlewares/freertos/source/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )                                                 
 186:bsp/middlewares/freertos/source/tasks.c ****     {                                                                                              
 187:bsp/middlewares/freertos/source/tasks.c ****         if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 
 188:bsp/middlewares/freertos/source/tasks.c ****         {                                                                                          
 189:bsp/middlewares/freertos/source/tasks.c ****             portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );                    
 190:bsp/middlewares/freertos/source/tasks.c ****         }                                                                                          
 191:bsp/middlewares/freertos/source/tasks.c ****     }
 192:bsp/middlewares/freertos/source/tasks.c **** 
 193:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:bsp/middlewares/freertos/source/tasks.c **** 
 195:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 196:bsp/middlewares/freertos/source/tasks.c **** 
 197:bsp/middlewares/freertos/source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 198:bsp/middlewares/freertos/source/tasks.c ****  * count overflows. */
 199:bsp/middlewares/freertos/source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()                                                \
 200:bsp/middlewares/freertos/source/tasks.c ****     {                                                                             \
 201:bsp/middlewares/freertos/source/tasks.c ****         List_t * pxTemp;                                                          \
 202:bsp/middlewares/freertos/source/tasks.c ****                                                                                   \
 203:bsp/middlewares/freertos/source/tasks.c ****         /* The delayed tasks list should be empty when the lists are switched. */ \
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 5


 204:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );               \
 205:bsp/middlewares/freertos/source/tasks.c ****                                                                                   \
 206:bsp/middlewares/freertos/source/tasks.c ****         pxTemp = pxDelayedTaskList;                                               \
 207:bsp/middlewares/freertos/source/tasks.c ****         pxDelayedTaskList = pxOverflowDelayedTaskList;                            \
 208:bsp/middlewares/freertos/source/tasks.c ****         pxOverflowDelayedTaskList = pxTemp;                                       \
 209:bsp/middlewares/freertos/source/tasks.c ****         xNumOfOverflows++;                                                        \
 210:bsp/middlewares/freertos/source/tasks.c ****         prvResetNextTaskUnblockTime();                                            \
 211:bsp/middlewares/freertos/source/tasks.c ****     }
 212:bsp/middlewares/freertos/source/tasks.c **** 
 213:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 214:bsp/middlewares/freertos/source/tasks.c **** 
 215:bsp/middlewares/freertos/source/tasks.c **** /*
 216:bsp/middlewares/freertos/source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 217:bsp/middlewares/freertos/source/tasks.c ****  * the task.  It is inserted at the end of the list.
 218:bsp/middlewares/freertos/source/tasks.c ****  */
 219:bsp/middlewares/freertos/source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )                                                             
 220:bsp/middlewares/freertos/source/tasks.c ****     traceMOVED_TASK_TO_READY_STATE( pxTCB );                                                       
 221:bsp/middlewares/freertos/source/tasks.c ****     taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );                                            
 222:bsp/middlewares/freertos/source/tasks.c ****     vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem )
 223:bsp/middlewares/freertos/source/tasks.c ****     tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 224:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 225:bsp/middlewares/freertos/source/tasks.c **** 
 226:bsp/middlewares/freertos/source/tasks.c **** /*
 227:bsp/middlewares/freertos/source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 228:bsp/middlewares/freertos/source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 229:bsp/middlewares/freertos/source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 230:bsp/middlewares/freertos/source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 231:bsp/middlewares/freertos/source/tasks.c ****  */
 232:bsp/middlewares/freertos/source/tasks.c **** #define prvGetTCBFromHandle( pxHandle )    ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle )
 233:bsp/middlewares/freertos/source/tasks.c **** 
 234:bsp/middlewares/freertos/source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 235:bsp/middlewares/freertos/source/tasks.c ****  * of the task to which it belongs (coded to allow it to be held in reverse
 236:bsp/middlewares/freertos/source/tasks.c ****  * priority order).  However, it is occasionally borrowed for other purposes.  It
 237:bsp/middlewares/freertos/source/tasks.c ****  * is important its value is not updated due to a task priority change while it is
 238:bsp/middlewares/freertos/source/tasks.c ****  * being used for another purpose.  The following bit definition is used to inform
 239:bsp/middlewares/freertos/source/tasks.c ****  * the scheduler that the value should not be changed - in which case it is the
 240:bsp/middlewares/freertos/source/tasks.c ****  * responsibility of whichever module is using the value to ensure it gets set back
 241:bsp/middlewares/freertos/source/tasks.c ****  * to its original value when it is released. */
 242:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_16_BIT_TICKS == 1 )
 243:bsp/middlewares/freertos/source/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x8000U
 244:bsp/middlewares/freertos/source/tasks.c **** #else
 245:bsp/middlewares/freertos/source/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x80000000UL
 246:bsp/middlewares/freertos/source/tasks.c **** #endif
 247:bsp/middlewares/freertos/source/tasks.c **** 
 248:bsp/middlewares/freertos/source/tasks.c **** /*
 249:bsp/middlewares/freertos/source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 250:bsp/middlewares/freertos/source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 251:bsp/middlewares/freertos/source/tasks.c ****  * (the task's run time environment, including register values)
 252:bsp/middlewares/freertos/source/tasks.c ****  */
 253:bsp/middlewares/freertos/source/tasks.c **** typedef struct tskTaskControlBlock       /* The old naming convention is used to prevent breaking k
 254:bsp/middlewares/freertos/source/tasks.c **** {
 255:bsp/middlewares/freertos/source/tasks.c ****     volatile StackType_t * pxTopOfStack; /*< Points to the location of the last item placed on the 
 256:bsp/middlewares/freertos/source/tasks.c **** 
 257:bsp/middlewares/freertos/source/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 258:bsp/middlewares/freertos/source/tasks.c ****         xMPU_SETTINGS xMPUSettings; /*< The MPU settings are defined as part of the port layer.  TH
 259:bsp/middlewares/freertos/source/tasks.c ****     #endif
 260:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 6


 261:bsp/middlewares/freertos/source/tasks.c ****     ListItem_t xStateListItem;                  /*< The list that the state list item of a task is 
 262:bsp/middlewares/freertos/source/tasks.c ****     ListItem_t xEventListItem;                  /*< Used to reference a task from an event list. */
 263:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxPriority;                     /*< The priority of the task.  0 is the lowest prio
 264:bsp/middlewares/freertos/source/tasks.c ****     StackType_t * pxStack;                      /*< Points to the start of the stack. */
 265:bsp/middlewares/freertos/source/tasks.c ****     char pcTaskName[ configMAX_TASK_NAME_LEN ]; /*< Descriptive name given to the task when created
 266:bsp/middlewares/freertos/source/tasks.c **** 
 267:bsp/middlewares/freertos/source/tasks.c ****     #if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 268:bsp/middlewares/freertos/source/tasks.c ****         StackType_t * pxEndOfStack; /*< Points to the highest valid address for the stack. */
 269:bsp/middlewares/freertos/source/tasks.c ****     #endif
 270:bsp/middlewares/freertos/source/tasks.c **** 
 271:bsp/middlewares/freertos/source/tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 272:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxCriticalNesting; /*< Holds the critical section nesting depth for ports that 
 273:bsp/middlewares/freertos/source/tasks.c ****     #endif
 274:bsp/middlewares/freertos/source/tasks.c **** 
 275:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 276:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxTCBNumber;  /*< Stores a number that increments each time a TCB is created.  
 277:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxTaskNumber; /*< Stores a number specifically for use by third party trace cod
 278:bsp/middlewares/freertos/source/tasks.c ****     #endif
 279:bsp/middlewares/freertos/source/tasks.c **** 
 280:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 281:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxBasePriority; /*< The priority last assigned to the task - used by the priori
 282:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxMutexesHeld;
 283:bsp/middlewares/freertos/source/tasks.c ****     #endif
 284:bsp/middlewares/freertos/source/tasks.c **** 
 285:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 286:bsp/middlewares/freertos/source/tasks.c ****         TaskHookFunction_t pxTaskTag;
 287:bsp/middlewares/freertos/source/tasks.c ****     #endif
 288:bsp/middlewares/freertos/source/tasks.c **** 
 289:bsp/middlewares/freertos/source/tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 290:bsp/middlewares/freertos/source/tasks.c ****         void * pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 291:bsp/middlewares/freertos/source/tasks.c ****     #endif
 292:bsp/middlewares/freertos/source/tasks.c **** 
 293:bsp/middlewares/freertos/source/tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 294:bsp/middlewares/freertos/source/tasks.c ****         uint32_t ulRunTimeCounter; /*< Stores the amount of time the task has spent in the Running 
 295:bsp/middlewares/freertos/source/tasks.c ****     #endif
 296:bsp/middlewares/freertos/source/tasks.c **** 
 297:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_NEWLIB_REENTRANT == 1 )
 298:bsp/middlewares/freertos/source/tasks.c **** 
 299:bsp/middlewares/freertos/source/tasks.c ****         /* Allocate a Newlib reent structure that is specific to this task.
 300:bsp/middlewares/freertos/source/tasks.c ****          * Note Newlib support has been included by popular demand, but is not
 301:bsp/middlewares/freertos/source/tasks.c ****          * used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 302:bsp/middlewares/freertos/source/tasks.c ****          * responsible for resulting newlib operation.  User must be familiar with
 303:bsp/middlewares/freertos/source/tasks.c ****          * newlib and must provide system-wide implementations of the necessary
 304:bsp/middlewares/freertos/source/tasks.c ****          * stubs. Be warned that (at the time of writing) the current newlib design
 305:bsp/middlewares/freertos/source/tasks.c ****          * implements a system-wide malloc() that must be provided with locks.
 306:bsp/middlewares/freertos/source/tasks.c ****          *
 307:bsp/middlewares/freertos/source/tasks.c ****          * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 308:bsp/middlewares/freertos/source/tasks.c ****          * for additional information. */
 309:bsp/middlewares/freertos/source/tasks.c ****         struct  _reent xNewLib_reent;
 310:bsp/middlewares/freertos/source/tasks.c ****     #endif
 311:bsp/middlewares/freertos/source/tasks.c **** 
 312:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 313:bsp/middlewares/freertos/source/tasks.c ****         volatile uint32_t ulNotifiedValue[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 314:bsp/middlewares/freertos/source/tasks.c ****         volatile uint8_t ucNotifyState[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 315:bsp/middlewares/freertos/source/tasks.c ****     #endif
 316:bsp/middlewares/freertos/source/tasks.c **** 
 317:bsp/middlewares/freertos/source/tasks.c ****     /* See the comments in FreeRTOS.h with the definition of
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 7


 318:bsp/middlewares/freertos/source/tasks.c ****      * tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 319:bsp/middlewares/freertos/source/tasks.c ****     #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been conso
 320:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucStaticallyAllocated;                     /*< Set to pdTRUE if the task is a stati
 321:bsp/middlewares/freertos/source/tasks.c ****     #endif
 322:bsp/middlewares/freertos/source/tasks.c **** 
 323:bsp/middlewares/freertos/source/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 324:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucDelayAborted;
 325:bsp/middlewares/freertos/source/tasks.c ****     #endif
 326:bsp/middlewares/freertos/source/tasks.c **** 
 327:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_POSIX_ERRNO == 1 )
 328:bsp/middlewares/freertos/source/tasks.c ****         int iTaskErrno;
 329:bsp/middlewares/freertos/source/tasks.c ****     #endif
 330:bsp/middlewares/freertos/source/tasks.c **** } tskTCB;
 331:bsp/middlewares/freertos/source/tasks.c **** 
 332:bsp/middlewares/freertos/source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 333:bsp/middlewares/freertos/source/tasks.c ****  * below to enable the use of older kernel aware debuggers. */
 334:bsp/middlewares/freertos/source/tasks.c **** typedef tskTCB TCB_t;
 335:bsp/middlewares/freertos/source/tasks.c **** 
 336:bsp/middlewares/freertos/source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 337:bsp/middlewares/freertos/source/tasks.c ****  * which static variables must be declared volatile. */
 338:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 339:bsp/middlewares/freertos/source/tasks.c **** 
 340:bsp/middlewares/freertos/source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 341:bsp/middlewares/freertos/source/tasks.c ****  * xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 342:bsp/middlewares/freertos/source/tasks.c ****  * doing so breaks some kernel aware debuggers and debuggers that rely on removing
 343:bsp/middlewares/freertos/source/tasks.c ****  * the static qualifier. */
 344:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ]; /*< Prioritised ready task
 345:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;                         /*< Delayed tasks. */
 346:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;                         /*< Delayed tasks (two lis
 347:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /*< Points to the delayed 
 348:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /*< Points to the delayed 
 349:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;                         /*< Tasks that have been r
 350:bsp/middlewares/freertos/source/tasks.c **** 
 351:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 352:bsp/middlewares/freertos/source/tasks.c **** 
 353:bsp/middlewares/freertos/source/tasks.c ****     PRIVILEGED_DATA static List_t xTasksWaitingTermination; /*< Tasks that have been deleted - but 
 354:bsp/middlewares/freertos/source/tasks.c ****     PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 355:bsp/middlewares/freertos/source/tasks.c **** 
 356:bsp/middlewares/freertos/source/tasks.c **** #endif
 357:bsp/middlewares/freertos/source/tasks.c **** 
 358:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 359:bsp/middlewares/freertos/source/tasks.c **** 
 360:bsp/middlewares/freertos/source/tasks.c ****     PRIVILEGED_DATA static List_t xSuspendedTaskList; /*< Tasks that are currently suspended. */
 361:bsp/middlewares/freertos/source/tasks.c **** 
 362:bsp/middlewares/freertos/source/tasks.c **** #endif
 363:bsp/middlewares/freertos/source/tasks.c **** 
 364:bsp/middlewares/freertos/source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 365:bsp/middlewares/freertos/source/tasks.c ****  * the errno of the currently running task. */
 366:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 367:bsp/middlewares/freertos/source/tasks.c ****     int FreeRTOS_errno = 0;
 368:bsp/middlewares/freertos/source/tasks.c **** #endif
 369:bsp/middlewares/freertos/source/tasks.c **** 
 370:bsp/middlewares/freertos/source/tasks.c **** /* Other file private variables. --------------------------------*/
 371:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
 372:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 373:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
 374:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 8


 375:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
 376:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending = pdFALSE;
 377:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
 378:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
 379:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised
 380:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle = NULL;                          /*< Holds the 
 381:bsp/middlewares/freertos/source/tasks.c **** 
 382:bsp/middlewares/freertos/source/tasks.c **** /* Improve support for OpenOCD. The kernel tracks Ready tasks via priority lists.
 383:bsp/middlewares/freertos/source/tasks.c ****  * For tracking the state of remote threads, OpenOCD uses uxTopUsedPriority
 384:bsp/middlewares/freertos/source/tasks.c ****  * to determine the number of priority lists to read back from the remote target. */
 385:bsp/middlewares/freertos/source/tasks.c **** const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
 386:bsp/middlewares/freertos/source/tasks.c **** 
 387:bsp/middlewares/freertos/source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 388:bsp/middlewares/freertos/source/tasks.c ****  * interrupts must not manipulate the xStateListItem of a TCB, or any of the
 389:bsp/middlewares/freertos/source/tasks.c ****  * lists the xStateListItem can be referenced from, if the scheduler is suspended.
 390:bsp/middlewares/freertos/source/tasks.c ****  * If an interrupt needs to unblock a task while the scheduler is suspended then it
 391:bsp/middlewares/freertos/source/tasks.c ****  * moves the task's event list item into the xPendingReadyList, ready for the
 392:bsp/middlewares/freertos/source/tasks.c ****  * kernel to move the task from the pending ready list into the real ready list
 393:bsp/middlewares/freertos/source/tasks.c ****  * when the scheduler is unsuspended.  The pending ready list itself can only be
 394:bsp/middlewares/freertos/source/tasks.c ****  * accessed from a critical section. */
 395:bsp/middlewares/freertos/source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) pdFALSE;
 396:bsp/middlewares/freertos/source/tasks.c **** 
 397:bsp/middlewares/freertos/source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 398:bsp/middlewares/freertos/source/tasks.c **** 
 399:bsp/middlewares/freertos/source/tasks.c **** /* Do not move these variables to function scope as doing so prevents the
 400:bsp/middlewares/freertos/source/tasks.c ****  * code working with debuggers that need to remove the static qualifier. */
 401:bsp/middlewares/freertos/source/tasks.c ****     PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;    /*< Holds the value of a timer/c
 402:bsp/middlewares/freertos/source/tasks.c ****     PRIVILEGED_DATA static volatile uint32_t ulTotalRunTime = 0UL; /*< Holds the total amount of ex
 403:bsp/middlewares/freertos/source/tasks.c **** 
 404:bsp/middlewares/freertos/source/tasks.c **** #endif
 405:bsp/middlewares/freertos/source/tasks.c **** 
 406:bsp/middlewares/freertos/source/tasks.c **** /*lint -restore */
 407:bsp/middlewares/freertos/source/tasks.c **** 
 408:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 409:bsp/middlewares/freertos/source/tasks.c **** 
 410:bsp/middlewares/freertos/source/tasks.c **** /* File private functions. --------------------------------*/
 411:bsp/middlewares/freertos/source/tasks.c **** 
 412:bsp/middlewares/freertos/source/tasks.c **** /**
 413:bsp/middlewares/freertos/source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 414:bsp/middlewares/freertos/source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 415:bsp/middlewares/freertos/source/tasks.c ****  * is in any other state.
 416:bsp/middlewares/freertos/source/tasks.c ****  */
 417:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 418:bsp/middlewares/freertos/source/tasks.c **** 
 419:bsp/middlewares/freertos/source/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 420:bsp/middlewares/freertos/source/tasks.c **** 
 421:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 422:bsp/middlewares/freertos/source/tasks.c **** 
 423:bsp/middlewares/freertos/source/tasks.c **** /*
 424:bsp/middlewares/freertos/source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 425:bsp/middlewares/freertos/source/tasks.c ****  * automatically upon the creation of the first task.
 426:bsp/middlewares/freertos/source/tasks.c ****  */
 427:bsp/middlewares/freertos/source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 428:bsp/middlewares/freertos/source/tasks.c **** 
 429:bsp/middlewares/freertos/source/tasks.c **** /*
 430:bsp/middlewares/freertos/source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 431:bsp/middlewares/freertos/source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 9


 432:bsp/middlewares/freertos/source/tasks.c ****  * creation of the first user task.
 433:bsp/middlewares/freertos/source/tasks.c ****  *
 434:bsp/middlewares/freertos/source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 435:bsp/middlewares/freertos/source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 436:bsp/middlewares/freertos/source/tasks.c ****  *
 437:bsp/middlewares/freertos/source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 438:bsp/middlewares/freertos/source/tasks.c ****  *
 439:bsp/middlewares/freertos/source/tasks.c ****  */
 440:bsp/middlewares/freertos/source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters ) PRIVILEGED_FUNCTION;
 441:bsp/middlewares/freertos/source/tasks.c **** 
 442:bsp/middlewares/freertos/source/tasks.c **** /*
 443:bsp/middlewares/freertos/source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 444:bsp/middlewares/freertos/source/tasks.c ****  * including the stack pointed to by the TCB.
 445:bsp/middlewares/freertos/source/tasks.c ****  *
 446:bsp/middlewares/freertos/source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 447:bsp/middlewares/freertos/source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 448:bsp/middlewares/freertos/source/tasks.c ****  */
 449:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 450:bsp/middlewares/freertos/source/tasks.c **** 
 451:bsp/middlewares/freertos/source/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB ) PRIVILEGED_FUNCTION;
 452:bsp/middlewares/freertos/source/tasks.c **** 
 453:bsp/middlewares/freertos/source/tasks.c **** #endif
 454:bsp/middlewares/freertos/source/tasks.c **** 
 455:bsp/middlewares/freertos/source/tasks.c **** /*
 456:bsp/middlewares/freertos/source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 457:bsp/middlewares/freertos/source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 458:bsp/middlewares/freertos/source/tasks.c ****  * and its TCB deleted.
 459:bsp/middlewares/freertos/source/tasks.c ****  */
 460:bsp/middlewares/freertos/source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 461:bsp/middlewares/freertos/source/tasks.c **** 
 462:bsp/middlewares/freertos/source/tasks.c **** /*
 463:bsp/middlewares/freertos/source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 464:bsp/middlewares/freertos/source/tasks.c ****  * either the current or the overflow delayed task list.
 465:bsp/middlewares/freertos/source/tasks.c ****  */
 466:bsp/middlewares/freertos/source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
 467:bsp/middlewares/freertos/source/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely ) PRIVILEGED_FUN
 468:bsp/middlewares/freertos/source/tasks.c **** 
 469:bsp/middlewares/freertos/source/tasks.c **** /*
 470:bsp/middlewares/freertos/source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 471:bsp/middlewares/freertos/source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 472:bsp/middlewares/freertos/source/tasks.c ****  * a suspended list, etc.).
 473:bsp/middlewares/freertos/source/tasks.c ****  *
 474:bsp/middlewares/freertos/source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 475:bsp/middlewares/freertos/source/tasks.c ****  * NORMAL APPLICATION CODE.
 476:bsp/middlewares/freertos/source/tasks.c ****  */
 477:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 478:bsp/middlewares/freertos/source/tasks.c **** 
 479:bsp/middlewares/freertos/source/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
 480:bsp/middlewares/freertos/source/tasks.c ****                                                      List_t * pxList,
 481:bsp/middlewares/freertos/source/tasks.c ****                                                      eTaskState eState ) PRIVILEGED_FUNCTION;
 482:bsp/middlewares/freertos/source/tasks.c **** 
 483:bsp/middlewares/freertos/source/tasks.c **** #endif
 484:bsp/middlewares/freertos/source/tasks.c **** 
 485:bsp/middlewares/freertos/source/tasks.c **** /*
 486:bsp/middlewares/freertos/source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 487:bsp/middlewares/freertos/source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 488:bsp/middlewares/freertos/source/tasks.c ****  */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 10


 489:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 490:bsp/middlewares/freertos/source/tasks.c **** 
 491:bsp/middlewares/freertos/source/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
 492:bsp/middlewares/freertos/source/tasks.c ****                                                      const char pcNameToQuery[] ) PRIVILEGED_FUNCTI
 493:bsp/middlewares/freertos/source/tasks.c **** 
 494:bsp/middlewares/freertos/source/tasks.c **** #endif
 495:bsp/middlewares/freertos/source/tasks.c **** 
 496:bsp/middlewares/freertos/source/tasks.c **** /*
 497:bsp/middlewares/freertos/source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 498:bsp/middlewares/freertos/source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 499:bsp/middlewares/freertos/source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 500:bsp/middlewares/freertos/source/tasks.c ****  */
 501:bsp/middlewares/freertos/source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 502:bsp/middlewares/freertos/source/tasks.c **** 
 503:bsp/middlewares/freertos/source/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVIL
 504:bsp/middlewares/freertos/source/tasks.c **** 
 505:bsp/middlewares/freertos/source/tasks.c **** #endif
 506:bsp/middlewares/freertos/source/tasks.c **** 
 507:bsp/middlewares/freertos/source/tasks.c **** /*
 508:bsp/middlewares/freertos/source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 509:bsp/middlewares/freertos/source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 510:bsp/middlewares/freertos/source/tasks.c ****  *
 511:bsp/middlewares/freertos/source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 512:bsp/middlewares/freertos/source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 513:bsp/middlewares/freertos/source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 514:bsp/middlewares/freertos/source/tasks.c ****  * set to a value other than 1.
 515:bsp/middlewares/freertos/source/tasks.c ****  */
 516:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 517:bsp/middlewares/freertos/source/tasks.c **** 
 518:bsp/middlewares/freertos/source/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 519:bsp/middlewares/freertos/source/tasks.c **** 
 520:bsp/middlewares/freertos/source/tasks.c **** #endif
 521:bsp/middlewares/freertos/source/tasks.c **** 
 522:bsp/middlewares/freertos/source/tasks.c **** /*
 523:bsp/middlewares/freertos/source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 524:bsp/middlewares/freertos/source/tasks.c ****  * will exit the Blocked state.
 525:bsp/middlewares/freertos/source/tasks.c ****  */
 526:bsp/middlewares/freertos/source/tasks.c **** static void prvResetNextTaskUnblockTime( void ) PRIVILEGED_FUNCTION;
 527:bsp/middlewares/freertos/source/tasks.c **** 
 528:bsp/middlewares/freertos/source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 529:bsp/middlewares/freertos/source/tasks.c **** 
 530:bsp/middlewares/freertos/source/tasks.c **** /*
 531:bsp/middlewares/freertos/source/tasks.c ****  * Helper function used to pad task names with spaces when printing out
 532:bsp/middlewares/freertos/source/tasks.c ****  * human readable tables of task information.
 533:bsp/middlewares/freertos/source/tasks.c ****  */
 534:bsp/middlewares/freertos/source/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
 535:bsp/middlewares/freertos/source/tasks.c ****                                         const char * pcTaskName ) PRIVILEGED_FUNCTION;
 536:bsp/middlewares/freertos/source/tasks.c **** 
 537:bsp/middlewares/freertos/source/tasks.c **** #endif
 538:bsp/middlewares/freertos/source/tasks.c **** 
 539:bsp/middlewares/freertos/source/tasks.c **** /*
 540:bsp/middlewares/freertos/source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 541:bsp/middlewares/freertos/source/tasks.c ****  * dynamically to fill in the structure's members.
 542:bsp/middlewares/freertos/source/tasks.c ****  */
 543:bsp/middlewares/freertos/source/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 544:bsp/middlewares/freertos/source/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 545:bsp/middlewares/freertos/source/tasks.c ****                                   const uint32_t ulStackDepth,
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 11


 546:bsp/middlewares/freertos/source/tasks.c ****                                   void * const pvParameters,
 547:bsp/middlewares/freertos/source/tasks.c ****                                   UBaseType_t uxPriority,
 548:bsp/middlewares/freertos/source/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 549:bsp/middlewares/freertos/source/tasks.c ****                                   TCB_t * pxNewTCB,
 550:bsp/middlewares/freertos/source/tasks.c ****                                   const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 551:bsp/middlewares/freertos/source/tasks.c **** 
 552:bsp/middlewares/freertos/source/tasks.c **** /*
 553:bsp/middlewares/freertos/source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 554:bsp/middlewares/freertos/source/tasks.c ****  * under the control of the scheduler.
 555:bsp/middlewares/freertos/source/tasks.c ****  */
 556:bsp/middlewares/freertos/source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB ) PRIVILEGED_FUNCTION;
 557:bsp/middlewares/freertos/source/tasks.c **** 
 558:bsp/middlewares/freertos/source/tasks.c **** /*
 559:bsp/middlewares/freertos/source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 560:bsp/middlewares/freertos/source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 561:bsp/middlewares/freertos/source/tasks.c ****  * called by the function.
 562:bsp/middlewares/freertos/source/tasks.c ****  */
 563:bsp/middlewares/freertos/source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 564:bsp/middlewares/freertos/source/tasks.c **** 
 565:bsp/middlewares/freertos/source/tasks.c ****     static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 566:bsp/middlewares/freertos/source/tasks.c **** 
 567:bsp/middlewares/freertos/source/tasks.c **** #endif
 568:bsp/middlewares/freertos/source/tasks.c **** 
 569:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 570:bsp/middlewares/freertos/source/tasks.c **** 
 571:bsp/middlewares/freertos/source/tasks.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 572:bsp/middlewares/freertos/source/tasks.c **** 
 573:bsp/middlewares/freertos/source/tasks.c ****     TaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode,
 574:bsp/middlewares/freertos/source/tasks.c ****                                     const char * const pcName, /*lint !e971 Unqualified char types 
 575:bsp/middlewares/freertos/source/tasks.c ****                                     const uint32_t ulStackDepth,
 576:bsp/middlewares/freertos/source/tasks.c ****                                     void * const pvParameters,
 577:bsp/middlewares/freertos/source/tasks.c ****                                     UBaseType_t uxPriority,
 578:bsp/middlewares/freertos/source/tasks.c ****                                     StackType_t * const puxStackBuffer,
 579:bsp/middlewares/freertos/source/tasks.c ****                                     StaticTask_t * const pxTaskBuffer )
 580:bsp/middlewares/freertos/source/tasks.c ****     {
 581:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxNewTCB;
 582:bsp/middlewares/freertos/source/tasks.c ****         TaskHandle_t xReturn;
 583:bsp/middlewares/freertos/source/tasks.c **** 
 584:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( puxStackBuffer != NULL );
 585:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 586:bsp/middlewares/freertos/source/tasks.c **** 
 587:bsp/middlewares/freertos/source/tasks.c ****         #if ( configASSERT_DEFINED == 1 )
 588:bsp/middlewares/freertos/source/tasks.c ****             {
 589:bsp/middlewares/freertos/source/tasks.c ****                 /* Sanity check that the size of the structure used to declare a
 590:bsp/middlewares/freertos/source/tasks.c ****                  * variable of type StaticTask_t equals the size of the real task
 591:bsp/middlewares/freertos/source/tasks.c ****                  * structure. */
 592:bsp/middlewares/freertos/source/tasks.c ****                 volatile size_t xSize = sizeof( StaticTask_t );
 593:bsp/middlewares/freertos/source/tasks.c ****                 configASSERT( xSize == sizeof( TCB_t ) );
 594:bsp/middlewares/freertos/source/tasks.c ****                 ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 595:bsp/middlewares/freertos/source/tasks.c ****             }
 596:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configASSERT_DEFINED */
 597:bsp/middlewares/freertos/source/tasks.c **** 
 598:bsp/middlewares/freertos/source/tasks.c ****         if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 599:bsp/middlewares/freertos/source/tasks.c ****         {
 600:bsp/middlewares/freertos/source/tasks.c ****             /* The memory used for the task's TCB and stack are passed into this
 601:bsp/middlewares/freertos/source/tasks.c ****              * function - use them. */
 602:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the stru
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 12


 603:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 604:bsp/middlewares/freertos/source/tasks.c **** 
 605:bsp/middlewares/freertos/source/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has be
 606:bsp/middlewares/freertos/source/tasks.c ****                 {
 607:bsp/middlewares/freertos/source/tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 608:bsp/middlewares/freertos/source/tasks.c ****                      * task was created statically in case the task is later deleted. */
 609:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 610:bsp/middlewares/freertos/source/tasks.c ****                 }
 611:bsp/middlewares/freertos/source/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 612:bsp/middlewares/freertos/source/tasks.c **** 
 613:bsp/middlewares/freertos/source/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xRet
 614:bsp/middlewares/freertos/source/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 615:bsp/middlewares/freertos/source/tasks.c ****         }
 616:bsp/middlewares/freertos/source/tasks.c ****         else
 617:bsp/middlewares/freertos/source/tasks.c ****         {
 618:bsp/middlewares/freertos/source/tasks.c ****             xReturn = NULL;
 619:bsp/middlewares/freertos/source/tasks.c ****         }
 620:bsp/middlewares/freertos/source/tasks.c **** 
 621:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
 622:bsp/middlewares/freertos/source/tasks.c ****     }
 623:bsp/middlewares/freertos/source/tasks.c **** 
 624:bsp/middlewares/freertos/source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 625:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 626:bsp/middlewares/freertos/source/tasks.c **** 
 627:bsp/middlewares/freertos/source/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 628:bsp/middlewares/freertos/source/tasks.c **** 
 629:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
 630:bsp/middlewares/freertos/source/tasks.c ****                                             TaskHandle_t * pxCreatedTask )
 631:bsp/middlewares/freertos/source/tasks.c ****     {
 632:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxNewTCB;
 633:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 634:bsp/middlewares/freertos/source/tasks.c **** 
 635:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 636:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 637:bsp/middlewares/freertos/source/tasks.c **** 
 638:bsp/middlewares/freertos/source/tasks.c ****         if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NUL
 639:bsp/middlewares/freertos/source/tasks.c ****         {
 640:bsp/middlewares/freertos/source/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 641:bsp/middlewares/freertos/source/tasks.c ****              * on the implementation of the port malloc function and whether or
 642:bsp/middlewares/freertos/source/tasks.c ****              * not static allocation is being used. */
 643:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 644:bsp/middlewares/freertos/source/tasks.c **** 
 645:bsp/middlewares/freertos/source/tasks.c ****             /* Store the stack location in the TCB. */
 646:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 647:bsp/middlewares/freertos/source/tasks.c **** 
 648:bsp/middlewares/freertos/source/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 649:bsp/middlewares/freertos/source/tasks.c ****                 {
 650:bsp/middlewares/freertos/source/tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 651:bsp/middlewares/freertos/source/tasks.c ****                      * task was created statically in case the task is later deleted. */
 652:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 653:bsp/middlewares/freertos/source/tasks.c ****                 }
 654:bsp/middlewares/freertos/source/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 655:bsp/middlewares/freertos/source/tasks.c **** 
 656:bsp/middlewares/freertos/source/tasks.c ****             prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 657:bsp/middlewares/freertos/source/tasks.c ****                                   pxTaskDefinition->pcName,
 658:bsp/middlewares/freertos/source/tasks.c ****                                   ( uint32_t ) pxTaskDefinition->usStackDepth,
 659:bsp/middlewares/freertos/source/tasks.c ****                                   pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 13


 660:bsp/middlewares/freertos/source/tasks.c ****                                   pxTaskDefinition->uxPriority,
 661:bsp/middlewares/freertos/source/tasks.c ****                                   pxCreatedTask, pxNewTCB,
 662:bsp/middlewares/freertos/source/tasks.c ****                                   pxTaskDefinition->xRegions );
 663:bsp/middlewares/freertos/source/tasks.c **** 
 664:bsp/middlewares/freertos/source/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 665:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdPASS;
 666:bsp/middlewares/freertos/source/tasks.c ****         }
 667:bsp/middlewares/freertos/source/tasks.c **** 
 668:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
 669:bsp/middlewares/freertos/source/tasks.c ****     }
 670:bsp/middlewares/freertos/source/tasks.c **** 
 671:bsp/middlewares/freertos/source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 672:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 673:bsp/middlewares/freertos/source/tasks.c **** 
 674:bsp/middlewares/freertos/source/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 675:bsp/middlewares/freertos/source/tasks.c **** 
 676:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
 677:bsp/middlewares/freertos/source/tasks.c ****                                       TaskHandle_t * pxCreatedTask )
 678:bsp/middlewares/freertos/source/tasks.c ****     {
 679:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxNewTCB;
 680:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 681:bsp/middlewares/freertos/source/tasks.c **** 
 682:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer );
 683:bsp/middlewares/freertos/source/tasks.c **** 
 684:bsp/middlewares/freertos/source/tasks.c ****         if( pxTaskDefinition->puxStackBuffer != NULL )
 685:bsp/middlewares/freertos/source/tasks.c ****         {
 686:bsp/middlewares/freertos/source/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 687:bsp/middlewares/freertos/source/tasks.c ****              * on the implementation of the port malloc function and whether or
 688:bsp/middlewares/freertos/source/tasks.c ****              * not static allocation is being used. */
 689:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 690:bsp/middlewares/freertos/source/tasks.c **** 
 691:bsp/middlewares/freertos/source/tasks.c ****             if( pxNewTCB != NULL )
 692:bsp/middlewares/freertos/source/tasks.c ****             {
 693:bsp/middlewares/freertos/source/tasks.c ****                 /* Store the stack location in the TCB. */
 694:bsp/middlewares/freertos/source/tasks.c ****                 pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 695:bsp/middlewares/freertos/source/tasks.c **** 
 696:bsp/middlewares/freertos/source/tasks.c ****                 #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 697:bsp/middlewares/freertos/source/tasks.c ****                     {
 698:bsp/middlewares/freertos/source/tasks.c ****                         /* Tasks can be created statically or dynamically, so note
 699:bsp/middlewares/freertos/source/tasks.c ****                          * this task had a statically allocated stack in case it is
 700:bsp/middlewares/freertos/source/tasks.c ****                          * later deleted.  The TCB was allocated dynamically. */
 701:bsp/middlewares/freertos/source/tasks.c ****                         pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 702:bsp/middlewares/freertos/source/tasks.c ****                     }
 703:bsp/middlewares/freertos/source/tasks.c ****                 #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 704:bsp/middlewares/freertos/source/tasks.c **** 
 705:bsp/middlewares/freertos/source/tasks.c ****                 prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 706:bsp/middlewares/freertos/source/tasks.c ****                                       pxTaskDefinition->pcName,
 707:bsp/middlewares/freertos/source/tasks.c ****                                       ( uint32_t ) pxTaskDefinition->usStackDepth,
 708:bsp/middlewares/freertos/source/tasks.c ****                                       pxTaskDefinition->pvParameters,
 709:bsp/middlewares/freertos/source/tasks.c ****                                       pxTaskDefinition->uxPriority,
 710:bsp/middlewares/freertos/source/tasks.c ****                                       pxCreatedTask, pxNewTCB,
 711:bsp/middlewares/freertos/source/tasks.c ****                                       pxTaskDefinition->xRegions );
 712:bsp/middlewares/freertos/source/tasks.c **** 
 713:bsp/middlewares/freertos/source/tasks.c ****                 prvAddNewTaskToReadyList( pxNewTCB );
 714:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdPASS;
 715:bsp/middlewares/freertos/source/tasks.c ****             }
 716:bsp/middlewares/freertos/source/tasks.c ****         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 14


 717:bsp/middlewares/freertos/source/tasks.c **** 
 718:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
 719:bsp/middlewares/freertos/source/tasks.c ****     }
 720:bsp/middlewares/freertos/source/tasks.c **** 
 721:bsp/middlewares/freertos/source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 722:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 723:bsp/middlewares/freertos/source/tasks.c **** 
 724:bsp/middlewares/freertos/source/tasks.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 725:bsp/middlewares/freertos/source/tasks.c **** 
 726:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
 727:bsp/middlewares/freertos/source/tasks.c ****                             const char * const pcName, /*lint !e971 Unqualified char types are allo
 728:bsp/middlewares/freertos/source/tasks.c ****                             const configSTACK_DEPTH_TYPE usStackDepth,
 729:bsp/middlewares/freertos/source/tasks.c ****                             void * const pvParameters,
 730:bsp/middlewares/freertos/source/tasks.c ****                             UBaseType_t uxPriority,
 731:bsp/middlewares/freertos/source/tasks.c ****                             TaskHandle_t * const pxCreatedTask )
 732:bsp/middlewares/freertos/source/tasks.c ****     {
 733:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxNewTCB;
 734:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
 735:bsp/middlewares/freertos/source/tasks.c **** 
 736:bsp/middlewares/freertos/source/tasks.c ****         /* If the stack grows down then allocate the stack then the TCB so the stack
 737:bsp/middlewares/freertos/source/tasks.c ****          * does not grow into the TCB.  Likewise if the stack grows up then allocate
 738:bsp/middlewares/freertos/source/tasks.c ****          * the TCB then the stack. */
 739:bsp/middlewares/freertos/source/tasks.c ****         #if ( portSTACK_GROWTH > 0 )
 740:bsp/middlewares/freertos/source/tasks.c ****             {
 741:bsp/middlewares/freertos/source/tasks.c ****                 /* Allocate space for the TCB.  Where the memory comes from depends on
 742:bsp/middlewares/freertos/source/tasks.c ****                  * the implementation of the port malloc function and whether or not static
 743:bsp/middlewares/freertos/source/tasks.c ****                  * allocation is being used. */
 744:bsp/middlewares/freertos/source/tasks.c ****                 pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 745:bsp/middlewares/freertos/source/tasks.c **** 
 746:bsp/middlewares/freertos/source/tasks.c ****                 if( pxNewTCB != NULL )
 747:bsp/middlewares/freertos/source/tasks.c ****                 {
 748:bsp/middlewares/freertos/source/tasks.c ****                     /* Allocate space for the stack used by the task being created.
 749:bsp/middlewares/freertos/source/tasks.c ****                      * The base of the stack memory stored in the TCB so the task can
 750:bsp/middlewares/freertos/source/tasks.c ****                      * be deleted later if required. */
 751:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth
 752:bsp/middlewares/freertos/source/tasks.c **** 
 753:bsp/middlewares/freertos/source/tasks.c ****                     if( pxNewTCB->pxStack == NULL )
 754:bsp/middlewares/freertos/source/tasks.c ****                     {
 755:bsp/middlewares/freertos/source/tasks.c ****                         /* Could not allocate the stack.  Delete the allocated TCB. */
 756:bsp/middlewares/freertos/source/tasks.c ****                         vPortFree( pxNewTCB );
 757:bsp/middlewares/freertos/source/tasks.c ****                         pxNewTCB = NULL;
 758:bsp/middlewares/freertos/source/tasks.c ****                     }
 759:bsp/middlewares/freertos/source/tasks.c ****                 }
 760:bsp/middlewares/freertos/source/tasks.c ****             }
 761:bsp/middlewares/freertos/source/tasks.c ****         #else /* portSTACK_GROWTH */
 762:bsp/middlewares/freertos/source/tasks.c ****             {
 763:bsp/middlewares/freertos/source/tasks.c ****                 StackType_t * pxStack;
 764:bsp/middlewares/freertos/source/tasks.c **** 
 765:bsp/middlewares/freertos/source/tasks.c ****                 /* Allocate space for the stack used by the task being created. */
 766:bsp/middlewares/freertos/source/tasks.c ****                 pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); 
 767:bsp/middlewares/freertos/source/tasks.c **** 
 768:bsp/middlewares/freertos/source/tasks.c ****                 if( pxStack != NULL )
 769:bsp/middlewares/freertos/source/tasks.c ****                 {
 770:bsp/middlewares/freertos/source/tasks.c ****                     /* Allocate space for the TCB. */
 771:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 Al
 772:bsp/middlewares/freertos/source/tasks.c **** 
 773:bsp/middlewares/freertos/source/tasks.c ****                     if( pxNewTCB != NULL )
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 15


 774:bsp/middlewares/freertos/source/tasks.c ****                     {
 775:bsp/middlewares/freertos/source/tasks.c ****                         /* Store the stack location in the TCB. */
 776:bsp/middlewares/freertos/source/tasks.c ****                         pxNewTCB->pxStack = pxStack;
 777:bsp/middlewares/freertos/source/tasks.c ****                     }
 778:bsp/middlewares/freertos/source/tasks.c ****                     else
 779:bsp/middlewares/freertos/source/tasks.c ****                     {
 780:bsp/middlewares/freertos/source/tasks.c ****                         /* The stack cannot be used as the TCB was not created.  Free
 781:bsp/middlewares/freertos/source/tasks.c ****                          * it again. */
 782:bsp/middlewares/freertos/source/tasks.c ****                         vPortFree( pxStack );
 783:bsp/middlewares/freertos/source/tasks.c ****                     }
 784:bsp/middlewares/freertos/source/tasks.c ****                 }
 785:bsp/middlewares/freertos/source/tasks.c ****                 else
 786:bsp/middlewares/freertos/source/tasks.c ****                 {
 787:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB = NULL;
 788:bsp/middlewares/freertos/source/tasks.c ****                 }
 789:bsp/middlewares/freertos/source/tasks.c ****             }
 790:bsp/middlewares/freertos/source/tasks.c ****         #endif /* portSTACK_GROWTH */
 791:bsp/middlewares/freertos/source/tasks.c **** 
 792:bsp/middlewares/freertos/source/tasks.c ****         if( pxNewTCB != NULL )
 793:bsp/middlewares/freertos/source/tasks.c ****         {
 794:bsp/middlewares/freertos/source/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has be
 795:bsp/middlewares/freertos/source/tasks.c ****                 {
 796:bsp/middlewares/freertos/source/tasks.c ****                     /* Tasks can be created statically or dynamically, so note this
 797:bsp/middlewares/freertos/source/tasks.c ****                      * task was created dynamically in case it is later deleted. */
 798:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 799:bsp/middlewares/freertos/source/tasks.c ****                 }
 800:bsp/middlewares/freertos/source/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 801:bsp/middlewares/freertos/source/tasks.c **** 
 802:bsp/middlewares/freertos/source/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPr
 803:bsp/middlewares/freertos/source/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 804:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdPASS;
 805:bsp/middlewares/freertos/source/tasks.c ****         }
 806:bsp/middlewares/freertos/source/tasks.c ****         else
 807:bsp/middlewares/freertos/source/tasks.c ****         {
 808:bsp/middlewares/freertos/source/tasks.c ****             xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 809:bsp/middlewares/freertos/source/tasks.c ****         }
 810:bsp/middlewares/freertos/source/tasks.c **** 
 811:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
 812:bsp/middlewares/freertos/source/tasks.c ****     }
 813:bsp/middlewares/freertos/source/tasks.c **** 
 814:bsp/middlewares/freertos/source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 815:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 816:bsp/middlewares/freertos/source/tasks.c **** 
 817:bsp/middlewares/freertos/source/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 818:bsp/middlewares/freertos/source/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 819:bsp/middlewares/freertos/source/tasks.c ****                                   const uint32_t ulStackDepth,
 820:bsp/middlewares/freertos/source/tasks.c ****                                   void * const pvParameters,
 821:bsp/middlewares/freertos/source/tasks.c ****                                   UBaseType_t uxPriority,
 822:bsp/middlewares/freertos/source/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 823:bsp/middlewares/freertos/source/tasks.c ****                                   TCB_t * pxNewTCB,
 824:bsp/middlewares/freertos/source/tasks.c ****                                   const MemoryRegion_t * const xRegions )
 825:bsp/middlewares/freertos/source/tasks.c **** {
 826:bsp/middlewares/freertos/source/tasks.c ****     StackType_t * pxTopOfStack;
 827:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t x;
 828:bsp/middlewares/freertos/source/tasks.c **** 
 829:bsp/middlewares/freertos/source/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 830:bsp/middlewares/freertos/source/tasks.c ****         /* Should the task be created in privileged mode? */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 16


 831:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xRunPrivileged;
 832:bsp/middlewares/freertos/source/tasks.c **** 
 833:bsp/middlewares/freertos/source/tasks.c ****         if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 834:bsp/middlewares/freertos/source/tasks.c ****         {
 835:bsp/middlewares/freertos/source/tasks.c ****             xRunPrivileged = pdTRUE;
 836:bsp/middlewares/freertos/source/tasks.c ****         }
 837:bsp/middlewares/freertos/source/tasks.c ****         else
 838:bsp/middlewares/freertos/source/tasks.c ****         {
 839:bsp/middlewares/freertos/source/tasks.c ****             xRunPrivileged = pdFALSE;
 840:bsp/middlewares/freertos/source/tasks.c ****         }
 841:bsp/middlewares/freertos/source/tasks.c ****         uxPriority &= ~portPRIVILEGE_BIT;
 842:bsp/middlewares/freertos/source/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS == 1 */
 843:bsp/middlewares/freertos/source/tasks.c **** 
 844:bsp/middlewares/freertos/source/tasks.c ****     /* Avoid dependency on memset() if it is not required. */
 845:bsp/middlewares/freertos/source/tasks.c ****     #if ( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 846:bsp/middlewares/freertos/source/tasks.c ****         {
 847:bsp/middlewares/freertos/source/tasks.c ****             /* Fill the stack with a known value to assist debugging. */
 848:bsp/middlewares/freertos/source/tasks.c ****             ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth
 849:bsp/middlewares/freertos/source/tasks.c ****         }
 850:bsp/middlewares/freertos/source/tasks.c ****     #endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 851:bsp/middlewares/freertos/source/tasks.c **** 
 852:bsp/middlewares/freertos/source/tasks.c ****     /* Calculate the top of stack address.  This depends on whether the stack
 853:bsp/middlewares/freertos/source/tasks.c ****      * grows from high memory to low (as per the 80x86) or vice versa.
 854:bsp/middlewares/freertos/source/tasks.c ****      * portSTACK_GROWTH is used to make the result positive or negative as required
 855:bsp/middlewares/freertos/source/tasks.c ****      * by the port. */
 856:bsp/middlewares/freertos/source/tasks.c ****     #if ( portSTACK_GROWTH < 0 )
 857:bsp/middlewares/freertos/source/tasks.c ****         {
 858:bsp/middlewares/freertos/source/tasks.c ****             pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 859:bsp/middlewares/freertos/source/tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
 860:bsp/middlewares/freertos/source/tasks.c **** 
 861:bsp/middlewares/freertos/source/tasks.c ****             /* Check the alignment of the calculated top of stack is correct. */
 862:bsp/middlewares/freertos/source/tasks.c ****             configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) po
 863:bsp/middlewares/freertos/source/tasks.c **** 
 864:bsp/middlewares/freertos/source/tasks.c ****             #if ( configRECORD_STACK_HIGH_ADDRESS == 1 )
 865:bsp/middlewares/freertos/source/tasks.c ****                 {
 866:bsp/middlewares/freertos/source/tasks.c ****                     /* Also record the stack's high address, which may assist
 867:bsp/middlewares/freertos/source/tasks.c ****                      * debugging. */
 868:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB->pxEndOfStack = pxTopOfStack;
 869:bsp/middlewares/freertos/source/tasks.c ****                 }
 870:bsp/middlewares/freertos/source/tasks.c ****             #endif /* configRECORD_STACK_HIGH_ADDRESS */
 871:bsp/middlewares/freertos/source/tasks.c ****         }
 872:bsp/middlewares/freertos/source/tasks.c ****     #else /* portSTACK_GROWTH */
 873:bsp/middlewares/freertos/source/tasks.c ****         {
 874:bsp/middlewares/freertos/source/tasks.c ****             pxTopOfStack = pxNewTCB->pxStack;
 875:bsp/middlewares/freertos/source/tasks.c **** 
 876:bsp/middlewares/freertos/source/tasks.c ****             /* Check the alignment of the stack buffer is correct. */
 877:bsp/middlewares/freertos/source/tasks.c ****             configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE
 878:bsp/middlewares/freertos/source/tasks.c **** 
 879:bsp/middlewares/freertos/source/tasks.c ****             /* The other extreme of the stack space is required if stack checking is
 880:bsp/middlewares/freertos/source/tasks.c ****              * performed. */
 881:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 882:bsp/middlewares/freertos/source/tasks.c ****         }
 883:bsp/middlewares/freertos/source/tasks.c ****     #endif /* portSTACK_GROWTH */
 884:bsp/middlewares/freertos/source/tasks.c **** 
 885:bsp/middlewares/freertos/source/tasks.c ****     /* Store the task name in the TCB. */
 886:bsp/middlewares/freertos/source/tasks.c ****     if( pcName != NULL )
 887:bsp/middlewares/freertos/source/tasks.c ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 17


 888:bsp/middlewares/freertos/source/tasks.c ****         for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 889:bsp/middlewares/freertos/source/tasks.c ****         {
 890:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 891:bsp/middlewares/freertos/source/tasks.c **** 
 892:bsp/middlewares/freertos/source/tasks.c ****             /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 893:bsp/middlewares/freertos/source/tasks.c ****              * configMAX_TASK_NAME_LEN characters just in case the memory after the
 894:bsp/middlewares/freertos/source/tasks.c ****              * string is not accessible (extremely unlikely). */
 895:bsp/middlewares/freertos/source/tasks.c ****             if( pcName[ x ] == ( char ) 0x00 )
 896:bsp/middlewares/freertos/source/tasks.c ****             {
 897:bsp/middlewares/freertos/source/tasks.c ****                 break;
 898:bsp/middlewares/freertos/source/tasks.c ****             }
 899:bsp/middlewares/freertos/source/tasks.c ****             else
 900:bsp/middlewares/freertos/source/tasks.c ****             {
 901:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 902:bsp/middlewares/freertos/source/tasks.c ****             }
 903:bsp/middlewares/freertos/source/tasks.c ****         }
 904:bsp/middlewares/freertos/source/tasks.c **** 
 905:bsp/middlewares/freertos/source/tasks.c ****         /* Ensure the name string is terminated in the case that the string length
 906:bsp/middlewares/freertos/source/tasks.c ****          * was greater or equal to configMAX_TASK_NAME_LEN. */
 907:bsp/middlewares/freertos/source/tasks.c ****         pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 908:bsp/middlewares/freertos/source/tasks.c ****     }
 909:bsp/middlewares/freertos/source/tasks.c ****     else
 910:bsp/middlewares/freertos/source/tasks.c ****     {
 911:bsp/middlewares/freertos/source/tasks.c ****         /* The task has not been given a name, so just ensure there is a NULL
 912:bsp/middlewares/freertos/source/tasks.c ****          * terminator when it is read out. */
 913:bsp/middlewares/freertos/source/tasks.c ****         pxNewTCB->pcTaskName[ 0 ] = 0x00;
 914:bsp/middlewares/freertos/source/tasks.c ****     }
 915:bsp/middlewares/freertos/source/tasks.c **** 
 916:bsp/middlewares/freertos/source/tasks.c ****     /* This is used as an array index so must ensure it's not too large.  First
 917:bsp/middlewares/freertos/source/tasks.c ****      * remove the privilege bit if one is present. */
 918:bsp/middlewares/freertos/source/tasks.c ****     if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 919:bsp/middlewares/freertos/source/tasks.c ****     {
 920:bsp/middlewares/freertos/source/tasks.c ****         uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 921:bsp/middlewares/freertos/source/tasks.c ****     }
 922:bsp/middlewares/freertos/source/tasks.c ****     else
 923:bsp/middlewares/freertos/source/tasks.c ****     {
 924:bsp/middlewares/freertos/source/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 925:bsp/middlewares/freertos/source/tasks.c ****     }
 926:bsp/middlewares/freertos/source/tasks.c **** 
 927:bsp/middlewares/freertos/source/tasks.c ****     pxNewTCB->uxPriority = uxPriority;
 928:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 929:bsp/middlewares/freertos/source/tasks.c ****         {
 930:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->uxBasePriority = uxPriority;
 931:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->uxMutexesHeld = 0;
 932:bsp/middlewares/freertos/source/tasks.c ****         }
 933:bsp/middlewares/freertos/source/tasks.c ****     #endif /* configUSE_MUTEXES */
 934:bsp/middlewares/freertos/source/tasks.c **** 
 935:bsp/middlewares/freertos/source/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 936:bsp/middlewares/freertos/source/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 937:bsp/middlewares/freertos/source/tasks.c **** 
 938:bsp/middlewares/freertos/source/tasks.c ****     /* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 939:bsp/middlewares/freertos/source/tasks.c ****      * back to  the containing TCB from a generic item in a list. */
 940:bsp/middlewares/freertos/source/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 941:bsp/middlewares/freertos/source/tasks.c **** 
 942:bsp/middlewares/freertos/source/tasks.c ****     /* Event lists are always in priority order. */
 943:bsp/middlewares/freertos/source/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - (
 944:bsp/middlewares/freertos/source/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 18


 945:bsp/middlewares/freertos/source/tasks.c **** 
 946:bsp/middlewares/freertos/source/tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 947:bsp/middlewares/freertos/source/tasks.c ****         {
 948:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 949:bsp/middlewares/freertos/source/tasks.c ****         }
 950:bsp/middlewares/freertos/source/tasks.c ****     #endif /* portCRITICAL_NESTING_IN_TCB */
 951:bsp/middlewares/freertos/source/tasks.c **** 
 952:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 953:bsp/middlewares/freertos/source/tasks.c ****         {
 954:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->pxTaskTag = NULL;
 955:bsp/middlewares/freertos/source/tasks.c ****         }
 956:bsp/middlewares/freertos/source/tasks.c ****     #endif /* configUSE_APPLICATION_TASK_TAG */
 957:bsp/middlewares/freertos/source/tasks.c **** 
 958:bsp/middlewares/freertos/source/tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 959:bsp/middlewares/freertos/source/tasks.c ****         {
 960:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->ulRunTimeCounter = 0UL;
 961:bsp/middlewares/freertos/source/tasks.c ****         }
 962:bsp/middlewares/freertos/source/tasks.c ****     #endif /* configGENERATE_RUN_TIME_STATS */
 963:bsp/middlewares/freertos/source/tasks.c **** 
 964:bsp/middlewares/freertos/source/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 965:bsp/middlewares/freertos/source/tasks.c ****         {
 966:bsp/middlewares/freertos/source/tasks.c ****             vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ul
 967:bsp/middlewares/freertos/source/tasks.c ****         }
 968:bsp/middlewares/freertos/source/tasks.c ****     #else
 969:bsp/middlewares/freertos/source/tasks.c ****         {
 970:bsp/middlewares/freertos/source/tasks.c ****             /* Avoid compiler warning about unreferenced parameter. */
 971:bsp/middlewares/freertos/source/tasks.c ****             ( void ) xRegions;
 972:bsp/middlewares/freertos/source/tasks.c ****         }
 973:bsp/middlewares/freertos/source/tasks.c ****     #endif
 974:bsp/middlewares/freertos/source/tasks.c **** 
 975:bsp/middlewares/freertos/source/tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 976:bsp/middlewares/freertos/source/tasks.c ****         {
 977:bsp/middlewares/freertos/source/tasks.c ****             memset( ( void * ) &( pxNewTCB->pvThreadLocalStoragePointers[ 0 ] ), 0x00, sizeof( pxNe
 978:bsp/middlewares/freertos/source/tasks.c ****         }
 979:bsp/middlewares/freertos/source/tasks.c ****     #endif
 980:bsp/middlewares/freertos/source/tasks.c **** 
 981:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 982:bsp/middlewares/freertos/source/tasks.c ****         {
 983:bsp/middlewares/freertos/source/tasks.c ****             memset( ( void * ) &( pxNewTCB->ulNotifiedValue[ 0 ] ), 0x00, sizeof( pxNewTCB->ulNotif
 984:bsp/middlewares/freertos/source/tasks.c ****             memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyS
 985:bsp/middlewares/freertos/source/tasks.c ****         }
 986:bsp/middlewares/freertos/source/tasks.c ****     #endif
 987:bsp/middlewares/freertos/source/tasks.c **** 
 988:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_NEWLIB_REENTRANT == 1 )
 989:bsp/middlewares/freertos/source/tasks.c ****         {
 990:bsp/middlewares/freertos/source/tasks.c ****             /* Initialise this task's Newlib reent structure.
 991:bsp/middlewares/freertos/source/tasks.c ****              * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 992:bsp/middlewares/freertos/source/tasks.c ****              * for additional information. */
 993:bsp/middlewares/freertos/source/tasks.c ****             _REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 994:bsp/middlewares/freertos/source/tasks.c ****         }
 995:bsp/middlewares/freertos/source/tasks.c ****     #endif
 996:bsp/middlewares/freertos/source/tasks.c **** 
 997:bsp/middlewares/freertos/source/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 998:bsp/middlewares/freertos/source/tasks.c ****         {
 999:bsp/middlewares/freertos/source/tasks.c ****             pxNewTCB->ucDelayAborted = pdFALSE;
1000:bsp/middlewares/freertos/source/tasks.c ****         }
1001:bsp/middlewares/freertos/source/tasks.c ****     #endif
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 19


1002:bsp/middlewares/freertos/source/tasks.c **** 
1003:bsp/middlewares/freertos/source/tasks.c ****     /* Initialize the TCB stack to look as if the task was already running,
1004:bsp/middlewares/freertos/source/tasks.c ****      * but had been interrupted by the scheduler.  The return address is set
1005:bsp/middlewares/freertos/source/tasks.c ****      * to the start of the task function. Once the stack has been initialised
1006:bsp/middlewares/freertos/source/tasks.c ****      * the top of stack variable is updated. */
1007:bsp/middlewares/freertos/source/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
1008:bsp/middlewares/freertos/source/tasks.c ****         {
1009:bsp/middlewares/freertos/source/tasks.c ****             /* If the port has capability to detect stack overflow,
1010:bsp/middlewares/freertos/source/tasks.c ****              * pass the stack end address to the stack initialization
1011:bsp/middlewares/freertos/source/tasks.c ****              * function as well. */
1012:bsp/middlewares/freertos/source/tasks.c ****             #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1013:bsp/middlewares/freertos/source/tasks.c ****                 {
1014:bsp/middlewares/freertos/source/tasks.c ****                     #if ( portSTACK_GROWTH < 0 )
1015:bsp/middlewares/freertos/source/tasks.c ****                         {
1016:bsp/middlewares/freertos/source/tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1017:bsp/middlewares/freertos/source/tasks.c ****                         }
1018:bsp/middlewares/freertos/source/tasks.c ****                     #else /* portSTACK_GROWTH */
1019:bsp/middlewares/freertos/source/tasks.c ****                         {
1020:bsp/middlewares/freertos/source/tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1021:bsp/middlewares/freertos/source/tasks.c ****                         }
1022:bsp/middlewares/freertos/source/tasks.c ****                     #endif /* portSTACK_GROWTH */
1023:bsp/middlewares/freertos/source/tasks.c ****                 }
1024:bsp/middlewares/freertos/source/tasks.c ****             #else /* portHAS_STACK_OVERFLOW_CHECKING */
1025:bsp/middlewares/freertos/source/tasks.c ****                 {
1026:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvPar
1027:bsp/middlewares/freertos/source/tasks.c ****                 }
1028:bsp/middlewares/freertos/source/tasks.c ****             #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1029:bsp/middlewares/freertos/source/tasks.c ****         }
1030:bsp/middlewares/freertos/source/tasks.c ****     #else /* portUSING_MPU_WRAPPERS */
1031:bsp/middlewares/freertos/source/tasks.c ****         {
1032:bsp/middlewares/freertos/source/tasks.c ****             /* If the port has capability to detect stack overflow,
1033:bsp/middlewares/freertos/source/tasks.c ****              * pass the stack end address to the stack initialization
1034:bsp/middlewares/freertos/source/tasks.c ****              * function as well. */
1035:bsp/middlewares/freertos/source/tasks.c ****             #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1036:bsp/middlewares/freertos/source/tasks.c ****                 {
1037:bsp/middlewares/freertos/source/tasks.c ****                     #if ( portSTACK_GROWTH < 0 )
1038:bsp/middlewares/freertos/source/tasks.c ****                         {
1039:bsp/middlewares/freertos/source/tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1040:bsp/middlewares/freertos/source/tasks.c ****                         }
1041:bsp/middlewares/freertos/source/tasks.c ****                     #else /* portSTACK_GROWTH */
1042:bsp/middlewares/freertos/source/tasks.c ****                         {
1043:bsp/middlewares/freertos/source/tasks.c ****                             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB-
1044:bsp/middlewares/freertos/source/tasks.c ****                         }
1045:bsp/middlewares/freertos/source/tasks.c ****                     #endif /* portSTACK_GROWTH */
1046:bsp/middlewares/freertos/source/tasks.c ****                 }
1047:bsp/middlewares/freertos/source/tasks.c ****             #else /* portHAS_STACK_OVERFLOW_CHECKING */
1048:bsp/middlewares/freertos/source/tasks.c ****                 {
1049:bsp/middlewares/freertos/source/tasks.c ****                     pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvPar
1050:bsp/middlewares/freertos/source/tasks.c ****                 }
1051:bsp/middlewares/freertos/source/tasks.c ****             #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1052:bsp/middlewares/freertos/source/tasks.c ****         }
1053:bsp/middlewares/freertos/source/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS */
1054:bsp/middlewares/freertos/source/tasks.c **** 
1055:bsp/middlewares/freertos/source/tasks.c ****     if( pxCreatedTask != NULL )
1056:bsp/middlewares/freertos/source/tasks.c ****     {
1057:bsp/middlewares/freertos/source/tasks.c ****         /* Pass the handle out in an anonymous way.  The handle can be used to
1058:bsp/middlewares/freertos/source/tasks.c ****          * change the created task's priority, delete the created task, etc.*/
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 20


1059:bsp/middlewares/freertos/source/tasks.c ****         *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1060:bsp/middlewares/freertos/source/tasks.c ****     }
1061:bsp/middlewares/freertos/source/tasks.c ****     else
1062:bsp/middlewares/freertos/source/tasks.c ****     {
1063:bsp/middlewares/freertos/source/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1064:bsp/middlewares/freertos/source/tasks.c ****     }
1065:bsp/middlewares/freertos/source/tasks.c **** }
1066:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1067:bsp/middlewares/freertos/source/tasks.c **** 
1068:bsp/middlewares/freertos/source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
1069:bsp/middlewares/freertos/source/tasks.c **** {
1070:bsp/middlewares/freertos/source/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
1071:bsp/middlewares/freertos/source/tasks.c ****      * updated. */
1072:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
1073:bsp/middlewares/freertos/source/tasks.c ****     {
1074:bsp/middlewares/freertos/source/tasks.c ****         uxCurrentNumberOfTasks++;
1075:bsp/middlewares/freertos/source/tasks.c **** 
1076:bsp/middlewares/freertos/source/tasks.c ****         if( pxCurrentTCB == NULL )
1077:bsp/middlewares/freertos/source/tasks.c ****         {
1078:bsp/middlewares/freertos/source/tasks.c ****             /* There are no other tasks, or all the other tasks are in
1079:bsp/middlewares/freertos/source/tasks.c ****              * the suspended state - make this the current task. */
1080:bsp/middlewares/freertos/source/tasks.c ****             pxCurrentTCB = pxNewTCB;
1081:bsp/middlewares/freertos/source/tasks.c **** 
1082:bsp/middlewares/freertos/source/tasks.c ****             if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1083:bsp/middlewares/freertos/source/tasks.c ****             {
1084:bsp/middlewares/freertos/source/tasks.c ****                 /* This is the first task to be created so do the preliminary
1085:bsp/middlewares/freertos/source/tasks.c ****                  * initialisation required.  We will not recover if this call
1086:bsp/middlewares/freertos/source/tasks.c ****                  * fails, but we will report the failure. */
1087:bsp/middlewares/freertos/source/tasks.c ****                 prvInitialiseTaskLists();
1088:bsp/middlewares/freertos/source/tasks.c ****             }
1089:bsp/middlewares/freertos/source/tasks.c ****             else
1090:bsp/middlewares/freertos/source/tasks.c ****             {
1091:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1092:bsp/middlewares/freertos/source/tasks.c ****             }
1093:bsp/middlewares/freertos/source/tasks.c ****         }
1094:bsp/middlewares/freertos/source/tasks.c ****         else
1095:bsp/middlewares/freertos/source/tasks.c ****         {
1096:bsp/middlewares/freertos/source/tasks.c ****             /* If the scheduler is not already running, make this task the
1097:bsp/middlewares/freertos/source/tasks.c ****              * current task if it is the highest priority task to be created
1098:bsp/middlewares/freertos/source/tasks.c ****              * so far. */
1099:bsp/middlewares/freertos/source/tasks.c ****             if( xSchedulerRunning == pdFALSE )
1100:bsp/middlewares/freertos/source/tasks.c ****             {
1101:bsp/middlewares/freertos/source/tasks.c ****                 if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1102:bsp/middlewares/freertos/source/tasks.c ****                 {
1103:bsp/middlewares/freertos/source/tasks.c ****                     pxCurrentTCB = pxNewTCB;
1104:bsp/middlewares/freertos/source/tasks.c ****                 }
1105:bsp/middlewares/freertos/source/tasks.c ****                 else
1106:bsp/middlewares/freertos/source/tasks.c ****                 {
1107:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1108:bsp/middlewares/freertos/source/tasks.c ****                 }
1109:bsp/middlewares/freertos/source/tasks.c ****             }
1110:bsp/middlewares/freertos/source/tasks.c ****             else
1111:bsp/middlewares/freertos/source/tasks.c ****             {
1112:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1113:bsp/middlewares/freertos/source/tasks.c ****             }
1114:bsp/middlewares/freertos/source/tasks.c ****         }
1115:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 21


1116:bsp/middlewares/freertos/source/tasks.c ****         uxTaskNumber++;
1117:bsp/middlewares/freertos/source/tasks.c **** 
1118:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
1119:bsp/middlewares/freertos/source/tasks.c ****             {
1120:bsp/middlewares/freertos/source/tasks.c ****                 /* Add a counter into the TCB for tracing only. */
1121:bsp/middlewares/freertos/source/tasks.c ****                 pxNewTCB->uxTCBNumber = uxTaskNumber;
1122:bsp/middlewares/freertos/source/tasks.c ****             }
1123:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_TRACE_FACILITY */
1124:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_CREATE( pxNewTCB );
1125:bsp/middlewares/freertos/source/tasks.c **** 
1126:bsp/middlewares/freertos/source/tasks.c ****         prvAddTaskToReadyList( pxNewTCB );
1127:bsp/middlewares/freertos/source/tasks.c **** 
1128:bsp/middlewares/freertos/source/tasks.c ****         portSETUP_TCB( pxNewTCB );
1129:bsp/middlewares/freertos/source/tasks.c ****     }
1130:bsp/middlewares/freertos/source/tasks.c ****     taskEXIT_CRITICAL();
1131:bsp/middlewares/freertos/source/tasks.c **** 
1132:bsp/middlewares/freertos/source/tasks.c ****     if( xSchedulerRunning != pdFALSE )
1133:bsp/middlewares/freertos/source/tasks.c ****     {
1134:bsp/middlewares/freertos/source/tasks.c ****         /* If the created task is of a higher priority than the current task
1135:bsp/middlewares/freertos/source/tasks.c ****          * then it should run now. */
1136:bsp/middlewares/freertos/source/tasks.c ****         if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1137:bsp/middlewares/freertos/source/tasks.c ****         {
1138:bsp/middlewares/freertos/source/tasks.c ****             taskYIELD_IF_USING_PREEMPTION();
1139:bsp/middlewares/freertos/source/tasks.c ****         }
1140:bsp/middlewares/freertos/source/tasks.c ****         else
1141:bsp/middlewares/freertos/source/tasks.c ****         {
1142:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1143:bsp/middlewares/freertos/source/tasks.c ****         }
1144:bsp/middlewares/freertos/source/tasks.c ****     }
1145:bsp/middlewares/freertos/source/tasks.c ****     else
1146:bsp/middlewares/freertos/source/tasks.c ****     {
1147:bsp/middlewares/freertos/source/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1148:bsp/middlewares/freertos/source/tasks.c ****     }
1149:bsp/middlewares/freertos/source/tasks.c **** }
1150:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1151:bsp/middlewares/freertos/source/tasks.c **** 
1152:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1153:bsp/middlewares/freertos/source/tasks.c **** 
1154:bsp/middlewares/freertos/source/tasks.c ****     void vTaskDelete( TaskHandle_t xTaskToDelete )
1155:bsp/middlewares/freertos/source/tasks.c ****     {
1156:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
1157:bsp/middlewares/freertos/source/tasks.c **** 
1158:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
1159:bsp/middlewares/freertos/source/tasks.c ****         {
1160:bsp/middlewares/freertos/source/tasks.c ****             /* If null is passed in here then it is the calling task that is
1161:bsp/middlewares/freertos/source/tasks.c ****              * being deleted. */
1162:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1163:bsp/middlewares/freertos/source/tasks.c **** 
1164:bsp/middlewares/freertos/source/tasks.c ****             /* Remove task from the ready/delayed list. */
1165:bsp/middlewares/freertos/source/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1166:bsp/middlewares/freertos/source/tasks.c ****             {
1167:bsp/middlewares/freertos/source/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1168:bsp/middlewares/freertos/source/tasks.c ****             }
1169:bsp/middlewares/freertos/source/tasks.c ****             else
1170:bsp/middlewares/freertos/source/tasks.c ****             {
1171:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1172:bsp/middlewares/freertos/source/tasks.c ****             }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 22


1173:bsp/middlewares/freertos/source/tasks.c **** 
1174:bsp/middlewares/freertos/source/tasks.c ****             /* Is the task waiting on an event also? */
1175:bsp/middlewares/freertos/source/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1176:bsp/middlewares/freertos/source/tasks.c ****             {
1177:bsp/middlewares/freertos/source/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1178:bsp/middlewares/freertos/source/tasks.c ****             }
1179:bsp/middlewares/freertos/source/tasks.c ****             else
1180:bsp/middlewares/freertos/source/tasks.c ****             {
1181:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1182:bsp/middlewares/freertos/source/tasks.c ****             }
1183:bsp/middlewares/freertos/source/tasks.c **** 
1184:bsp/middlewares/freertos/source/tasks.c ****             /* Increment the uxTaskNumber also so kernel aware debuggers can
1185:bsp/middlewares/freertos/source/tasks.c ****              * detect that the task lists need re-generating.  This is done before
1186:bsp/middlewares/freertos/source/tasks.c ****              * portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1187:bsp/middlewares/freertos/source/tasks.c ****              * not return. */
1188:bsp/middlewares/freertos/source/tasks.c ****             uxTaskNumber++;
1189:bsp/middlewares/freertos/source/tasks.c **** 
1190:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB == pxCurrentTCB )
1191:bsp/middlewares/freertos/source/tasks.c ****             {
1192:bsp/middlewares/freertos/source/tasks.c ****                 /* A task is deleting itself.  This cannot complete within the
1193:bsp/middlewares/freertos/source/tasks.c ****                  * task itself, as a context switch to another task is required.
1194:bsp/middlewares/freertos/source/tasks.c ****                  * Place the task in the termination list.  The idle task will
1195:bsp/middlewares/freertos/source/tasks.c ****                  * check the termination list and free up any memory allocated by
1196:bsp/middlewares/freertos/source/tasks.c ****                  * the scheduler for the TCB and stack of the deleted task. */
1197:bsp/middlewares/freertos/source/tasks.c ****                 vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1198:bsp/middlewares/freertos/source/tasks.c **** 
1199:bsp/middlewares/freertos/source/tasks.c ****                 /* Increment the ucTasksDeleted variable so the idle task knows
1200:bsp/middlewares/freertos/source/tasks.c ****                  * there is a task that has been deleted and that it should therefore
1201:bsp/middlewares/freertos/source/tasks.c ****                  * check the xTasksWaitingTermination list. */
1202:bsp/middlewares/freertos/source/tasks.c ****                 ++uxDeletedTasksWaitingCleanUp;
1203:bsp/middlewares/freertos/source/tasks.c **** 
1204:bsp/middlewares/freertos/source/tasks.c ****                 /* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1205:bsp/middlewares/freertos/source/tasks.c ****                  * portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1206:bsp/middlewares/freertos/source/tasks.c ****                 traceTASK_DELETE( pxTCB );
1207:bsp/middlewares/freertos/source/tasks.c **** 
1208:bsp/middlewares/freertos/source/tasks.c ****                 /* The pre-delete hook is primarily for the Windows simulator,
1209:bsp/middlewares/freertos/source/tasks.c ****                  * in which Windows specific clean up operations are performed,
1210:bsp/middlewares/freertos/source/tasks.c ****                  * after which it is not possible to yield away from this task -
1211:bsp/middlewares/freertos/source/tasks.c ****                  * hence xYieldPending is used to latch that a context switch is
1212:bsp/middlewares/freertos/source/tasks.c ****                  * required. */
1213:bsp/middlewares/freertos/source/tasks.c ****                 portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1214:bsp/middlewares/freertos/source/tasks.c ****             }
1215:bsp/middlewares/freertos/source/tasks.c ****             else
1216:bsp/middlewares/freertos/source/tasks.c ****             {
1217:bsp/middlewares/freertos/source/tasks.c ****                 --uxCurrentNumberOfTasks;
1218:bsp/middlewares/freertos/source/tasks.c ****                 traceTASK_DELETE( pxTCB );
1219:bsp/middlewares/freertos/source/tasks.c ****                 prvDeleteTCB( pxTCB );
1220:bsp/middlewares/freertos/source/tasks.c **** 
1221:bsp/middlewares/freertos/source/tasks.c ****                 /* Reset the next expected unblock time in case it referred to
1222:bsp/middlewares/freertos/source/tasks.c ****                  * the task that has just been deleted. */
1223:bsp/middlewares/freertos/source/tasks.c ****                 prvResetNextTaskUnblockTime();
1224:bsp/middlewares/freertos/source/tasks.c ****             }
1225:bsp/middlewares/freertos/source/tasks.c ****         }
1226:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
1227:bsp/middlewares/freertos/source/tasks.c **** 
1228:bsp/middlewares/freertos/source/tasks.c ****         /* Force a reschedule if it is the currently running task that has just
1229:bsp/middlewares/freertos/source/tasks.c ****          * been deleted. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 23


1230:bsp/middlewares/freertos/source/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1231:bsp/middlewares/freertos/source/tasks.c ****         {
1232:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB == pxCurrentTCB )
1233:bsp/middlewares/freertos/source/tasks.c ****             {
1234:bsp/middlewares/freertos/source/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1235:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
1236:bsp/middlewares/freertos/source/tasks.c ****             }
1237:bsp/middlewares/freertos/source/tasks.c ****             else
1238:bsp/middlewares/freertos/source/tasks.c ****             {
1239:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1240:bsp/middlewares/freertos/source/tasks.c ****             }
1241:bsp/middlewares/freertos/source/tasks.c ****         }
1242:bsp/middlewares/freertos/source/tasks.c ****     }
1243:bsp/middlewares/freertos/source/tasks.c **** 
1244:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1245:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1246:bsp/middlewares/freertos/source/tasks.c **** 
1247:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_xTaskDelayUntil == 1 )
1248:bsp/middlewares/freertos/source/tasks.c **** 
1249:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
1250:bsp/middlewares/freertos/source/tasks.c ****                                 const TickType_t xTimeIncrement )
1251:bsp/middlewares/freertos/source/tasks.c ****     {
1252:bsp/middlewares/freertos/source/tasks.c ****         TickType_t xTimeToWake;
1253:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1254:bsp/middlewares/freertos/source/tasks.c **** 
1255:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( pxPreviousWakeTime );
1256:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
1257:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
1258:bsp/middlewares/freertos/source/tasks.c **** 
1259:bsp/middlewares/freertos/source/tasks.c ****         vTaskSuspendAll();
1260:bsp/middlewares/freertos/source/tasks.c ****         {
1261:bsp/middlewares/freertos/source/tasks.c ****             /* Minor optimisation.  The tick count cannot change in this
1262:bsp/middlewares/freertos/source/tasks.c ****              * block. */
1263:bsp/middlewares/freertos/source/tasks.c ****             const TickType_t xConstTickCount = xTickCount;
1264:bsp/middlewares/freertos/source/tasks.c **** 
1265:bsp/middlewares/freertos/source/tasks.c ****             /* Generate the tick time at which the task wants to wake. */
1266:bsp/middlewares/freertos/source/tasks.c ****             xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1267:bsp/middlewares/freertos/source/tasks.c **** 
1268:bsp/middlewares/freertos/source/tasks.c ****             if( xConstTickCount < *pxPreviousWakeTime )
1269:bsp/middlewares/freertos/source/tasks.c ****             {
1270:bsp/middlewares/freertos/source/tasks.c ****                 /* The tick count has overflowed since this function was
1271:bsp/middlewares/freertos/source/tasks.c ****                  * lasted called.  In this case the only time we should ever
1272:bsp/middlewares/freertos/source/tasks.c ****                  * actually delay is if the wake time has also  overflowed,
1273:bsp/middlewares/freertos/source/tasks.c ****                  * and the wake time is greater than the tick time.  When this
1274:bsp/middlewares/freertos/source/tasks.c ****                  * is the case it is as if neither time had overflowed. */
1275:bsp/middlewares/freertos/source/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1276:bsp/middlewares/freertos/source/tasks.c ****                 {
1277:bsp/middlewares/freertos/source/tasks.c ****                     xShouldDelay = pdTRUE;
1278:bsp/middlewares/freertos/source/tasks.c ****                 }
1279:bsp/middlewares/freertos/source/tasks.c ****                 else
1280:bsp/middlewares/freertos/source/tasks.c ****                 {
1281:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1282:bsp/middlewares/freertos/source/tasks.c ****                 }
1283:bsp/middlewares/freertos/source/tasks.c ****             }
1284:bsp/middlewares/freertos/source/tasks.c ****             else
1285:bsp/middlewares/freertos/source/tasks.c ****             {
1286:bsp/middlewares/freertos/source/tasks.c ****                 /* The tick time has not overflowed.  In this case we will
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 24


1287:bsp/middlewares/freertos/source/tasks.c ****                  * delay if either the wake time has overflowed, and/or the
1288:bsp/middlewares/freertos/source/tasks.c ****                  * tick time is less than the wake time. */
1289:bsp/middlewares/freertos/source/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1290:bsp/middlewares/freertos/source/tasks.c ****                 {
1291:bsp/middlewares/freertos/source/tasks.c ****                     xShouldDelay = pdTRUE;
1292:bsp/middlewares/freertos/source/tasks.c ****                 }
1293:bsp/middlewares/freertos/source/tasks.c ****                 else
1294:bsp/middlewares/freertos/source/tasks.c ****                 {
1295:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1296:bsp/middlewares/freertos/source/tasks.c ****                 }
1297:bsp/middlewares/freertos/source/tasks.c ****             }
1298:bsp/middlewares/freertos/source/tasks.c **** 
1299:bsp/middlewares/freertos/source/tasks.c ****             /* Update the wake time ready for the next call. */
1300:bsp/middlewares/freertos/source/tasks.c ****             *pxPreviousWakeTime = xTimeToWake;
1301:bsp/middlewares/freertos/source/tasks.c **** 
1302:bsp/middlewares/freertos/source/tasks.c ****             if( xShouldDelay != pdFALSE )
1303:bsp/middlewares/freertos/source/tasks.c ****             {
1304:bsp/middlewares/freertos/source/tasks.c ****                 traceTASK_DELAY_UNTIL( xTimeToWake );
1305:bsp/middlewares/freertos/source/tasks.c **** 
1306:bsp/middlewares/freertos/source/tasks.c ****                 /* prvAddCurrentTaskToDelayedList() needs the block time, not
1307:bsp/middlewares/freertos/source/tasks.c ****                  * the time to wake, so subtract the current tick count. */
1308:bsp/middlewares/freertos/source/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1309:bsp/middlewares/freertos/source/tasks.c ****             }
1310:bsp/middlewares/freertos/source/tasks.c ****             else
1311:bsp/middlewares/freertos/source/tasks.c ****             {
1312:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1313:bsp/middlewares/freertos/source/tasks.c ****             }
1314:bsp/middlewares/freertos/source/tasks.c ****         }
1315:bsp/middlewares/freertos/source/tasks.c ****         xAlreadyYielded = xTaskResumeAll();
1316:bsp/middlewares/freertos/source/tasks.c **** 
1317:bsp/middlewares/freertos/source/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1318:bsp/middlewares/freertos/source/tasks.c ****          * have put ourselves to sleep. */
1319:bsp/middlewares/freertos/source/tasks.c ****         if( xAlreadyYielded == pdFALSE )
1320:bsp/middlewares/freertos/source/tasks.c ****         {
1321:bsp/middlewares/freertos/source/tasks.c ****             portYIELD_WITHIN_API();
1322:bsp/middlewares/freertos/source/tasks.c ****         }
1323:bsp/middlewares/freertos/source/tasks.c ****         else
1324:bsp/middlewares/freertos/source/tasks.c ****         {
1325:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1326:bsp/middlewares/freertos/source/tasks.c ****         }
1327:bsp/middlewares/freertos/source/tasks.c **** 
1328:bsp/middlewares/freertos/source/tasks.c ****         return xShouldDelay;
1329:bsp/middlewares/freertos/source/tasks.c ****     }
1330:bsp/middlewares/freertos/source/tasks.c **** 
1331:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_xTaskDelayUntil */
1332:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1333:bsp/middlewares/freertos/source/tasks.c **** 
1334:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1335:bsp/middlewares/freertos/source/tasks.c **** 
1336:bsp/middlewares/freertos/source/tasks.c ****     void vTaskDelay( const TickType_t xTicksToDelay )
1337:bsp/middlewares/freertos/source/tasks.c ****     {
1338:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
1339:bsp/middlewares/freertos/source/tasks.c **** 
1340:bsp/middlewares/freertos/source/tasks.c ****         /* A delay time of zero just forces a reschedule. */
1341:bsp/middlewares/freertos/source/tasks.c ****         if( xTicksToDelay > ( TickType_t ) 0U )
1342:bsp/middlewares/freertos/source/tasks.c ****         {
1343:bsp/middlewares/freertos/source/tasks.c ****             configASSERT( uxSchedulerSuspended == 0 );
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 25


1344:bsp/middlewares/freertos/source/tasks.c ****             vTaskSuspendAll();
1345:bsp/middlewares/freertos/source/tasks.c ****             {
1346:bsp/middlewares/freertos/source/tasks.c ****                 traceTASK_DELAY();
1347:bsp/middlewares/freertos/source/tasks.c **** 
1348:bsp/middlewares/freertos/source/tasks.c ****                 /* A task that is removed from the event list while the
1349:bsp/middlewares/freertos/source/tasks.c ****                  * scheduler is suspended will not get placed in the ready
1350:bsp/middlewares/freertos/source/tasks.c ****                  * list or removed from the blocked list until the scheduler
1351:bsp/middlewares/freertos/source/tasks.c ****                  * is resumed.
1352:bsp/middlewares/freertos/source/tasks.c ****                  *
1353:bsp/middlewares/freertos/source/tasks.c ****                  * This task cannot be in an event list as it is the currently
1354:bsp/middlewares/freertos/source/tasks.c ****                  * executing task. */
1355:bsp/middlewares/freertos/source/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1356:bsp/middlewares/freertos/source/tasks.c ****             }
1357:bsp/middlewares/freertos/source/tasks.c ****             xAlreadyYielded = xTaskResumeAll();
1358:bsp/middlewares/freertos/source/tasks.c ****         }
1359:bsp/middlewares/freertos/source/tasks.c ****         else
1360:bsp/middlewares/freertos/source/tasks.c ****         {
1361:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1362:bsp/middlewares/freertos/source/tasks.c ****         }
1363:bsp/middlewares/freertos/source/tasks.c **** 
1364:bsp/middlewares/freertos/source/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1365:bsp/middlewares/freertos/source/tasks.c ****          * have put ourselves to sleep. */
1366:bsp/middlewares/freertos/source/tasks.c ****         if( xAlreadyYielded == pdFALSE )
1367:bsp/middlewares/freertos/source/tasks.c ****         {
1368:bsp/middlewares/freertos/source/tasks.c ****             portYIELD_WITHIN_API();
1369:bsp/middlewares/freertos/source/tasks.c ****         }
1370:bsp/middlewares/freertos/source/tasks.c ****         else
1371:bsp/middlewares/freertos/source/tasks.c ****         {
1372:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1373:bsp/middlewares/freertos/source/tasks.c ****         }
1374:bsp/middlewares/freertos/source/tasks.c ****     }
1375:bsp/middlewares/freertos/source/tasks.c **** 
1376:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1377:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1378:bsp/middlewares/freertos/source/tasks.c **** 
1379:bsp/middlewares/freertos/source/tasks.c **** #if ( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDe
1380:bsp/middlewares/freertos/source/tasks.c **** 
1381:bsp/middlewares/freertos/source/tasks.c ****     eTaskState eTaskGetState( TaskHandle_t xTask )
1382:bsp/middlewares/freertos/source/tasks.c ****     {
1383:bsp/middlewares/freertos/source/tasks.c ****         eTaskState eReturn;
1384:bsp/middlewares/freertos/source/tasks.c ****         List_t const * pxStateList, * pxDelayedList, * pxOverflowedDelayedList;
1385:bsp/middlewares/freertos/source/tasks.c ****         const TCB_t * const pxTCB = xTask;
1386:bsp/middlewares/freertos/source/tasks.c **** 
1387:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( pxTCB );
1388:bsp/middlewares/freertos/source/tasks.c **** 
1389:bsp/middlewares/freertos/source/tasks.c ****         if( pxTCB == pxCurrentTCB )
1390:bsp/middlewares/freertos/source/tasks.c ****         {
1391:bsp/middlewares/freertos/source/tasks.c ****             /* The task calling this function is querying its own state. */
1392:bsp/middlewares/freertos/source/tasks.c ****             eReturn = eRunning;
1393:bsp/middlewares/freertos/source/tasks.c ****         }
1394:bsp/middlewares/freertos/source/tasks.c ****         else
1395:bsp/middlewares/freertos/source/tasks.c ****         {
1396:bsp/middlewares/freertos/source/tasks.c ****             taskENTER_CRITICAL();
1397:bsp/middlewares/freertos/source/tasks.c ****             {
1398:bsp/middlewares/freertos/source/tasks.c ****                 pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1399:bsp/middlewares/freertos/source/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
1400:bsp/middlewares/freertos/source/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 26


1401:bsp/middlewares/freertos/source/tasks.c ****             }
1402:bsp/middlewares/freertos/source/tasks.c ****             taskEXIT_CRITICAL();
1403:bsp/middlewares/freertos/source/tasks.c **** 
1404:bsp/middlewares/freertos/source/tasks.c ****             if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1405:bsp/middlewares/freertos/source/tasks.c ****             {
1406:bsp/middlewares/freertos/source/tasks.c ****                 /* The task being queried is referenced from one of the Blocked
1407:bsp/middlewares/freertos/source/tasks.c ****                  * lists. */
1408:bsp/middlewares/freertos/source/tasks.c ****                 eReturn = eBlocked;
1409:bsp/middlewares/freertos/source/tasks.c ****             }
1410:bsp/middlewares/freertos/source/tasks.c **** 
1411:bsp/middlewares/freertos/source/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
1412:bsp/middlewares/freertos/source/tasks.c ****                 else if( pxStateList == &xSuspendedTaskList )
1413:bsp/middlewares/freertos/source/tasks.c ****                 {
1414:bsp/middlewares/freertos/source/tasks.c ****                     /* The task being queried is referenced from the suspended
1415:bsp/middlewares/freertos/source/tasks.c ****                      * list.  Is it genuinely suspended or is it blocked
1416:bsp/middlewares/freertos/source/tasks.c ****                      * indefinitely? */
1417:bsp/middlewares/freertos/source/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1418:bsp/middlewares/freertos/source/tasks.c ****                     {
1419:bsp/middlewares/freertos/source/tasks.c ****                         #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1420:bsp/middlewares/freertos/source/tasks.c ****                             {
1421:bsp/middlewares/freertos/source/tasks.c ****                                 BaseType_t x;
1422:bsp/middlewares/freertos/source/tasks.c **** 
1423:bsp/middlewares/freertos/source/tasks.c ****                                 /* The task does not appear on the event list item of
1424:bsp/middlewares/freertos/source/tasks.c ****                                  * and of the RTOS objects, but could still be in the
1425:bsp/middlewares/freertos/source/tasks.c ****                                  * blocked state if it is waiting on its notification
1426:bsp/middlewares/freertos/source/tasks.c ****                                  * rather than waiting on an object.  If not, is
1427:bsp/middlewares/freertos/source/tasks.c ****                                  * suspended. */
1428:bsp/middlewares/freertos/source/tasks.c ****                                 eReturn = eSuspended;
1429:bsp/middlewares/freertos/source/tasks.c **** 
1430:bsp/middlewares/freertos/source/tasks.c ****                                 for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1431:bsp/middlewares/freertos/source/tasks.c ****                                 {
1432:bsp/middlewares/freertos/source/tasks.c ****                                     if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1433:bsp/middlewares/freertos/source/tasks.c ****                                     {
1434:bsp/middlewares/freertos/source/tasks.c ****                                         eReturn = eBlocked;
1435:bsp/middlewares/freertos/source/tasks.c ****                                         break;
1436:bsp/middlewares/freertos/source/tasks.c ****                                     }
1437:bsp/middlewares/freertos/source/tasks.c ****                                 }
1438:bsp/middlewares/freertos/source/tasks.c ****                             }
1439:bsp/middlewares/freertos/source/tasks.c ****                         #else /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1440:bsp/middlewares/freertos/source/tasks.c ****                             {
1441:bsp/middlewares/freertos/source/tasks.c ****                                 eReturn = eSuspended;
1442:bsp/middlewares/freertos/source/tasks.c ****                             }
1443:bsp/middlewares/freertos/source/tasks.c ****                         #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1444:bsp/middlewares/freertos/source/tasks.c ****                     }
1445:bsp/middlewares/freertos/source/tasks.c ****                     else
1446:bsp/middlewares/freertos/source/tasks.c ****                     {
1447:bsp/middlewares/freertos/source/tasks.c ****                         eReturn = eBlocked;
1448:bsp/middlewares/freertos/source/tasks.c ****                     }
1449:bsp/middlewares/freertos/source/tasks.c ****                 }
1450:bsp/middlewares/freertos/source/tasks.c ****             #endif /* if ( INCLUDE_vTaskSuspend == 1 ) */
1451:bsp/middlewares/freertos/source/tasks.c **** 
1452:bsp/middlewares/freertos/source/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
1453:bsp/middlewares/freertos/source/tasks.c ****                 else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:bsp/middlewares/freertos/source/tasks.c ****                 {
1455:bsp/middlewares/freertos/source/tasks.c ****                     /* The task being queried is referenced from the deleted
1456:bsp/middlewares/freertos/source/tasks.c ****                      * tasks list, or it is not referenced from any lists at
1457:bsp/middlewares/freertos/source/tasks.c ****                      * all. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 27


1458:bsp/middlewares/freertos/source/tasks.c ****                     eReturn = eDeleted;
1459:bsp/middlewares/freertos/source/tasks.c ****                 }
1460:bsp/middlewares/freertos/source/tasks.c ****             #endif
1461:bsp/middlewares/freertos/source/tasks.c **** 
1462:bsp/middlewares/freertos/source/tasks.c ****             else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer
1463:bsp/middlewares/freertos/source/tasks.c ****             {
1464:bsp/middlewares/freertos/source/tasks.c ****                 /* If the task is not in any other state, it must be in the
1465:bsp/middlewares/freertos/source/tasks.c ****                  * Ready (including pending ready) state. */
1466:bsp/middlewares/freertos/source/tasks.c ****                 eReturn = eReady;
1467:bsp/middlewares/freertos/source/tasks.c ****             }
1468:bsp/middlewares/freertos/source/tasks.c ****         }
1469:bsp/middlewares/freertos/source/tasks.c **** 
1470:bsp/middlewares/freertos/source/tasks.c ****         return eReturn;
1471:bsp/middlewares/freertos/source/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:bsp/middlewares/freertos/source/tasks.c **** 
1473:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1475:bsp/middlewares/freertos/source/tasks.c **** 
1476:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:bsp/middlewares/freertos/source/tasks.c **** 
1478:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:bsp/middlewares/freertos/source/tasks.c ****     {
1480:bsp/middlewares/freertos/source/tasks.c ****         TCB_t const * pxTCB;
1481:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxReturn;
1482:bsp/middlewares/freertos/source/tasks.c **** 
1483:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
1484:bsp/middlewares/freertos/source/tasks.c ****         {
1485:bsp/middlewares/freertos/source/tasks.c ****             /* If null is passed in here then it is the priority of the task
1486:bsp/middlewares/freertos/source/tasks.c ****              * that called uxTaskPriorityGet() that is being queried. */
1487:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1488:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
1489:bsp/middlewares/freertos/source/tasks.c ****         }
1490:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
1491:bsp/middlewares/freertos/source/tasks.c **** 
1492:bsp/middlewares/freertos/source/tasks.c ****         return uxReturn;
1493:bsp/middlewares/freertos/source/tasks.c ****     }
1494:bsp/middlewares/freertos/source/tasks.c **** 
1495:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1497:bsp/middlewares/freertos/source/tasks.c **** 
1498:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:bsp/middlewares/freertos/source/tasks.c **** 
1500:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:bsp/middlewares/freertos/source/tasks.c ****     {
1502:bsp/middlewares/freertos/source/tasks.c ****         TCB_t const * pxTCB;
1503:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
1504:bsp/middlewares/freertos/source/tasks.c **** 
1505:bsp/middlewares/freertos/source/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1506:bsp/middlewares/freertos/source/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1507:bsp/middlewares/freertos/source/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1508:bsp/middlewares/freertos/source/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1509:bsp/middlewares/freertos/source/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:bsp/middlewares/freertos/source/tasks.c ****          * is defined in FreeRTOSConfig.h then
1511:bsp/middlewares/freertos/source/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:bsp/middlewares/freertos/source/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1513:bsp/middlewares/freertos/source/tasks.c ****          * been assigned a priority above the configured maximum system call
1514:bsp/middlewares/freertos/source/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 28


1515:bsp/middlewares/freertos/source/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1516:bsp/middlewares/freertos/source/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:bsp/middlewares/freertos/source/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1518:bsp/middlewares/freertos/source/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1519:bsp/middlewares/freertos/source/tasks.c ****          * provided on the following link:
1520:bsp/middlewares/freertos/source/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1521:bsp/middlewares/freertos/source/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:bsp/middlewares/freertos/source/tasks.c **** 
1523:bsp/middlewares/freertos/source/tasks.c ****         uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:bsp/middlewares/freertos/source/tasks.c ****         {
1525:bsp/middlewares/freertos/source/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1526:bsp/middlewares/freertos/source/tasks.c ****              * task that is being queried. */
1527:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1528:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
1529:bsp/middlewares/freertos/source/tasks.c ****         }
1530:bsp/middlewares/freertos/source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:bsp/middlewares/freertos/source/tasks.c **** 
1532:bsp/middlewares/freertos/source/tasks.c ****         return uxReturn;
1533:bsp/middlewares/freertos/source/tasks.c ****     }
1534:bsp/middlewares/freertos/source/tasks.c **** 
1535:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1537:bsp/middlewares/freertos/source/tasks.c **** 
1538:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:bsp/middlewares/freertos/source/tasks.c **** 
1540:bsp/middlewares/freertos/source/tasks.c ****     void vTaskPrioritySet( TaskHandle_t xTask,
1541:bsp/middlewares/freertos/source/tasks.c ****                            UBaseType_t uxNewPriority )
1542:bsp/middlewares/freertos/source/tasks.c ****     {
1543:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
1544:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1545:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1546:bsp/middlewares/freertos/source/tasks.c **** 
1547:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1548:bsp/middlewares/freertos/source/tasks.c **** 
1549:bsp/middlewares/freertos/source/tasks.c ****         /* Ensure the new priority is valid. */
1550:bsp/middlewares/freertos/source/tasks.c ****         if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1551:bsp/middlewares/freertos/source/tasks.c ****         {
1552:bsp/middlewares/freertos/source/tasks.c ****             uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1553:bsp/middlewares/freertos/source/tasks.c ****         }
1554:bsp/middlewares/freertos/source/tasks.c ****         else
1555:bsp/middlewares/freertos/source/tasks.c ****         {
1556:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1557:bsp/middlewares/freertos/source/tasks.c ****         }
1558:bsp/middlewares/freertos/source/tasks.c **** 
1559:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
1560:bsp/middlewares/freertos/source/tasks.c ****         {
1561:bsp/middlewares/freertos/source/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1562:bsp/middlewares/freertos/source/tasks.c ****              * task that is being changed. */
1563:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1564:bsp/middlewares/freertos/source/tasks.c **** 
1565:bsp/middlewares/freertos/source/tasks.c ****             traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1566:bsp/middlewares/freertos/source/tasks.c **** 
1567:bsp/middlewares/freertos/source/tasks.c ****             #if ( configUSE_MUTEXES == 1 )
1568:bsp/middlewares/freertos/source/tasks.c ****                 {
1569:bsp/middlewares/freertos/source/tasks.c ****                     uxCurrentBasePriority = pxTCB->uxBasePriority;
1570:bsp/middlewares/freertos/source/tasks.c ****                 }
1571:bsp/middlewares/freertos/source/tasks.c ****             #else
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 29


1572:bsp/middlewares/freertos/source/tasks.c ****                 {
1573:bsp/middlewares/freertos/source/tasks.c ****                     uxCurrentBasePriority = pxTCB->uxPriority;
1574:bsp/middlewares/freertos/source/tasks.c ****                 }
1575:bsp/middlewares/freertos/source/tasks.c ****             #endif
1576:bsp/middlewares/freertos/source/tasks.c **** 
1577:bsp/middlewares/freertos/source/tasks.c ****             if( uxCurrentBasePriority != uxNewPriority )
1578:bsp/middlewares/freertos/source/tasks.c ****             {
1579:bsp/middlewares/freertos/source/tasks.c ****                 /* The priority change may have readied a task of higher
1580:bsp/middlewares/freertos/source/tasks.c ****                  * priority than the calling task. */
1581:bsp/middlewares/freertos/source/tasks.c ****                 if( uxNewPriority > uxCurrentBasePriority )
1582:bsp/middlewares/freertos/source/tasks.c ****                 {
1583:bsp/middlewares/freertos/source/tasks.c ****                     if( pxTCB != pxCurrentTCB )
1584:bsp/middlewares/freertos/source/tasks.c ****                     {
1585:bsp/middlewares/freertos/source/tasks.c ****                         /* The priority of a task other than the currently
1586:bsp/middlewares/freertos/source/tasks.c ****                          * running task is being raised.  Is the priority being
1587:bsp/middlewares/freertos/source/tasks.c ****                          * raised above that of the running task? */
1588:bsp/middlewares/freertos/source/tasks.c ****                         if( uxNewPriority >= pxCurrentTCB->uxPriority )
1589:bsp/middlewares/freertos/source/tasks.c ****                         {
1590:bsp/middlewares/freertos/source/tasks.c ****                             xYieldRequired = pdTRUE;
1591:bsp/middlewares/freertos/source/tasks.c ****                         }
1592:bsp/middlewares/freertos/source/tasks.c ****                         else
1593:bsp/middlewares/freertos/source/tasks.c ****                         {
1594:bsp/middlewares/freertos/source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1595:bsp/middlewares/freertos/source/tasks.c ****                         }
1596:bsp/middlewares/freertos/source/tasks.c ****                     }
1597:bsp/middlewares/freertos/source/tasks.c ****                     else
1598:bsp/middlewares/freertos/source/tasks.c ****                     {
1599:bsp/middlewares/freertos/source/tasks.c ****                         /* The priority of the running task is being raised,
1600:bsp/middlewares/freertos/source/tasks.c ****                          * but the running task must already be the highest
1601:bsp/middlewares/freertos/source/tasks.c ****                          * priority task able to run so no yield is required. */
1602:bsp/middlewares/freertos/source/tasks.c ****                     }
1603:bsp/middlewares/freertos/source/tasks.c ****                 }
1604:bsp/middlewares/freertos/source/tasks.c ****                 else if( pxTCB == pxCurrentTCB )
1605:bsp/middlewares/freertos/source/tasks.c ****                 {
1606:bsp/middlewares/freertos/source/tasks.c ****                     /* Setting the priority of the running task down means
1607:bsp/middlewares/freertos/source/tasks.c ****                      * there may now be another task of higher priority that
1608:bsp/middlewares/freertos/source/tasks.c ****                      * is ready to execute. */
1609:bsp/middlewares/freertos/source/tasks.c ****                     xYieldRequired = pdTRUE;
1610:bsp/middlewares/freertos/source/tasks.c ****                 }
1611:bsp/middlewares/freertos/source/tasks.c ****                 else
1612:bsp/middlewares/freertos/source/tasks.c ****                 {
1613:bsp/middlewares/freertos/source/tasks.c ****                     /* Setting the priority of any other task down does not
1614:bsp/middlewares/freertos/source/tasks.c ****                      * require a yield as the running task must be above the
1615:bsp/middlewares/freertos/source/tasks.c ****                      * new priority of the task being modified. */
1616:bsp/middlewares/freertos/source/tasks.c ****                 }
1617:bsp/middlewares/freertos/source/tasks.c **** 
1618:bsp/middlewares/freertos/source/tasks.c ****                 /* Remember the ready list the task might be referenced from
1619:bsp/middlewares/freertos/source/tasks.c ****                  * before its uxPriority member is changed so the
1620:bsp/middlewares/freertos/source/tasks.c ****                  * taskRESET_READY_PRIORITY() macro can function correctly. */
1621:bsp/middlewares/freertos/source/tasks.c ****                 uxPriorityUsedOnEntry = pxTCB->uxPriority;
1622:bsp/middlewares/freertos/source/tasks.c **** 
1623:bsp/middlewares/freertos/source/tasks.c ****                 #if ( configUSE_MUTEXES == 1 )
1624:bsp/middlewares/freertos/source/tasks.c ****                     {
1625:bsp/middlewares/freertos/source/tasks.c ****                         /* Only change the priority being used if the task is not
1626:bsp/middlewares/freertos/source/tasks.c ****                          * currently using an inherited priority. */
1627:bsp/middlewares/freertos/source/tasks.c ****                         if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1628:bsp/middlewares/freertos/source/tasks.c ****                         {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 30


1629:bsp/middlewares/freertos/source/tasks.c ****                             pxTCB->uxPriority = uxNewPriority;
1630:bsp/middlewares/freertos/source/tasks.c ****                         }
1631:bsp/middlewares/freertos/source/tasks.c ****                         else
1632:bsp/middlewares/freertos/source/tasks.c ****                         {
1633:bsp/middlewares/freertos/source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1634:bsp/middlewares/freertos/source/tasks.c ****                         }
1635:bsp/middlewares/freertos/source/tasks.c **** 
1636:bsp/middlewares/freertos/source/tasks.c ****                         /* The base priority gets set whatever. */
1637:bsp/middlewares/freertos/source/tasks.c ****                         pxTCB->uxBasePriority = uxNewPriority;
1638:bsp/middlewares/freertos/source/tasks.c ****                     }
1639:bsp/middlewares/freertos/source/tasks.c ****                 #else /* if ( configUSE_MUTEXES == 1 ) */
1640:bsp/middlewares/freertos/source/tasks.c ****                     {
1641:bsp/middlewares/freertos/source/tasks.c ****                         pxTCB->uxPriority = uxNewPriority;
1642:bsp/middlewares/freertos/source/tasks.c ****                     }
1643:bsp/middlewares/freertos/source/tasks.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1644:bsp/middlewares/freertos/source/tasks.c **** 
1645:bsp/middlewares/freertos/source/tasks.c ****                 /* Only reset the event list item value if the value is not
1646:bsp/middlewares/freertos/source/tasks.c ****                  * being used for anything else. */
1647:bsp/middlewares/freertos/source/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_V
1648:bsp/middlewares/freertos/source/tasks.c ****                 {
1649:bsp/middlewares/freertos/source/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX
1650:bsp/middlewares/freertos/source/tasks.c ****                 }
1651:bsp/middlewares/freertos/source/tasks.c ****                 else
1652:bsp/middlewares/freertos/source/tasks.c ****                 {
1653:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1654:bsp/middlewares/freertos/source/tasks.c ****                 }
1655:bsp/middlewares/freertos/source/tasks.c **** 
1656:bsp/middlewares/freertos/source/tasks.c ****                 /* If the task is in the blocked or suspended list we need do
1657:bsp/middlewares/freertos/source/tasks.c ****                  * nothing more than change its priority variable. However, if
1658:bsp/middlewares/freertos/source/tasks.c ****                  * the task is in a ready list it needs to be removed and placed
1659:bsp/middlewares/freertos/source/tasks.c ****                  * in the list appropriate to its new priority. */
1660:bsp/middlewares/freertos/source/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( px
1661:bsp/middlewares/freertos/source/tasks.c ****                 {
1662:bsp/middlewares/freertos/source/tasks.c ****                     /* The task is currently in its ready list - remove before
1663:bsp/middlewares/freertos/source/tasks.c ****                      * adding it to it's new ready list.  As we are in a critical
1664:bsp/middlewares/freertos/source/tasks.c ****                      * section we can do this even if the scheduler is suspended. */
1665:bsp/middlewares/freertos/source/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1666:bsp/middlewares/freertos/source/tasks.c ****                     {
1667:bsp/middlewares/freertos/source/tasks.c ****                         /* It is known that the task is in its ready list so
1668:bsp/middlewares/freertos/source/tasks.c ****                          * there is no need to check again and the port level
1669:bsp/middlewares/freertos/source/tasks.c ****                          * reset macro can be called directly. */
1670:bsp/middlewares/freertos/source/tasks.c ****                         portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1671:bsp/middlewares/freertos/source/tasks.c ****                     }
1672:bsp/middlewares/freertos/source/tasks.c ****                     else
1673:bsp/middlewares/freertos/source/tasks.c ****                     {
1674:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1675:bsp/middlewares/freertos/source/tasks.c ****                     }
1676:bsp/middlewares/freertos/source/tasks.c **** 
1677:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1678:bsp/middlewares/freertos/source/tasks.c ****                 }
1679:bsp/middlewares/freertos/source/tasks.c ****                 else
1680:bsp/middlewares/freertos/source/tasks.c ****                 {
1681:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1682:bsp/middlewares/freertos/source/tasks.c ****                 }
1683:bsp/middlewares/freertos/source/tasks.c **** 
1684:bsp/middlewares/freertos/source/tasks.c ****                 if( xYieldRequired != pdFALSE )
1685:bsp/middlewares/freertos/source/tasks.c ****                 {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 31


1686:bsp/middlewares/freertos/source/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
1687:bsp/middlewares/freertos/source/tasks.c ****                 }
1688:bsp/middlewares/freertos/source/tasks.c ****                 else
1689:bsp/middlewares/freertos/source/tasks.c ****                 {
1690:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1691:bsp/middlewares/freertos/source/tasks.c ****                 }
1692:bsp/middlewares/freertos/source/tasks.c **** 
1693:bsp/middlewares/freertos/source/tasks.c ****                 /* Remove compiler warning about unused variables when the port
1694:bsp/middlewares/freertos/source/tasks.c ****                  * optimised task selection is not being used. */
1695:bsp/middlewares/freertos/source/tasks.c ****                 ( void ) uxPriorityUsedOnEntry;
1696:bsp/middlewares/freertos/source/tasks.c ****             }
1697:bsp/middlewares/freertos/source/tasks.c ****         }
1698:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
1699:bsp/middlewares/freertos/source/tasks.c ****     }
1700:bsp/middlewares/freertos/source/tasks.c **** 
1701:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1702:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1703:bsp/middlewares/freertos/source/tasks.c **** 
1704:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1705:bsp/middlewares/freertos/source/tasks.c **** 
1706:bsp/middlewares/freertos/source/tasks.c ****     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1707:bsp/middlewares/freertos/source/tasks.c ****     {
1708:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
1709:bsp/middlewares/freertos/source/tasks.c **** 
1710:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
1711:bsp/middlewares/freertos/source/tasks.c ****         {
1712:bsp/middlewares/freertos/source/tasks.c ****             /* If null is passed in here then it is the running task that is
1713:bsp/middlewares/freertos/source/tasks.c ****              * being suspended. */
1714:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1715:bsp/middlewares/freertos/source/tasks.c **** 
1716:bsp/middlewares/freertos/source/tasks.c ****             traceTASK_SUSPEND( pxTCB );
1717:bsp/middlewares/freertos/source/tasks.c **** 
1718:bsp/middlewares/freertos/source/tasks.c ****             /* Remove task from the ready/delayed list and place in the
1719:bsp/middlewares/freertos/source/tasks.c ****              * suspended list. */
1720:bsp/middlewares/freertos/source/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1721:bsp/middlewares/freertos/source/tasks.c ****             {
1722:bsp/middlewares/freertos/source/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1723:bsp/middlewares/freertos/source/tasks.c ****             }
1724:bsp/middlewares/freertos/source/tasks.c ****             else
1725:bsp/middlewares/freertos/source/tasks.c ****             {
1726:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1727:bsp/middlewares/freertos/source/tasks.c ****             }
1728:bsp/middlewares/freertos/source/tasks.c **** 
1729:bsp/middlewares/freertos/source/tasks.c ****             /* Is the task waiting on an event also? */
1730:bsp/middlewares/freertos/source/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1731:bsp/middlewares/freertos/source/tasks.c ****             {
1732:bsp/middlewares/freertos/source/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1733:bsp/middlewares/freertos/source/tasks.c ****             }
1734:bsp/middlewares/freertos/source/tasks.c ****             else
1735:bsp/middlewares/freertos/source/tasks.c ****             {
1736:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1737:bsp/middlewares/freertos/source/tasks.c ****             }
1738:bsp/middlewares/freertos/source/tasks.c **** 
1739:bsp/middlewares/freertos/source/tasks.c ****             vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1740:bsp/middlewares/freertos/source/tasks.c **** 
1741:bsp/middlewares/freertos/source/tasks.c ****             #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1742:bsp/middlewares/freertos/source/tasks.c ****                 {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 32


1743:bsp/middlewares/freertos/source/tasks.c ****                     BaseType_t x;
1744:bsp/middlewares/freertos/source/tasks.c **** 
1745:bsp/middlewares/freertos/source/tasks.c ****                     for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1746:bsp/middlewares/freertos/source/tasks.c ****                     {
1747:bsp/middlewares/freertos/source/tasks.c ****                         if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1748:bsp/middlewares/freertos/source/tasks.c ****                         {
1749:bsp/middlewares/freertos/source/tasks.c ****                             /* The task was blocked to wait for a notification, but is
1750:bsp/middlewares/freertos/source/tasks.c ****                              * now suspended, so no notification was received. */
1751:bsp/middlewares/freertos/source/tasks.c ****                             pxTCB->ucNotifyState[ x ] = taskNOT_WAITING_NOTIFICATION;
1752:bsp/middlewares/freertos/source/tasks.c ****                         }
1753:bsp/middlewares/freertos/source/tasks.c ****                     }
1754:bsp/middlewares/freertos/source/tasks.c ****                 }
1755:bsp/middlewares/freertos/source/tasks.c ****             #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1756:bsp/middlewares/freertos/source/tasks.c ****         }
1757:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
1758:bsp/middlewares/freertos/source/tasks.c **** 
1759:bsp/middlewares/freertos/source/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1760:bsp/middlewares/freertos/source/tasks.c ****         {
1761:bsp/middlewares/freertos/source/tasks.c ****             /* Reset the next expected unblock time in case it referred to the
1762:bsp/middlewares/freertos/source/tasks.c ****              * task that is now in the Suspended state. */
1763:bsp/middlewares/freertos/source/tasks.c ****             taskENTER_CRITICAL();
1764:bsp/middlewares/freertos/source/tasks.c ****             {
1765:bsp/middlewares/freertos/source/tasks.c ****                 prvResetNextTaskUnblockTime();
1766:bsp/middlewares/freertos/source/tasks.c ****             }
1767:bsp/middlewares/freertos/source/tasks.c ****             taskEXIT_CRITICAL();
1768:bsp/middlewares/freertos/source/tasks.c ****         }
1769:bsp/middlewares/freertos/source/tasks.c ****         else
1770:bsp/middlewares/freertos/source/tasks.c ****         {
1771:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1772:bsp/middlewares/freertos/source/tasks.c ****         }
1773:bsp/middlewares/freertos/source/tasks.c **** 
1774:bsp/middlewares/freertos/source/tasks.c ****         if( pxTCB == pxCurrentTCB )
1775:bsp/middlewares/freertos/source/tasks.c ****         {
1776:bsp/middlewares/freertos/source/tasks.c ****             if( xSchedulerRunning != pdFALSE )
1777:bsp/middlewares/freertos/source/tasks.c ****             {
1778:bsp/middlewares/freertos/source/tasks.c ****                 /* The current task has just been suspended. */
1779:bsp/middlewares/freertos/source/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1780:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
1781:bsp/middlewares/freertos/source/tasks.c ****             }
1782:bsp/middlewares/freertos/source/tasks.c ****             else
1783:bsp/middlewares/freertos/source/tasks.c ****             {
1784:bsp/middlewares/freertos/source/tasks.c ****                 /* The scheduler is not running, but the task that was pointed
1785:bsp/middlewares/freertos/source/tasks.c ****                  * to by pxCurrentTCB has just been suspended and pxCurrentTCB
1786:bsp/middlewares/freertos/source/tasks.c ****                  * must be adjusted to point to a different task. */
1787:bsp/middlewares/freertos/source/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*li
1788:bsp/middlewares/freertos/source/tasks.c ****                 {
1789:bsp/middlewares/freertos/source/tasks.c ****                     /* No other tasks are ready, so set pxCurrentTCB back to
1790:bsp/middlewares/freertos/source/tasks.c ****                      * NULL so when the next task is created pxCurrentTCB will
1791:bsp/middlewares/freertos/source/tasks.c ****                      * be set to point to it no matter what its relative priority
1792:bsp/middlewares/freertos/source/tasks.c ****                      * is. */
1793:bsp/middlewares/freertos/source/tasks.c ****                     pxCurrentTCB = NULL;
1794:bsp/middlewares/freertos/source/tasks.c ****                 }
1795:bsp/middlewares/freertos/source/tasks.c ****                 else
1796:bsp/middlewares/freertos/source/tasks.c ****                 {
1797:bsp/middlewares/freertos/source/tasks.c ****                     vTaskSwitchContext();
1798:bsp/middlewares/freertos/source/tasks.c ****                 }
1799:bsp/middlewares/freertos/source/tasks.c ****             }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 33


1800:bsp/middlewares/freertos/source/tasks.c ****         }
1801:bsp/middlewares/freertos/source/tasks.c ****         else
1802:bsp/middlewares/freertos/source/tasks.c ****         {
1803:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1804:bsp/middlewares/freertos/source/tasks.c ****         }
1805:bsp/middlewares/freertos/source/tasks.c ****     }
1806:bsp/middlewares/freertos/source/tasks.c **** 
1807:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1808:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1809:bsp/middlewares/freertos/source/tasks.c **** 
1810:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1811:bsp/middlewares/freertos/source/tasks.c **** 
1812:bsp/middlewares/freertos/source/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1813:bsp/middlewares/freertos/source/tasks.c ****     {
  27              		.loc 1 1813 5 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1814:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1814 9 view .LVU1
1815:bsp/middlewares/freertos/source/tasks.c ****         const TCB_t * const pxTCB = xTask;
  33              		.loc 1 1815 9 view .LVU2
1816:bsp/middlewares/freertos/source/tasks.c **** 
1817:bsp/middlewares/freertos/source/tasks.c ****         /* Accesses xPendingReadyList so must be called from a critical
1818:bsp/middlewares/freertos/source/tasks.c ****          * section. */
1819:bsp/middlewares/freertos/source/tasks.c **** 
1820:bsp/middlewares/freertos/source/tasks.c ****         /* It does not make sense to check if the calling task is suspended. */
1821:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTask );
  34              		.loc 1 1821 9 view .LVU3
  35 0000 28B1     		cbz	r0, .L8
  36              		.loc 1 1821 30 discriminator 2 view .LVU4
1822:bsp/middlewares/freertos/source/tasks.c **** 
1823:bsp/middlewares/freertos/source/tasks.c ****         /* Is the task being resumed actually in the suspended list? */
1824:bsp/middlewares/freertos/source/tasks.c ****         if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  37              		.loc 1 1824 9 discriminator 2 view .LVU5
  38              		.loc 1 1824 13 is_stmt 0 discriminator 2 view .LVU6
  39 0002 4169     		ldr	r1, [r0, #20]
  40              		.loc 1 1824 11 discriminator 2 view .LVU7
  41 0004 0C4A     		ldr	r2, .L10
  42 0006 9142     		cmp	r1, r2
  43 0008 0AD0     		beq	.L9
1814:bsp/middlewares/freertos/source/tasks.c ****         const TCB_t * const pxTCB = xTask;
  44              		.loc 1 1814 20 view .LVU8
  45 000a 0020     		movs	r0, #0
  46              	.LVL1:
1814:bsp/middlewares/freertos/source/tasks.c ****         const TCB_t * const pxTCB = xTask;
  47              		.loc 1 1814 20 view .LVU9
  48 000c 7047     		bx	lr
  49              	.LVL2:
  50              	.L8:
1821:bsp/middlewares/freertos/source/tasks.c **** 
  51              		.loc 1 1821 9 is_stmt 1 view .LVU10
  52              	.LBB112:
  53              	.LBI112:
  54              		.file 2 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h"
   1:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 34


   2:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.4.3
   3:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  23:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  24:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  31:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  33:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  34:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  35:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  48:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  49:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  50:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  51:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  52:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  53:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  54:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  56:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  57:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  58:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 35


  59:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  60:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  61:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  62:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  63:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  64:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  65:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  68:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  69:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  70:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  74:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  76:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  77:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  78:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  79:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  80:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  81:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  82:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  83:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  84:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  85:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  86:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  87:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  88:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  89:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
  90:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  91:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  92:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  93:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    if( xSwitchRequired != pdFALSE ) portYIELD(
  94:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  95:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  96:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  98:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
  99:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 100:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 101:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 102:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 103:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 104:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 105:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 106:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 107:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 108:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 109:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 110:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 111:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 112:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 113:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 114:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 36


 116:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 117:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 118:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 119:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 120:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 121:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 122:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 123:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 124:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 125:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 126:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 127:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 128:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 129:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 130:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 131:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 132:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 133:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 134:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 135:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 136:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 137:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 138:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 139:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 140:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 141:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 142:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 143:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 144:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 145:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 146:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 147:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 148:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 150:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 152:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 154:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 158:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 159:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 160:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 161:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 162:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 163:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 164:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 166:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 167:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 168:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 169:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 170:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 37


 173:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 174:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 175:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 177:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 178:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 179:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 180:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 181:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 182:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 183:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         else
 184:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 185:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 186:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 187:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 188:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 189:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 190:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 192:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  55              		.loc 2 193 34 view .LVU11
  56              	.LBB113:
 194:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
  57              		.loc 2 195 9 view .LVU12
 196:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
  58              		.loc 2 197 9 view .LVU13
  59              		.syntax unified
  60              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
  61 000e 4FF01003 			mov r3, #16												
  62 0012 83F31188 		msr basepri, r3											
  63 0016 BFF36F8F 		isb														
  64 001a BFF34F8F 		dsb														
  65              	
  66              	@ 0 "" 2
  67              	.LVL3:
  68              		.thumb
  69              		.syntax unified
  70              	.L3:
  71              		.loc 2 197 9 is_stmt 0 view .LVU14
  72              	.LBE113:
  73              	.LBE112:
1821:bsp/middlewares/freertos/source/tasks.c **** 
  74              		.loc 1 1821 9 is_stmt 1 discriminator 1 view .LVU15
1821:bsp/middlewares/freertos/source/tasks.c **** 
  75              		.loc 1 1821 9 discriminator 1 view .LVU16
1821:bsp/middlewares/freertos/source/tasks.c **** 
  76              		.loc 1 1821 9 discriminator 1 view .LVU17
  77 001e FEE7     		b	.L3
  78              	.L9:
1825:bsp/middlewares/freertos/source/tasks.c ****         {
1826:bsp/middlewares/freertos/source/tasks.c ****             /* Has the task already been resumed from within an ISR? */
1827:bsp/middlewares/freertos/source/tasks.c ****             if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALS
  79              		.loc 1 1827 13 view .LVU18
  80              		.loc 1 1827 17 is_stmt 0 view .LVU19
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 38


  81 0020 836A     		ldr	r3, [r0, #40]
  82              		.loc 1 1827 15 view .LVU20
  83 0022 064A     		ldr	r2, .L10+4
  84 0024 9342     		cmp	r3, r2
  85 0026 02D0     		beq	.L6
1828:bsp/middlewares/freertos/source/tasks.c ****             {
1829:bsp/middlewares/freertos/source/tasks.c ****                 /* Is it in the suspended list because it is in the Suspended
1830:bsp/middlewares/freertos/source/tasks.c ****                  * state, or because is is blocked with no timeout? */
1831:bsp/middlewares/freertos/source/tasks.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint
  86              		.loc 1 1831 17 is_stmt 1 view .LVU21
  87              		.loc 1 1831 19 is_stmt 0 view .LVU22
  88 0028 1BB1     		cbz	r3, .L7
1814:bsp/middlewares/freertos/source/tasks.c ****         const TCB_t * const pxTCB = xTask;
  89              		.loc 1 1814 20 view .LVU23
  90 002a 0020     		movs	r0, #0
  91              	.LVL4:
1814:bsp/middlewares/freertos/source/tasks.c ****         const TCB_t * const pxTCB = xTask;
  92              		.loc 1 1814 20 view .LVU24
  93 002c 7047     		bx	lr
  94              	.LVL5:
  95              	.L6:
1814:bsp/middlewares/freertos/source/tasks.c ****         const TCB_t * const pxTCB = xTask;
  96              		.loc 1 1814 20 view .LVU25
  97 002e 0020     		movs	r0, #0
  98              	.LVL6:
1814:bsp/middlewares/freertos/source/tasks.c ****         const TCB_t * const pxTCB = xTask;
  99              		.loc 1 1814 20 view .LVU26
 100 0030 7047     		bx	lr
 101              	.LVL7:
 102              	.L7:
1832:bsp/middlewares/freertos/source/tasks.c ****                 {
1833:bsp/middlewares/freertos/source/tasks.c ****                     xReturn = pdTRUE;
 103              		.loc 1 1833 29 view .LVU27
 104 0032 0120     		movs	r0, #1
 105              	.LVL8:
1834:bsp/middlewares/freertos/source/tasks.c ****                 }
1835:bsp/middlewares/freertos/source/tasks.c ****                 else
1836:bsp/middlewares/freertos/source/tasks.c ****                 {
1837:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1838:bsp/middlewares/freertos/source/tasks.c ****                 }
1839:bsp/middlewares/freertos/source/tasks.c ****             }
1840:bsp/middlewares/freertos/source/tasks.c ****             else
1841:bsp/middlewares/freertos/source/tasks.c ****             {
1842:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1843:bsp/middlewares/freertos/source/tasks.c ****             }
1844:bsp/middlewares/freertos/source/tasks.c ****         }
1845:bsp/middlewares/freertos/source/tasks.c ****         else
1846:bsp/middlewares/freertos/source/tasks.c ****         {
1847:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
 106              		.loc 1 1847 37 is_stmt 1 view .LVU28
1848:bsp/middlewares/freertos/source/tasks.c ****         }
1849:bsp/middlewares/freertos/source/tasks.c **** 
1850:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
 107              		.loc 1 1850 9 view .LVU29
1851:bsp/middlewares/freertos/source/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 108              		.loc 1 1851 5 is_stmt 0 view .LVU30
 109 0034 7047     		bx	lr
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 39


 110              	.L11:
 111 0036 00BF     		.align	2
 112              	.L10:
 113 0038 00000000 		.word	.LANCHOR0
 114 003c 00000000 		.word	.LANCHOR1
 115              		.cfi_endproc
 116              	.LFE15:
 118              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 119              		.align	1
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	prvResetNextTaskUnblockTime:
 125              	.LFB41:
1852:bsp/middlewares/freertos/source/tasks.c **** 
1853:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1854:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1855:bsp/middlewares/freertos/source/tasks.c **** 
1856:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1857:bsp/middlewares/freertos/source/tasks.c **** 
1858:bsp/middlewares/freertos/source/tasks.c ****     void vTaskResume( TaskHandle_t xTaskToResume )
1859:bsp/middlewares/freertos/source/tasks.c ****     {
1860:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1861:bsp/middlewares/freertos/source/tasks.c **** 
1862:bsp/middlewares/freertos/source/tasks.c ****         /* It does not make sense to resume the calling task. */
1863:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToResume );
1864:bsp/middlewares/freertos/source/tasks.c **** 
1865:bsp/middlewares/freertos/source/tasks.c ****         /* The parameter cannot be NULL as it is impossible to resume the
1866:bsp/middlewares/freertos/source/tasks.c ****          * currently executing task. */
1867:bsp/middlewares/freertos/source/tasks.c ****         if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1868:bsp/middlewares/freertos/source/tasks.c ****         {
1869:bsp/middlewares/freertos/source/tasks.c ****             taskENTER_CRITICAL();
1870:bsp/middlewares/freertos/source/tasks.c ****             {
1871:bsp/middlewares/freertos/source/tasks.c ****                 if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1872:bsp/middlewares/freertos/source/tasks.c ****                 {
1873:bsp/middlewares/freertos/source/tasks.c ****                     traceTASK_RESUME( pxTCB );
1874:bsp/middlewares/freertos/source/tasks.c **** 
1875:bsp/middlewares/freertos/source/tasks.c ****                     /* The ready list can be accessed even if the scheduler is
1876:bsp/middlewares/freertos/source/tasks.c ****                      * suspended because this is inside a critical section. */
1877:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1879:bsp/middlewares/freertos/source/tasks.c **** 
1880:bsp/middlewares/freertos/source/tasks.c ****                     /* A higher priority task may have just been resumed. */
1881:bsp/middlewares/freertos/source/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1882:bsp/middlewares/freertos/source/tasks.c ****                     {
1883:bsp/middlewares/freertos/source/tasks.c ****                         /* This yield may not cause the task just resumed to run,
1884:bsp/middlewares/freertos/source/tasks.c ****                          * but will leave the lists in the correct state for the
1885:bsp/middlewares/freertos/source/tasks.c ****                          * next yield. */
1886:bsp/middlewares/freertos/source/tasks.c ****                         taskYIELD_IF_USING_PREEMPTION();
1887:bsp/middlewares/freertos/source/tasks.c ****                     }
1888:bsp/middlewares/freertos/source/tasks.c ****                     else
1889:bsp/middlewares/freertos/source/tasks.c ****                     {
1890:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1891:bsp/middlewares/freertos/source/tasks.c ****                     }
1892:bsp/middlewares/freertos/source/tasks.c ****                 }
1893:bsp/middlewares/freertos/source/tasks.c ****                 else
1894:bsp/middlewares/freertos/source/tasks.c ****                 {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 40


1895:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1896:bsp/middlewares/freertos/source/tasks.c ****                 }
1897:bsp/middlewares/freertos/source/tasks.c ****             }
1898:bsp/middlewares/freertos/source/tasks.c ****             taskEXIT_CRITICAL();
1899:bsp/middlewares/freertos/source/tasks.c ****         }
1900:bsp/middlewares/freertos/source/tasks.c ****         else
1901:bsp/middlewares/freertos/source/tasks.c ****         {
1902:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1903:bsp/middlewares/freertos/source/tasks.c ****         }
1904:bsp/middlewares/freertos/source/tasks.c ****     }
1905:bsp/middlewares/freertos/source/tasks.c **** 
1906:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1907:bsp/middlewares/freertos/source/tasks.c **** 
1908:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1909:bsp/middlewares/freertos/source/tasks.c **** 
1910:bsp/middlewares/freertos/source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1911:bsp/middlewares/freertos/source/tasks.c **** 
1912:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1913:bsp/middlewares/freertos/source/tasks.c ****     {
1914:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1915:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1916:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
1917:bsp/middlewares/freertos/source/tasks.c **** 
1918:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToResume );
1919:bsp/middlewares/freertos/source/tasks.c **** 
1920:bsp/middlewares/freertos/source/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1921:bsp/middlewares/freertos/source/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1922:bsp/middlewares/freertos/source/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1923:bsp/middlewares/freertos/source/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1924:bsp/middlewares/freertos/source/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1925:bsp/middlewares/freertos/source/tasks.c ****          * is defined in FreeRTOSConfig.h then
1926:bsp/middlewares/freertos/source/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1927:bsp/middlewares/freertos/source/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1928:bsp/middlewares/freertos/source/tasks.c ****          * been assigned a priority above the configured maximum system call
1929:bsp/middlewares/freertos/source/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1930:bsp/middlewares/freertos/source/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1931:bsp/middlewares/freertos/source/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1932:bsp/middlewares/freertos/source/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1933:bsp/middlewares/freertos/source/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1934:bsp/middlewares/freertos/source/tasks.c ****          * provided on the following link:
1935:bsp/middlewares/freertos/source/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1936:bsp/middlewares/freertos/source/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1937:bsp/middlewares/freertos/source/tasks.c **** 
1938:bsp/middlewares/freertos/source/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1939:bsp/middlewares/freertos/source/tasks.c ****         {
1940:bsp/middlewares/freertos/source/tasks.c ****             if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1941:bsp/middlewares/freertos/source/tasks.c ****             {
1942:bsp/middlewares/freertos/source/tasks.c ****                 traceTASK_RESUME_FROM_ISR( pxTCB );
1943:bsp/middlewares/freertos/source/tasks.c **** 
1944:bsp/middlewares/freertos/source/tasks.c ****                 /* Check the ready lists can be accessed. */
1945:bsp/middlewares/freertos/source/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1946:bsp/middlewares/freertos/source/tasks.c ****                 {
1947:bsp/middlewares/freertos/source/tasks.c ****                     /* Ready lists can be accessed so move the task from the
1948:bsp/middlewares/freertos/source/tasks.c ****                      * suspended list to the ready list directly. */
1949:bsp/middlewares/freertos/source/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1950:bsp/middlewares/freertos/source/tasks.c ****                     {
1951:bsp/middlewares/freertos/source/tasks.c ****                         xYieldRequired = pdTRUE;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 41


1952:bsp/middlewares/freertos/source/tasks.c **** 
1953:bsp/middlewares/freertos/source/tasks.c ****                         /* Mark that a yield is pending in case the user is not
1954:bsp/middlewares/freertos/source/tasks.c ****                          * using the return value to initiate a context switch
1955:bsp/middlewares/freertos/source/tasks.c ****                          * from the ISR using portYIELD_FROM_ISR. */
1956:bsp/middlewares/freertos/source/tasks.c ****                         xYieldPending = pdTRUE;
1957:bsp/middlewares/freertos/source/tasks.c ****                     }
1958:bsp/middlewares/freertos/source/tasks.c ****                     else
1959:bsp/middlewares/freertos/source/tasks.c ****                     {
1960:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1961:bsp/middlewares/freertos/source/tasks.c ****                     }
1962:bsp/middlewares/freertos/source/tasks.c **** 
1963:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1964:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1965:bsp/middlewares/freertos/source/tasks.c ****                 }
1966:bsp/middlewares/freertos/source/tasks.c ****                 else
1967:bsp/middlewares/freertos/source/tasks.c ****                 {
1968:bsp/middlewares/freertos/source/tasks.c ****                     /* The delayed or ready lists cannot be accessed so the task
1969:bsp/middlewares/freertos/source/tasks.c ****                      * is held in the pending ready list until the scheduler is
1970:bsp/middlewares/freertos/source/tasks.c ****                      * unsuspended. */
1971:bsp/middlewares/freertos/source/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1972:bsp/middlewares/freertos/source/tasks.c ****                 }
1973:bsp/middlewares/freertos/source/tasks.c ****             }
1974:bsp/middlewares/freertos/source/tasks.c ****             else
1975:bsp/middlewares/freertos/source/tasks.c ****             {
1976:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1977:bsp/middlewares/freertos/source/tasks.c ****             }
1978:bsp/middlewares/freertos/source/tasks.c ****         }
1979:bsp/middlewares/freertos/source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1980:bsp/middlewares/freertos/source/tasks.c **** 
1981:bsp/middlewares/freertos/source/tasks.c ****         return xYieldRequired;
1982:bsp/middlewares/freertos/source/tasks.c ****     }
1983:bsp/middlewares/freertos/source/tasks.c **** 
1984:bsp/middlewares/freertos/source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1985:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
1986:bsp/middlewares/freertos/source/tasks.c **** 
1987:bsp/middlewares/freertos/source/tasks.c **** void vTaskStartScheduler( void )
1988:bsp/middlewares/freertos/source/tasks.c **** {
1989:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xReturn;
1990:bsp/middlewares/freertos/source/tasks.c **** 
1991:bsp/middlewares/freertos/source/tasks.c ****     /* Add the idle task at the lowest priority. */
1992:bsp/middlewares/freertos/source/tasks.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1993:bsp/middlewares/freertos/source/tasks.c ****         {
1994:bsp/middlewares/freertos/source/tasks.c ****             StaticTask_t * pxIdleTaskTCBBuffer = NULL;
1995:bsp/middlewares/freertos/source/tasks.c ****             StackType_t * pxIdleTaskStackBuffer = NULL;
1996:bsp/middlewares/freertos/source/tasks.c ****             uint32_t ulIdleTaskStackSize;
1997:bsp/middlewares/freertos/source/tasks.c **** 
1998:bsp/middlewares/freertos/source/tasks.c ****             /* The Idle task is created using user provided RAM - obtain the
1999:bsp/middlewares/freertos/source/tasks.c ****              * address of the RAM then create the idle task. */
2000:bsp/middlewares/freertos/source/tasks.c ****             vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTas
2001:bsp/middlewares/freertos/source/tasks.c ****             xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
2002:bsp/middlewares/freertos/source/tasks.c ****                                                  configIDLE_TASK_NAME,
2003:bsp/middlewares/freertos/source/tasks.c ****                                                  ulIdleTaskStackSize,
2004:bsp/middlewares/freertos/source/tasks.c ****                                                  ( void * ) NULL,       /*lint !e961.  The cast is 
2005:bsp/middlewares/freertos/source/tasks.c ****                                                  portPRIVILEGE_BIT,     /* In effect ( tskIDLE_PRIO
2006:bsp/middlewares/freertos/source/tasks.c ****                                                  pxIdleTaskStackBuffer,
2007:bsp/middlewares/freertos/source/tasks.c ****                                                  pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exceptio
2008:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 42


2009:bsp/middlewares/freertos/source/tasks.c ****             if( xIdleTaskHandle != NULL )
2010:bsp/middlewares/freertos/source/tasks.c ****             {
2011:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdPASS;
2012:bsp/middlewares/freertos/source/tasks.c ****             }
2013:bsp/middlewares/freertos/source/tasks.c ****             else
2014:bsp/middlewares/freertos/source/tasks.c ****             {
2015:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdFAIL;
2016:bsp/middlewares/freertos/source/tasks.c ****             }
2017:bsp/middlewares/freertos/source/tasks.c ****         }
2018:bsp/middlewares/freertos/source/tasks.c ****     #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
2019:bsp/middlewares/freertos/source/tasks.c ****         {
2020:bsp/middlewares/freertos/source/tasks.c ****             /* The Idle task is being created using dynamically allocated RAM. */
2021:bsp/middlewares/freertos/source/tasks.c ****             xReturn = xTaskCreate( prvIdleTask,
2022:bsp/middlewares/freertos/source/tasks.c ****                                    configIDLE_TASK_NAME,
2023:bsp/middlewares/freertos/source/tasks.c ****                                    configMINIMAL_STACK_SIZE,
2024:bsp/middlewares/freertos/source/tasks.c ****                                    ( void * ) NULL,
2025:bsp/middlewares/freertos/source/tasks.c ****                                    portPRIVILEGE_BIT,  /* In effect ( tskIDLE_PRIORITY | portPRIVIL
2026:bsp/middlewares/freertos/source/tasks.c ****                                    &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as i
2027:bsp/middlewares/freertos/source/tasks.c ****         }
2028:bsp/middlewares/freertos/source/tasks.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
2029:bsp/middlewares/freertos/source/tasks.c **** 
2030:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_TIMERS == 1 )
2031:bsp/middlewares/freertos/source/tasks.c ****         {
2032:bsp/middlewares/freertos/source/tasks.c ****             if( xReturn == pdPASS )
2033:bsp/middlewares/freertos/source/tasks.c ****             {
2034:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = xTimerCreateTimerTask();
2035:bsp/middlewares/freertos/source/tasks.c ****             }
2036:bsp/middlewares/freertos/source/tasks.c ****             else
2037:bsp/middlewares/freertos/source/tasks.c ****             {
2038:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2039:bsp/middlewares/freertos/source/tasks.c ****             }
2040:bsp/middlewares/freertos/source/tasks.c ****         }
2041:bsp/middlewares/freertos/source/tasks.c ****     #endif /* configUSE_TIMERS */
2042:bsp/middlewares/freertos/source/tasks.c **** 
2043:bsp/middlewares/freertos/source/tasks.c ****     if( xReturn == pdPASS )
2044:bsp/middlewares/freertos/source/tasks.c ****     {
2045:bsp/middlewares/freertos/source/tasks.c ****         /* freertos_tasks_c_additions_init() should only be called if the user
2046:bsp/middlewares/freertos/source/tasks.c ****          * definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2047:bsp/middlewares/freertos/source/tasks.c ****          * the only macro called by the function. */
2048:bsp/middlewares/freertos/source/tasks.c ****         #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2049:bsp/middlewares/freertos/source/tasks.c ****             {
2050:bsp/middlewares/freertos/source/tasks.c ****                 freertos_tasks_c_additions_init();
2051:bsp/middlewares/freertos/source/tasks.c ****             }
2052:bsp/middlewares/freertos/source/tasks.c ****         #endif
2053:bsp/middlewares/freertos/source/tasks.c **** 
2054:bsp/middlewares/freertos/source/tasks.c ****         /* Interrupts are turned off here, to ensure a tick does not occur
2055:bsp/middlewares/freertos/source/tasks.c ****          * before or during the call to xPortStartScheduler().  The stacks of
2056:bsp/middlewares/freertos/source/tasks.c ****          * the created tasks contain a status word with interrupts switched on
2057:bsp/middlewares/freertos/source/tasks.c ****          * so interrupts will automatically get re-enabled when the first task
2058:bsp/middlewares/freertos/source/tasks.c ****          * starts to run. */
2059:bsp/middlewares/freertos/source/tasks.c ****         portDISABLE_INTERRUPTS();
2060:bsp/middlewares/freertos/source/tasks.c **** 
2061:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
2062:bsp/middlewares/freertos/source/tasks.c ****             {
2063:bsp/middlewares/freertos/source/tasks.c ****                 /* Switch Newlib's _impure_ptr variable to point to the _reent
2064:bsp/middlewares/freertos/source/tasks.c ****                  * structure specific to the task that will run first.
2065:bsp/middlewares/freertos/source/tasks.c ****                  * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 43


2066:bsp/middlewares/freertos/source/tasks.c ****                  * for additional information. */
2067:bsp/middlewares/freertos/source/tasks.c ****                 _impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2068:bsp/middlewares/freertos/source/tasks.c ****             }
2069:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
2070:bsp/middlewares/freertos/source/tasks.c **** 
2071:bsp/middlewares/freertos/source/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
2072:bsp/middlewares/freertos/source/tasks.c ****         xSchedulerRunning = pdTRUE;
2073:bsp/middlewares/freertos/source/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2074:bsp/middlewares/freertos/source/tasks.c **** 
2075:bsp/middlewares/freertos/source/tasks.c ****         /* If configGENERATE_RUN_TIME_STATS is defined then the following
2076:bsp/middlewares/freertos/source/tasks.c ****          * macro must be defined to configure the timer/counter used to generate
2077:bsp/middlewares/freertos/source/tasks.c ****          * the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2078:bsp/middlewares/freertos/source/tasks.c ****          * is set to 0 and the following line fails to build then ensure you do not
2079:bsp/middlewares/freertos/source/tasks.c ****          * have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2080:bsp/middlewares/freertos/source/tasks.c ****          * FreeRTOSConfig.h file. */
2081:bsp/middlewares/freertos/source/tasks.c ****         portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2082:bsp/middlewares/freertos/source/tasks.c **** 
2083:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
2084:bsp/middlewares/freertos/source/tasks.c **** 
2085:bsp/middlewares/freertos/source/tasks.c ****         /* Setting up the timer tick is hardware specific and thus in the
2086:bsp/middlewares/freertos/source/tasks.c ****          * portable interface. */
2087:bsp/middlewares/freertos/source/tasks.c ****         if( xPortStartScheduler() != pdFALSE )
2088:bsp/middlewares/freertos/source/tasks.c ****         {
2089:bsp/middlewares/freertos/source/tasks.c ****             /* Should not reach here as if the scheduler is running the
2090:bsp/middlewares/freertos/source/tasks.c ****              * function will not return. */
2091:bsp/middlewares/freertos/source/tasks.c ****         }
2092:bsp/middlewares/freertos/source/tasks.c ****         else
2093:bsp/middlewares/freertos/source/tasks.c ****         {
2094:bsp/middlewares/freertos/source/tasks.c ****             /* Should only reach here if a task calls xTaskEndScheduler(). */
2095:bsp/middlewares/freertos/source/tasks.c ****         }
2096:bsp/middlewares/freertos/source/tasks.c ****     }
2097:bsp/middlewares/freertos/source/tasks.c ****     else
2098:bsp/middlewares/freertos/source/tasks.c ****     {
2099:bsp/middlewares/freertos/source/tasks.c ****         /* This line will only be reached if the kernel could not be started,
2100:bsp/middlewares/freertos/source/tasks.c ****          * because there was not enough FreeRTOS heap to create the idle task
2101:bsp/middlewares/freertos/source/tasks.c ****          * or the timer task. */
2102:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2103:bsp/middlewares/freertos/source/tasks.c ****     }
2104:bsp/middlewares/freertos/source/tasks.c **** 
2105:bsp/middlewares/freertos/source/tasks.c ****     /* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2106:bsp/middlewares/freertos/source/tasks.c ****      * meaning xIdleTaskHandle is not used anywhere else. */
2107:bsp/middlewares/freertos/source/tasks.c ****     ( void ) xIdleTaskHandle;
2108:bsp/middlewares/freertos/source/tasks.c **** 
2109:bsp/middlewares/freertos/source/tasks.c ****     /* OpenOCD makes use of uxTopUsedPriority for thread debugging. Prevent uxTopUsedPriority
2110:bsp/middlewares/freertos/source/tasks.c ****      * from getting optimized out as it is no longer used by the kernel. */
2111:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxTopUsedPriority;
2112:bsp/middlewares/freertos/source/tasks.c **** }
2113:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2114:bsp/middlewares/freertos/source/tasks.c **** 
2115:bsp/middlewares/freertos/source/tasks.c **** void vTaskEndScheduler( void )
2116:bsp/middlewares/freertos/source/tasks.c **** {
2117:bsp/middlewares/freertos/source/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
2118:bsp/middlewares/freertos/source/tasks.c ****      * routine so the original ISRs can be restored if necessary.  The port
2119:bsp/middlewares/freertos/source/tasks.c ****      * layer must ensure interrupts enable  bit is left in the correct state. */
2120:bsp/middlewares/freertos/source/tasks.c ****     portDISABLE_INTERRUPTS();
2121:bsp/middlewares/freertos/source/tasks.c ****     xSchedulerRunning = pdFALSE;
2122:bsp/middlewares/freertos/source/tasks.c ****     vPortEndScheduler();
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 44


2123:bsp/middlewares/freertos/source/tasks.c **** }
2124:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
2125:bsp/middlewares/freertos/source/tasks.c **** 
2126:bsp/middlewares/freertos/source/tasks.c **** void vTaskSuspendAll( void )
2127:bsp/middlewares/freertos/source/tasks.c **** {
2128:bsp/middlewares/freertos/source/tasks.c ****     /* A critical section is not required as the variable is of type
2129:bsp/middlewares/freertos/source/tasks.c ****      * BaseType_t.  Please read Richard Barry's reply in the following link to a
2130:bsp/middlewares/freertos/source/tasks.c ****      * post in the FreeRTOS support forum before reporting this as a bug! -
2131:bsp/middlewares/freertos/source/tasks.c ****      * https://goo.gl/wu4acr */
2132:bsp/middlewares/freertos/source/tasks.c **** 
2133:bsp/middlewares/freertos/source/tasks.c ****     /* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2134:bsp/middlewares/freertos/source/tasks.c ****      * do not otherwise exhibit real time behaviour. */
2135:bsp/middlewares/freertos/source/tasks.c ****     portSOFTWARE_BARRIER();
2136:bsp/middlewares/freertos/source/tasks.c **** 
2137:bsp/middlewares/freertos/source/tasks.c ****     /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2138:bsp/middlewares/freertos/source/tasks.c ****      * is used to allow calls to vTaskSuspendAll() to nest. */
2139:bsp/middlewares/freertos/source/tasks.c ****     ++uxSchedulerSuspended;
2140:bsp/middlewares/freertos/source/tasks.c **** 
2141:bsp/middlewares/freertos/source/tasks.c ****     /* Enforces ordering for ports and optimised compilers that may otherwise place
2142:bsp/middlewares/freertos/source/tasks.c ****      * the above increment elsewhere. */
2143:bsp/middlewares/freertos/source/tasks.c ****     portMEMORY_BARRIER();
2144:bsp/middlewares/freertos/source/tasks.c **** }
2145:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
2146:bsp/middlewares/freertos/source/tasks.c **** 
2147:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2148:bsp/middlewares/freertos/source/tasks.c **** 
2149:bsp/middlewares/freertos/source/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void )
2150:bsp/middlewares/freertos/source/tasks.c ****     {
2151:bsp/middlewares/freertos/source/tasks.c ****         TickType_t xReturn;
2152:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2153:bsp/middlewares/freertos/source/tasks.c **** 
2154:bsp/middlewares/freertos/source/tasks.c ****         /* uxHigherPriorityReadyTasks takes care of the case where
2155:bsp/middlewares/freertos/source/tasks.c ****          * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2156:bsp/middlewares/freertos/source/tasks.c ****          * task that are in the Ready state, even though the idle task is
2157:bsp/middlewares/freertos/source/tasks.c ****          * running. */
2158:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2159:bsp/middlewares/freertos/source/tasks.c ****             {
2160:bsp/middlewares/freertos/source/tasks.c ****                 if( uxTopReadyPriority > tskIDLE_PRIORITY )
2161:bsp/middlewares/freertos/source/tasks.c ****                 {
2162:bsp/middlewares/freertos/source/tasks.c ****                     uxHigherPriorityReadyTasks = pdTRUE;
2163:bsp/middlewares/freertos/source/tasks.c ****                 }
2164:bsp/middlewares/freertos/source/tasks.c ****             }
2165:bsp/middlewares/freertos/source/tasks.c ****         #else
2166:bsp/middlewares/freertos/source/tasks.c ****             {
2167:bsp/middlewares/freertos/source/tasks.c ****                 const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2168:bsp/middlewares/freertos/source/tasks.c **** 
2169:bsp/middlewares/freertos/source/tasks.c ****                 /* When port optimised task selection is used the uxTopReadyPriority
2170:bsp/middlewares/freertos/source/tasks.c ****                  * variable is used as a bit map.  If bits other than the least
2171:bsp/middlewares/freertos/source/tasks.c ****                  * significant bit are set then there are tasks that have a priority
2172:bsp/middlewares/freertos/source/tasks.c ****                  * above the idle priority that are in the Ready state.  This takes
2173:bsp/middlewares/freertos/source/tasks.c ****                  * care of the case where the co-operative scheduler is in use. */
2174:bsp/middlewares/freertos/source/tasks.c ****                 if( uxTopReadyPriority > uxLeastSignificantBit )
2175:bsp/middlewares/freertos/source/tasks.c ****                 {
2176:bsp/middlewares/freertos/source/tasks.c ****                     uxHigherPriorityReadyTasks = pdTRUE;
2177:bsp/middlewares/freertos/source/tasks.c ****                 }
2178:bsp/middlewares/freertos/source/tasks.c ****             }
2179:bsp/middlewares/freertos/source/tasks.c ****         #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 45


2180:bsp/middlewares/freertos/source/tasks.c **** 
2181:bsp/middlewares/freertos/source/tasks.c ****         if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2182:bsp/middlewares/freertos/source/tasks.c ****         {
2183:bsp/middlewares/freertos/source/tasks.c ****             xReturn = 0;
2184:bsp/middlewares/freertos/source/tasks.c ****         }
2185:bsp/middlewares/freertos/source/tasks.c ****         else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2186:bsp/middlewares/freertos/source/tasks.c ****         {
2187:bsp/middlewares/freertos/source/tasks.c ****             /* There are other idle priority tasks in the ready state.  If
2188:bsp/middlewares/freertos/source/tasks.c ****              * time slicing is used then the very next tick interrupt must be
2189:bsp/middlewares/freertos/source/tasks.c ****              * processed. */
2190:bsp/middlewares/freertos/source/tasks.c ****             xReturn = 0;
2191:bsp/middlewares/freertos/source/tasks.c ****         }
2192:bsp/middlewares/freertos/source/tasks.c ****         else if( uxHigherPriorityReadyTasks != pdFALSE )
2193:bsp/middlewares/freertos/source/tasks.c ****         {
2194:bsp/middlewares/freertos/source/tasks.c ****             /* There are tasks in the Ready state that have a priority above the
2195:bsp/middlewares/freertos/source/tasks.c ****              * idle priority.  This path can only be reached if
2196:bsp/middlewares/freertos/source/tasks.c ****              * configUSE_PREEMPTION is 0. */
2197:bsp/middlewares/freertos/source/tasks.c ****             xReturn = 0;
2198:bsp/middlewares/freertos/source/tasks.c ****         }
2199:bsp/middlewares/freertos/source/tasks.c ****         else
2200:bsp/middlewares/freertos/source/tasks.c ****         {
2201:bsp/middlewares/freertos/source/tasks.c ****             xReturn = xNextTaskUnblockTime - xTickCount;
2202:bsp/middlewares/freertos/source/tasks.c ****         }
2203:bsp/middlewares/freertos/source/tasks.c **** 
2204:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
2205:bsp/middlewares/freertos/source/tasks.c ****     }
2206:bsp/middlewares/freertos/source/tasks.c **** 
2207:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2208:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
2209:bsp/middlewares/freertos/source/tasks.c **** 
2210:bsp/middlewares/freertos/source/tasks.c **** BaseType_t xTaskResumeAll( void )
2211:bsp/middlewares/freertos/source/tasks.c **** {
2212:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxTCB = NULL;
2213:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
2214:bsp/middlewares/freertos/source/tasks.c **** 
2215:bsp/middlewares/freertos/source/tasks.c ****     /* If uxSchedulerSuspended is zero then this function does not match a
2216:bsp/middlewares/freertos/source/tasks.c ****      * previous call to vTaskSuspendAll(). */
2217:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( uxSchedulerSuspended );
2218:bsp/middlewares/freertos/source/tasks.c **** 
2219:bsp/middlewares/freertos/source/tasks.c ****     /* It is possible that an ISR caused a task to be removed from an event
2220:bsp/middlewares/freertos/source/tasks.c ****      * list while the scheduler was suspended.  If this was the case then the
2221:bsp/middlewares/freertos/source/tasks.c ****      * removed task will have been added to the xPendingReadyList.  Once the
2222:bsp/middlewares/freertos/source/tasks.c ****      * scheduler has been resumed it is safe to move all the pending ready
2223:bsp/middlewares/freertos/source/tasks.c ****      * tasks from this list into their appropriate ready list. */
2224:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
2225:bsp/middlewares/freertos/source/tasks.c ****     {
2226:bsp/middlewares/freertos/source/tasks.c ****         --uxSchedulerSuspended;
2227:bsp/middlewares/freertos/source/tasks.c **** 
2228:bsp/middlewares/freertos/source/tasks.c ****         if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2229:bsp/middlewares/freertos/source/tasks.c ****         {
2230:bsp/middlewares/freertos/source/tasks.c ****             if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2231:bsp/middlewares/freertos/source/tasks.c ****             {
2232:bsp/middlewares/freertos/source/tasks.c ****                 /* Move any readied tasks from the pending list into the
2233:bsp/middlewares/freertos/source/tasks.c ****                  * appropriate ready list. */
2234:bsp/middlewares/freertos/source/tasks.c ****                 while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2235:bsp/middlewares/freertos/source/tasks.c ****                 {
2236:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 vo
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 46


2237:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2238:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2239:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2240:bsp/middlewares/freertos/source/tasks.c **** 
2241:bsp/middlewares/freertos/source/tasks.c ****                     /* If the moved task has a priority higher than the current
2242:bsp/middlewares/freertos/source/tasks.c ****                      * task then a yield must be performed. */
2243:bsp/middlewares/freertos/source/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2244:bsp/middlewares/freertos/source/tasks.c ****                     {
2245:bsp/middlewares/freertos/source/tasks.c ****                         xYieldPending = pdTRUE;
2246:bsp/middlewares/freertos/source/tasks.c ****                     }
2247:bsp/middlewares/freertos/source/tasks.c ****                     else
2248:bsp/middlewares/freertos/source/tasks.c ****                     {
2249:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2250:bsp/middlewares/freertos/source/tasks.c ****                     }
2251:bsp/middlewares/freertos/source/tasks.c ****                 }
2252:bsp/middlewares/freertos/source/tasks.c **** 
2253:bsp/middlewares/freertos/source/tasks.c ****                 if( pxTCB != NULL )
2254:bsp/middlewares/freertos/source/tasks.c ****                 {
2255:bsp/middlewares/freertos/source/tasks.c ****                     /* A task was unblocked while the scheduler was suspended,
2256:bsp/middlewares/freertos/source/tasks.c ****                      * which may have prevented the next unblock time from being
2257:bsp/middlewares/freertos/source/tasks.c ****                      * re-calculated, in which case re-calculate it now.  Mainly
2258:bsp/middlewares/freertos/source/tasks.c ****                      * important for low power tickless implementations, where
2259:bsp/middlewares/freertos/source/tasks.c ****                      * this can prevent an unnecessary exit from low power
2260:bsp/middlewares/freertos/source/tasks.c ****                      * state. */
2261:bsp/middlewares/freertos/source/tasks.c ****                     prvResetNextTaskUnblockTime();
2262:bsp/middlewares/freertos/source/tasks.c ****                 }
2263:bsp/middlewares/freertos/source/tasks.c **** 
2264:bsp/middlewares/freertos/source/tasks.c ****                 /* If any ticks occurred while the scheduler was suspended then
2265:bsp/middlewares/freertos/source/tasks.c ****                  * they should be processed now.  This ensures the tick count does
2266:bsp/middlewares/freertos/source/tasks.c ****                  * not  slip, and that any delayed tasks are resumed at the correct
2267:bsp/middlewares/freertos/source/tasks.c ****                  * time. */
2268:bsp/middlewares/freertos/source/tasks.c ****                 {
2269:bsp/middlewares/freertos/source/tasks.c ****                     TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2270:bsp/middlewares/freertos/source/tasks.c **** 
2271:bsp/middlewares/freertos/source/tasks.c ****                     if( xPendedCounts > ( TickType_t ) 0U )
2272:bsp/middlewares/freertos/source/tasks.c ****                     {
2273:bsp/middlewares/freertos/source/tasks.c ****                         do
2274:bsp/middlewares/freertos/source/tasks.c ****                         {
2275:bsp/middlewares/freertos/source/tasks.c ****                             if( xTaskIncrementTick() != pdFALSE )
2276:bsp/middlewares/freertos/source/tasks.c ****                             {
2277:bsp/middlewares/freertos/source/tasks.c ****                                 xYieldPending = pdTRUE;
2278:bsp/middlewares/freertos/source/tasks.c ****                             }
2279:bsp/middlewares/freertos/source/tasks.c ****                             else
2280:bsp/middlewares/freertos/source/tasks.c ****                             {
2281:bsp/middlewares/freertos/source/tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2282:bsp/middlewares/freertos/source/tasks.c ****                             }
2283:bsp/middlewares/freertos/source/tasks.c **** 
2284:bsp/middlewares/freertos/source/tasks.c ****                             --xPendedCounts;
2285:bsp/middlewares/freertos/source/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
2286:bsp/middlewares/freertos/source/tasks.c **** 
2287:bsp/middlewares/freertos/source/tasks.c ****                         xPendedTicks = 0;
2288:bsp/middlewares/freertos/source/tasks.c ****                     }
2289:bsp/middlewares/freertos/source/tasks.c ****                     else
2290:bsp/middlewares/freertos/source/tasks.c ****                     {
2291:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2292:bsp/middlewares/freertos/source/tasks.c ****                     }
2293:bsp/middlewares/freertos/source/tasks.c ****                 }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 47


2294:bsp/middlewares/freertos/source/tasks.c **** 
2295:bsp/middlewares/freertos/source/tasks.c ****                 if( xYieldPending != pdFALSE )
2296:bsp/middlewares/freertos/source/tasks.c ****                 {
2297:bsp/middlewares/freertos/source/tasks.c ****                     #if ( configUSE_PREEMPTION != 0 )
2298:bsp/middlewares/freertos/source/tasks.c ****                         {
2299:bsp/middlewares/freertos/source/tasks.c ****                             xAlreadyYielded = pdTRUE;
2300:bsp/middlewares/freertos/source/tasks.c ****                         }
2301:bsp/middlewares/freertos/source/tasks.c ****                     #endif
2302:bsp/middlewares/freertos/source/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
2303:bsp/middlewares/freertos/source/tasks.c ****                 }
2304:bsp/middlewares/freertos/source/tasks.c ****                 else
2305:bsp/middlewares/freertos/source/tasks.c ****                 {
2306:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2307:bsp/middlewares/freertos/source/tasks.c ****                 }
2308:bsp/middlewares/freertos/source/tasks.c ****             }
2309:bsp/middlewares/freertos/source/tasks.c ****         }
2310:bsp/middlewares/freertos/source/tasks.c ****         else
2311:bsp/middlewares/freertos/source/tasks.c ****         {
2312:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2313:bsp/middlewares/freertos/source/tasks.c ****         }
2314:bsp/middlewares/freertos/source/tasks.c ****     }
2315:bsp/middlewares/freertos/source/tasks.c ****     taskEXIT_CRITICAL();
2316:bsp/middlewares/freertos/source/tasks.c **** 
2317:bsp/middlewares/freertos/source/tasks.c ****     return xAlreadyYielded;
2318:bsp/middlewares/freertos/source/tasks.c **** }
2319:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2320:bsp/middlewares/freertos/source/tasks.c **** 
2321:bsp/middlewares/freertos/source/tasks.c **** TickType_t xTaskGetTickCount( void )
2322:bsp/middlewares/freertos/source/tasks.c **** {
2323:bsp/middlewares/freertos/source/tasks.c ****     TickType_t xTicks;
2324:bsp/middlewares/freertos/source/tasks.c **** 
2325:bsp/middlewares/freertos/source/tasks.c ****     /* Critical section required if running on a 16 bit processor. */
2326:bsp/middlewares/freertos/source/tasks.c ****     portTICK_TYPE_ENTER_CRITICAL();
2327:bsp/middlewares/freertos/source/tasks.c ****     {
2328:bsp/middlewares/freertos/source/tasks.c ****         xTicks = xTickCount;
2329:bsp/middlewares/freertos/source/tasks.c ****     }
2330:bsp/middlewares/freertos/source/tasks.c ****     portTICK_TYPE_EXIT_CRITICAL();
2331:bsp/middlewares/freertos/source/tasks.c **** 
2332:bsp/middlewares/freertos/source/tasks.c ****     return xTicks;
2333:bsp/middlewares/freertos/source/tasks.c **** }
2334:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2335:bsp/middlewares/freertos/source/tasks.c **** 
2336:bsp/middlewares/freertos/source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2337:bsp/middlewares/freertos/source/tasks.c **** {
2338:bsp/middlewares/freertos/source/tasks.c ****     TickType_t xReturn;
2339:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
2340:bsp/middlewares/freertos/source/tasks.c **** 
2341:bsp/middlewares/freertos/source/tasks.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
2342:bsp/middlewares/freertos/source/tasks.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
2343:bsp/middlewares/freertos/source/tasks.c ****      * above the maximum system call priority are kept permanently enabled, even
2344:bsp/middlewares/freertos/source/tasks.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
2345:bsp/middlewares/freertos/source/tasks.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2346:bsp/middlewares/freertos/source/tasks.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2347:bsp/middlewares/freertos/source/tasks.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
2348:bsp/middlewares/freertos/source/tasks.c ****      * assigned a priority above the configured maximum system call priority.
2349:bsp/middlewares/freertos/source/tasks.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
2350:bsp/middlewares/freertos/source/tasks.c ****      * that have been assigned a priority at or (logically) below the maximum
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 48


2351:bsp/middlewares/freertos/source/tasks.c ****      * system call  interrupt priority.  FreeRTOS maintains a separate interrupt
2352:bsp/middlewares/freertos/source/tasks.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
2353:bsp/middlewares/freertos/source/tasks.c ****      * More information (albeit Cortex-M specific) is provided on the following
2354:bsp/middlewares/freertos/source/tasks.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
2355:bsp/middlewares/freertos/source/tasks.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2356:bsp/middlewares/freertos/source/tasks.c **** 
2357:bsp/middlewares/freertos/source/tasks.c ****     uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2358:bsp/middlewares/freertos/source/tasks.c ****     {
2359:bsp/middlewares/freertos/source/tasks.c ****         xReturn = xTickCount;
2360:bsp/middlewares/freertos/source/tasks.c ****     }
2361:bsp/middlewares/freertos/source/tasks.c ****     portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2362:bsp/middlewares/freertos/source/tasks.c **** 
2363:bsp/middlewares/freertos/source/tasks.c ****     return xReturn;
2364:bsp/middlewares/freertos/source/tasks.c **** }
2365:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2366:bsp/middlewares/freertos/source/tasks.c **** 
2367:bsp/middlewares/freertos/source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2368:bsp/middlewares/freertos/source/tasks.c **** {
2369:bsp/middlewares/freertos/source/tasks.c ****     /* A critical section is not required because the variables are of type
2370:bsp/middlewares/freertos/source/tasks.c ****      * BaseType_t. */
2371:bsp/middlewares/freertos/source/tasks.c ****     return uxCurrentNumberOfTasks;
2372:bsp/middlewares/freertos/source/tasks.c **** }
2373:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2374:bsp/middlewares/freertos/source/tasks.c **** 
2375:bsp/middlewares/freertos/source/tasks.c **** char * pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed f
2376:bsp/middlewares/freertos/source/tasks.c **** {
2377:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxTCB;
2378:bsp/middlewares/freertos/source/tasks.c **** 
2379:bsp/middlewares/freertos/source/tasks.c ****     /* If null is passed in here then the name of the calling task is being
2380:bsp/middlewares/freertos/source/tasks.c ****      * queried. */
2381:bsp/middlewares/freertos/source/tasks.c ****     pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2382:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTCB );
2383:bsp/middlewares/freertos/source/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
2384:bsp/middlewares/freertos/source/tasks.c **** }
2385:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2386:bsp/middlewares/freertos/source/tasks.c **** 
2387:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2388:bsp/middlewares/freertos/source/tasks.c **** 
2389:bsp/middlewares/freertos/source/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
2390:bsp/middlewares/freertos/source/tasks.c ****                                                      const char pcNameToQuery[] )
2391:bsp/middlewares/freertos/source/tasks.c ****     {
2392:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxNextTCB, * pxFirstTCB, * pxReturn = NULL;
2393:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t x;
2394:bsp/middlewares/freertos/source/tasks.c ****         char cNextChar;
2395:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xBreakLoop;
2396:bsp/middlewares/freertos/source/tasks.c **** 
2397:bsp/middlewares/freertos/source/tasks.c ****         /* This function is called with the scheduler suspended. */
2398:bsp/middlewares/freertos/source/tasks.c **** 
2399:bsp/middlewares/freertos/source/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2400:bsp/middlewares/freertos/source/tasks.c ****         {
2401:bsp/middlewares/freertos/source/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
2402:bsp/middlewares/freertos/source/tasks.c **** 
2403:bsp/middlewares/freertos/source/tasks.c ****             do
2404:bsp/middlewares/freertos/source/tasks.c ****             {
2405:bsp/middlewares/freertos/source/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
2406:bsp/middlewares/freertos/source/tasks.c **** 
2407:bsp/middlewares/freertos/source/tasks.c ****                 /* Check each character in the name looking for a match or
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 49


2408:bsp/middlewares/freertos/source/tasks.c ****                  * mismatch. */
2409:bsp/middlewares/freertos/source/tasks.c ****                 xBreakLoop = pdFALSE;
2410:bsp/middlewares/freertos/source/tasks.c **** 
2411:bsp/middlewares/freertos/source/tasks.c ****                 for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2412:bsp/middlewares/freertos/source/tasks.c ****                 {
2413:bsp/middlewares/freertos/source/tasks.c ****                     cNextChar = pxNextTCB->pcTaskName[ x ];
2414:bsp/middlewares/freertos/source/tasks.c **** 
2415:bsp/middlewares/freertos/source/tasks.c ****                     if( cNextChar != pcNameToQuery[ x ] )
2416:bsp/middlewares/freertos/source/tasks.c ****                     {
2417:bsp/middlewares/freertos/source/tasks.c ****                         /* Characters didn't match. */
2418:bsp/middlewares/freertos/source/tasks.c ****                         xBreakLoop = pdTRUE;
2419:bsp/middlewares/freertos/source/tasks.c ****                     }
2420:bsp/middlewares/freertos/source/tasks.c ****                     else if( cNextChar == ( char ) 0x00 )
2421:bsp/middlewares/freertos/source/tasks.c ****                     {
2422:bsp/middlewares/freertos/source/tasks.c ****                         /* Both strings terminated, a match must have been
2423:bsp/middlewares/freertos/source/tasks.c ****                          * found. */
2424:bsp/middlewares/freertos/source/tasks.c ****                         pxReturn = pxNextTCB;
2425:bsp/middlewares/freertos/source/tasks.c ****                         xBreakLoop = pdTRUE;
2426:bsp/middlewares/freertos/source/tasks.c ****                     }
2427:bsp/middlewares/freertos/source/tasks.c ****                     else
2428:bsp/middlewares/freertos/source/tasks.c ****                     {
2429:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2430:bsp/middlewares/freertos/source/tasks.c ****                     }
2431:bsp/middlewares/freertos/source/tasks.c **** 
2432:bsp/middlewares/freertos/source/tasks.c ****                     if( xBreakLoop != pdFALSE )
2433:bsp/middlewares/freertos/source/tasks.c ****                     {
2434:bsp/middlewares/freertos/source/tasks.c ****                         break;
2435:bsp/middlewares/freertos/source/tasks.c ****                     }
2436:bsp/middlewares/freertos/source/tasks.c ****                 }
2437:bsp/middlewares/freertos/source/tasks.c **** 
2438:bsp/middlewares/freertos/source/tasks.c ****                 if( pxReturn != NULL )
2439:bsp/middlewares/freertos/source/tasks.c ****                 {
2440:bsp/middlewares/freertos/source/tasks.c ****                     /* The handle has been found. */
2441:bsp/middlewares/freertos/source/tasks.c ****                     break;
2442:bsp/middlewares/freertos/source/tasks.c ****                 }
2443:bsp/middlewares/freertos/source/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
2444:bsp/middlewares/freertos/source/tasks.c ****         }
2445:bsp/middlewares/freertos/source/tasks.c ****         else
2446:bsp/middlewares/freertos/source/tasks.c ****         {
2447:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2448:bsp/middlewares/freertos/source/tasks.c ****         }
2449:bsp/middlewares/freertos/source/tasks.c **** 
2450:bsp/middlewares/freertos/source/tasks.c ****         return pxReturn;
2451:bsp/middlewares/freertos/source/tasks.c ****     }
2452:bsp/middlewares/freertos/source/tasks.c **** 
2453:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2454:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2455:bsp/middlewares/freertos/source/tasks.c **** 
2456:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2457:bsp/middlewares/freertos/source/tasks.c **** 
2458:bsp/middlewares/freertos/source/tasks.c ****     TaskHandle_t xTaskGetHandle( const char * pcNameToQuery ) /*lint !e971 Unqualified char types a
2459:bsp/middlewares/freertos/source/tasks.c ****     {
2460:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxQueue = configMAX_PRIORITIES;
2461:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
2462:bsp/middlewares/freertos/source/tasks.c **** 
2463:bsp/middlewares/freertos/source/tasks.c ****         /* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2464:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 50


2465:bsp/middlewares/freertos/source/tasks.c **** 
2466:bsp/middlewares/freertos/source/tasks.c ****         vTaskSuspendAll();
2467:bsp/middlewares/freertos/source/tasks.c ****         {
2468:bsp/middlewares/freertos/source/tasks.c ****             /* Search the ready lists. */
2469:bsp/middlewares/freertos/source/tasks.c ****             do
2470:bsp/middlewares/freertos/source/tasks.c ****             {
2471:bsp/middlewares/freertos/source/tasks.c ****                 uxQueue--;
2472:bsp/middlewares/freertos/source/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueu
2473:bsp/middlewares/freertos/source/tasks.c **** 
2474:bsp/middlewares/freertos/source/tasks.c ****                 if( pxTCB != NULL )
2475:bsp/middlewares/freertos/source/tasks.c ****                 {
2476:bsp/middlewares/freertos/source/tasks.c ****                     /* Found the handle. */
2477:bsp/middlewares/freertos/source/tasks.c ****                     break;
2478:bsp/middlewares/freertos/source/tasks.c ****                 }
2479:bsp/middlewares/freertos/source/tasks.c ****             } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as 
2480:bsp/middlewares/freertos/source/tasks.c **** 
2481:bsp/middlewares/freertos/source/tasks.c ****             /* Search the delayed lists. */
2482:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB == NULL )
2483:bsp/middlewares/freertos/source/tasks.c ****             {
2484:bsp/middlewares/freertos/source/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQ
2485:bsp/middlewares/freertos/source/tasks.c ****             }
2486:bsp/middlewares/freertos/source/tasks.c **** 
2487:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB == NULL )
2488:bsp/middlewares/freertos/source/tasks.c ****             {
2489:bsp/middlewares/freertos/source/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, p
2490:bsp/middlewares/freertos/source/tasks.c ****             }
2491:bsp/middlewares/freertos/source/tasks.c **** 
2492:bsp/middlewares/freertos/source/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
2493:bsp/middlewares/freertos/source/tasks.c ****                 {
2494:bsp/middlewares/freertos/source/tasks.c ****                     if( pxTCB == NULL )
2495:bsp/middlewares/freertos/source/tasks.c ****                     {
2496:bsp/middlewares/freertos/source/tasks.c ****                         /* Search the suspended list. */
2497:bsp/middlewares/freertos/source/tasks.c ****                         pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuer
2498:bsp/middlewares/freertos/source/tasks.c ****                     }
2499:bsp/middlewares/freertos/source/tasks.c ****                 }
2500:bsp/middlewares/freertos/source/tasks.c ****             #endif
2501:bsp/middlewares/freertos/source/tasks.c **** 
2502:bsp/middlewares/freertos/source/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
2503:bsp/middlewares/freertos/source/tasks.c ****                 {
2504:bsp/middlewares/freertos/source/tasks.c ****                     if( pxTCB == NULL )
2505:bsp/middlewares/freertos/source/tasks.c ****                     {
2506:bsp/middlewares/freertos/source/tasks.c ****                         /* Search the deleted list. */
2507:bsp/middlewares/freertos/source/tasks.c ****                         pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcName
2508:bsp/middlewares/freertos/source/tasks.c ****                     }
2509:bsp/middlewares/freertos/source/tasks.c ****                 }
2510:bsp/middlewares/freertos/source/tasks.c ****             #endif
2511:bsp/middlewares/freertos/source/tasks.c ****         }
2512:bsp/middlewares/freertos/source/tasks.c ****         ( void ) xTaskResumeAll();
2513:bsp/middlewares/freertos/source/tasks.c **** 
2514:bsp/middlewares/freertos/source/tasks.c ****         return pxTCB;
2515:bsp/middlewares/freertos/source/tasks.c ****     }
2516:bsp/middlewares/freertos/source/tasks.c **** 
2517:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2518:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2519:bsp/middlewares/freertos/source/tasks.c **** 
2520:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2521:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 51


2522:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
2523:bsp/middlewares/freertos/source/tasks.c ****                                       const UBaseType_t uxArraySize,
2524:bsp/middlewares/freertos/source/tasks.c ****                                       uint32_t * const pulTotalRunTime )
2525:bsp/middlewares/freertos/source/tasks.c ****     {
2526:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2527:bsp/middlewares/freertos/source/tasks.c **** 
2528:bsp/middlewares/freertos/source/tasks.c ****         vTaskSuspendAll();
2529:bsp/middlewares/freertos/source/tasks.c ****         {
2530:bsp/middlewares/freertos/source/tasks.c ****             /* Is there a space in the array for each task in the system? */
2531:bsp/middlewares/freertos/source/tasks.c ****             if( uxArraySize >= uxCurrentNumberOfTasks )
2532:bsp/middlewares/freertos/source/tasks.c ****             {
2533:bsp/middlewares/freertos/source/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2534:bsp/middlewares/freertos/source/tasks.c ****                  * task in the Ready state. */
2535:bsp/middlewares/freertos/source/tasks.c ****                 do
2536:bsp/middlewares/freertos/source/tasks.c ****                 {
2537:bsp/middlewares/freertos/source/tasks.c ****                     uxQueue--;
2538:bsp/middlewares/freertos/source/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
2539:bsp/middlewares/freertos/source/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
2540:bsp/middlewares/freertos/source/tasks.c **** 
2541:bsp/middlewares/freertos/source/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2542:bsp/middlewares/freertos/source/tasks.c ****                  * task in the Blocked state. */
2543:bsp/middlewares/freertos/source/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2544:bsp/middlewares/freertos/source/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2545:bsp/middlewares/freertos/source/tasks.c **** 
2546:bsp/middlewares/freertos/source/tasks.c ****                 #if ( INCLUDE_vTaskDelete == 1 )
2547:bsp/middlewares/freertos/source/tasks.c ****                     {
2548:bsp/middlewares/freertos/source/tasks.c ****                         /* Fill in an TaskStatus_t structure with information on
2549:bsp/middlewares/freertos/source/tasks.c ****                          * each task that has been deleted but not yet cleaned up. */
2550:bsp/middlewares/freertos/source/tasks.c ****                         uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &
2551:bsp/middlewares/freertos/source/tasks.c ****                     }
2552:bsp/middlewares/freertos/source/tasks.c ****                 #endif
2553:bsp/middlewares/freertos/source/tasks.c **** 
2554:bsp/middlewares/freertos/source/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
2555:bsp/middlewares/freertos/source/tasks.c ****                     {
2556:bsp/middlewares/freertos/source/tasks.c ****                         /* Fill in an TaskStatus_t structure with information on
2557:bsp/middlewares/freertos/source/tasks.c ****                          * each task in the Suspended state. */
2558:bsp/middlewares/freertos/source/tasks.c ****                         uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &
2559:bsp/middlewares/freertos/source/tasks.c ****                     }
2560:bsp/middlewares/freertos/source/tasks.c ****                 #endif
2561:bsp/middlewares/freertos/source/tasks.c **** 
2562:bsp/middlewares/freertos/source/tasks.c ****                 #if ( configGENERATE_RUN_TIME_STATS == 1 )
2563:bsp/middlewares/freertos/source/tasks.c ****                     {
2564:bsp/middlewares/freertos/source/tasks.c ****                         if( pulTotalRunTime != NULL )
2565:bsp/middlewares/freertos/source/tasks.c ****                         {
2566:bsp/middlewares/freertos/source/tasks.c ****                             #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2567:bsp/middlewares/freertos/source/tasks.c ****                                 portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2568:bsp/middlewares/freertos/source/tasks.c ****                             #else
2569:bsp/middlewares/freertos/source/tasks.c ****                                 *pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2570:bsp/middlewares/freertos/source/tasks.c ****                             #endif
2571:bsp/middlewares/freertos/source/tasks.c ****                         }
2572:bsp/middlewares/freertos/source/tasks.c ****                     }
2573:bsp/middlewares/freertos/source/tasks.c ****                 #else /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2574:bsp/middlewares/freertos/source/tasks.c ****                     {
2575:bsp/middlewares/freertos/source/tasks.c ****                         if( pulTotalRunTime != NULL )
2576:bsp/middlewares/freertos/source/tasks.c ****                         {
2577:bsp/middlewares/freertos/source/tasks.c ****                             *pulTotalRunTime = 0;
2578:bsp/middlewares/freertos/source/tasks.c ****                         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 52


2579:bsp/middlewares/freertos/source/tasks.c ****                     }
2580:bsp/middlewares/freertos/source/tasks.c ****                 #endif /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2581:bsp/middlewares/freertos/source/tasks.c ****             }
2582:bsp/middlewares/freertos/source/tasks.c ****             else
2583:bsp/middlewares/freertos/source/tasks.c ****             {
2584:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2585:bsp/middlewares/freertos/source/tasks.c ****             }
2586:bsp/middlewares/freertos/source/tasks.c ****         }
2587:bsp/middlewares/freertos/source/tasks.c ****         ( void ) xTaskResumeAll();
2588:bsp/middlewares/freertos/source/tasks.c **** 
2589:bsp/middlewares/freertos/source/tasks.c ****         return uxTask;
2590:bsp/middlewares/freertos/source/tasks.c ****     }
2591:bsp/middlewares/freertos/source/tasks.c **** 
2592:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2593:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
2594:bsp/middlewares/freertos/source/tasks.c **** 
2595:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2596:bsp/middlewares/freertos/source/tasks.c **** 
2597:bsp/middlewares/freertos/source/tasks.c ****     TaskHandle_t xTaskGetIdleTaskHandle( void )
2598:bsp/middlewares/freertos/source/tasks.c ****     {
2599:bsp/middlewares/freertos/source/tasks.c ****         /* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2600:bsp/middlewares/freertos/source/tasks.c ****          * started, then xIdleTaskHandle will be NULL. */
2601:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xIdleTaskHandle != NULL ) );
2602:bsp/middlewares/freertos/source/tasks.c ****         return xIdleTaskHandle;
2603:bsp/middlewares/freertos/source/tasks.c ****     }
2604:bsp/middlewares/freertos/source/tasks.c **** 
2605:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2606:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
2607:bsp/middlewares/freertos/source/tasks.c **** 
2608:bsp/middlewares/freertos/source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2609:bsp/middlewares/freertos/source/tasks.c ****  * This is to ensure vTaskStepTick() is available when user defined low power mode
2610:bsp/middlewares/freertos/source/tasks.c ****  * implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2611:bsp/middlewares/freertos/source/tasks.c ****  * 1. */
2612:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2613:bsp/middlewares/freertos/source/tasks.c **** 
2614:bsp/middlewares/freertos/source/tasks.c ****     void vTaskStepTick( const TickType_t xTicksToJump )
2615:bsp/middlewares/freertos/source/tasks.c ****     {
2616:bsp/middlewares/freertos/source/tasks.c ****         /* Correct the tick count value after a period during which the tick
2617:bsp/middlewares/freertos/source/tasks.c ****          * was suppressed.  Note this does *not* call the tick hook function for
2618:bsp/middlewares/freertos/source/tasks.c ****          * each stepped tick. */
2619:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2620:bsp/middlewares/freertos/source/tasks.c ****         xTickCount += xTicksToJump;
2621:bsp/middlewares/freertos/source/tasks.c ****         traceINCREASE_TICK_COUNT( xTicksToJump );
2622:bsp/middlewares/freertos/source/tasks.c ****     }
2623:bsp/middlewares/freertos/source/tasks.c **** 
2624:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2625:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
2626:bsp/middlewares/freertos/source/tasks.c **** 
2627:bsp/middlewares/freertos/source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2628:bsp/middlewares/freertos/source/tasks.c **** {
2629:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xYieldOccurred;
2630:bsp/middlewares/freertos/source/tasks.c **** 
2631:bsp/middlewares/freertos/source/tasks.c ****     /* Must not be called with the scheduler suspended as the implementation
2632:bsp/middlewares/freertos/source/tasks.c ****      * relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2633:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( uxSchedulerSuspended == 0 );
2634:bsp/middlewares/freertos/source/tasks.c **** 
2635:bsp/middlewares/freertos/source/tasks.c ****     /* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 53


2636:bsp/middlewares/freertos/source/tasks.c ****      * the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2637:bsp/middlewares/freertos/source/tasks.c ****     vTaskSuspendAll();
2638:bsp/middlewares/freertos/source/tasks.c ****     xPendedTicks += xTicksToCatchUp;
2639:bsp/middlewares/freertos/source/tasks.c ****     xYieldOccurred = xTaskResumeAll();
2640:bsp/middlewares/freertos/source/tasks.c **** 
2641:bsp/middlewares/freertos/source/tasks.c ****     return xYieldOccurred;
2642:bsp/middlewares/freertos/source/tasks.c **** }
2643:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
2644:bsp/middlewares/freertos/source/tasks.c **** 
2645:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2646:bsp/middlewares/freertos/source/tasks.c **** 
2647:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2648:bsp/middlewares/freertos/source/tasks.c ****     {
2649:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB = xTask;
2650:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
2651:bsp/middlewares/freertos/source/tasks.c **** 
2652:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( pxTCB );
2653:bsp/middlewares/freertos/source/tasks.c **** 
2654:bsp/middlewares/freertos/source/tasks.c ****         vTaskSuspendAll();
2655:bsp/middlewares/freertos/source/tasks.c ****         {
2656:bsp/middlewares/freertos/source/tasks.c ****             /* A task can only be prematurely removed from the Blocked state if
2657:bsp/middlewares/freertos/source/tasks.c ****              * it is actually in the Blocked state. */
2658:bsp/middlewares/freertos/source/tasks.c ****             if( eTaskGetState( xTask ) == eBlocked )
2659:bsp/middlewares/freertos/source/tasks.c ****             {
2660:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdPASS;
2661:bsp/middlewares/freertos/source/tasks.c **** 
2662:bsp/middlewares/freertos/source/tasks.c ****                 /* Remove the reference to the task from the blocked list.  An
2663:bsp/middlewares/freertos/source/tasks.c ****                  * interrupt won't touch the xStateListItem because the
2664:bsp/middlewares/freertos/source/tasks.c ****                  * scheduler is suspended. */
2665:bsp/middlewares/freertos/source/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2666:bsp/middlewares/freertos/source/tasks.c **** 
2667:bsp/middlewares/freertos/source/tasks.c ****                 /* Is the task waiting on an event also?  If so remove it from
2668:bsp/middlewares/freertos/source/tasks.c ****                  * the event list too.  Interrupts can touch the event list item,
2669:bsp/middlewares/freertos/source/tasks.c ****                  * even though the scheduler is suspended, so a critical section
2670:bsp/middlewares/freertos/source/tasks.c ****                  * is used. */
2671:bsp/middlewares/freertos/source/tasks.c ****                 taskENTER_CRITICAL();
2672:bsp/middlewares/freertos/source/tasks.c ****                 {
2673:bsp/middlewares/freertos/source/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2674:bsp/middlewares/freertos/source/tasks.c ****                     {
2675:bsp/middlewares/freertos/source/tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2676:bsp/middlewares/freertos/source/tasks.c **** 
2677:bsp/middlewares/freertos/source/tasks.c ****                         /* This lets the task know it was forcibly removed from the
2678:bsp/middlewares/freertos/source/tasks.c ****                          * blocked state so it should not re-evaluate its block time and
2679:bsp/middlewares/freertos/source/tasks.c ****                          * then block again. */
2680:bsp/middlewares/freertos/source/tasks.c ****                         pxTCB->ucDelayAborted = pdTRUE;
2681:bsp/middlewares/freertos/source/tasks.c ****                     }
2682:bsp/middlewares/freertos/source/tasks.c ****                     else
2683:bsp/middlewares/freertos/source/tasks.c ****                     {
2684:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2685:bsp/middlewares/freertos/source/tasks.c ****                     }
2686:bsp/middlewares/freertos/source/tasks.c ****                 }
2687:bsp/middlewares/freertos/source/tasks.c ****                 taskEXIT_CRITICAL();
2688:bsp/middlewares/freertos/source/tasks.c **** 
2689:bsp/middlewares/freertos/source/tasks.c ****                 /* Place the unblocked task into the appropriate ready list. */
2690:bsp/middlewares/freertos/source/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
2691:bsp/middlewares/freertos/source/tasks.c **** 
2692:bsp/middlewares/freertos/source/tasks.c ****                 /* A task being unblocked cannot cause an immediate context
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 54


2693:bsp/middlewares/freertos/source/tasks.c ****                  * switch if preemption is turned off. */
2694:bsp/middlewares/freertos/source/tasks.c ****                 #if ( configUSE_PREEMPTION == 1 )
2695:bsp/middlewares/freertos/source/tasks.c ****                     {
2696:bsp/middlewares/freertos/source/tasks.c ****                         /* Preemption is on, but a context switch should only be
2697:bsp/middlewares/freertos/source/tasks.c ****                          *  performed if the unblocked task has a priority that is
2698:bsp/middlewares/freertos/source/tasks.c ****                          *  equal to or higher than the currently executing task. */
2699:bsp/middlewares/freertos/source/tasks.c ****                         if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2700:bsp/middlewares/freertos/source/tasks.c ****                         {
2701:bsp/middlewares/freertos/source/tasks.c ****                             /* Pend the yield to be performed when the scheduler
2702:bsp/middlewares/freertos/source/tasks.c ****                              * is unsuspended. */
2703:bsp/middlewares/freertos/source/tasks.c ****                             xYieldPending = pdTRUE;
2704:bsp/middlewares/freertos/source/tasks.c ****                         }
2705:bsp/middlewares/freertos/source/tasks.c ****                         else
2706:bsp/middlewares/freertos/source/tasks.c ****                         {
2707:bsp/middlewares/freertos/source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
2708:bsp/middlewares/freertos/source/tasks.c ****                         }
2709:bsp/middlewares/freertos/source/tasks.c ****                     }
2710:bsp/middlewares/freertos/source/tasks.c ****                 #endif /* configUSE_PREEMPTION */
2711:bsp/middlewares/freertos/source/tasks.c ****             }
2712:bsp/middlewares/freertos/source/tasks.c ****             else
2713:bsp/middlewares/freertos/source/tasks.c ****             {
2714:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdFAIL;
2715:bsp/middlewares/freertos/source/tasks.c ****             }
2716:bsp/middlewares/freertos/source/tasks.c ****         }
2717:bsp/middlewares/freertos/source/tasks.c ****         ( void ) xTaskResumeAll();
2718:bsp/middlewares/freertos/source/tasks.c **** 
2719:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
2720:bsp/middlewares/freertos/source/tasks.c ****     }
2721:bsp/middlewares/freertos/source/tasks.c **** 
2722:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2723:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
2724:bsp/middlewares/freertos/source/tasks.c **** 
2725:bsp/middlewares/freertos/source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2726:bsp/middlewares/freertos/source/tasks.c **** {
2727:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxTCB;
2728:bsp/middlewares/freertos/source/tasks.c ****     TickType_t xItemValue;
2729:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
2730:bsp/middlewares/freertos/source/tasks.c **** 
2731:bsp/middlewares/freertos/source/tasks.c ****     /* Called by the portable layer each time a tick interrupt occurs.
2732:bsp/middlewares/freertos/source/tasks.c ****      * Increments the tick then checks to see if the new tick value will cause any
2733:bsp/middlewares/freertos/source/tasks.c ****      * tasks to be unblocked. */
2734:bsp/middlewares/freertos/source/tasks.c ****     traceTASK_INCREMENT_TICK( xTickCount );
2735:bsp/middlewares/freertos/source/tasks.c **** 
2736:bsp/middlewares/freertos/source/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2737:bsp/middlewares/freertos/source/tasks.c ****     {
2738:bsp/middlewares/freertos/source/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this
2739:bsp/middlewares/freertos/source/tasks.c ****          * block. */
2740:bsp/middlewares/freertos/source/tasks.c ****         const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2741:bsp/middlewares/freertos/source/tasks.c **** 
2742:bsp/middlewares/freertos/source/tasks.c ****         /* Increment the RTOS tick, switching the delayed and overflowed
2743:bsp/middlewares/freertos/source/tasks.c ****          * delayed lists if it wraps to 0. */
2744:bsp/middlewares/freertos/source/tasks.c ****         xTickCount = xConstTickCount;
2745:bsp/middlewares/freertos/source/tasks.c **** 
2746:bsp/middlewares/freertos/source/tasks.c ****         if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to fa
2747:bsp/middlewares/freertos/source/tasks.c ****         {
2748:bsp/middlewares/freertos/source/tasks.c ****             taskSWITCH_DELAYED_LISTS();
2749:bsp/middlewares/freertos/source/tasks.c ****         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 55


2750:bsp/middlewares/freertos/source/tasks.c ****         else
2751:bsp/middlewares/freertos/source/tasks.c ****         {
2752:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2753:bsp/middlewares/freertos/source/tasks.c ****         }
2754:bsp/middlewares/freertos/source/tasks.c **** 
2755:bsp/middlewares/freertos/source/tasks.c ****         /* See if this tick has made a timeout expire.  Tasks are stored in
2756:bsp/middlewares/freertos/source/tasks.c ****          * the  queue in the order of their wake time - meaning once one task
2757:bsp/middlewares/freertos/source/tasks.c ****          * has been found whose block time has not expired there is no need to
2758:bsp/middlewares/freertos/source/tasks.c ****          * look any further down the list. */
2759:bsp/middlewares/freertos/source/tasks.c ****         if( xConstTickCount >= xNextTaskUnblockTime )
2760:bsp/middlewares/freertos/source/tasks.c ****         {
2761:bsp/middlewares/freertos/source/tasks.c ****             for( ; ; )
2762:bsp/middlewares/freertos/source/tasks.c ****             {
2763:bsp/middlewares/freertos/source/tasks.c ****                 if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2764:bsp/middlewares/freertos/source/tasks.c ****                 {
2765:bsp/middlewares/freertos/source/tasks.c ****                     /* The delayed list is empty.  Set xNextTaskUnblockTime
2766:bsp/middlewares/freertos/source/tasks.c ****                      * to the maximum possible value so it is extremely
2767:bsp/middlewares/freertos/source/tasks.c ****                      * unlikely that the
2768:bsp/middlewares/freertos/source/tasks.c ****                      * if( xTickCount >= xNextTaskUnblockTime ) test will pass
2769:bsp/middlewares/freertos/source/tasks.c ****                      * next time through. */
2770:bsp/middlewares/freertos/source/tasks.c ****                     xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts
2771:bsp/middlewares/freertos/source/tasks.c ****                     break;
2772:bsp/middlewares/freertos/source/tasks.c ****                 }
2773:bsp/middlewares/freertos/source/tasks.c ****                 else
2774:bsp/middlewares/freertos/source/tasks.c ****                 {
2775:bsp/middlewares/freertos/source/tasks.c ****                     /* The delayed list is not empty, get the value of the
2776:bsp/middlewares/freertos/source/tasks.c ****                      * item at the head of the delayed list.  This is the time
2777:bsp/middlewares/freertos/source/tasks.c ****                      * at which the task at the head of the delayed list must
2778:bsp/middlewares/freertos/source/tasks.c ****                      * be removed from the Blocked state. */
2779:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * 
2780:bsp/middlewares/freertos/source/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2781:bsp/middlewares/freertos/source/tasks.c **** 
2782:bsp/middlewares/freertos/source/tasks.c ****                     if( xConstTickCount < xItemValue )
2783:bsp/middlewares/freertos/source/tasks.c ****                     {
2784:bsp/middlewares/freertos/source/tasks.c ****                         /* It is not time to unblock this item yet, but the
2785:bsp/middlewares/freertos/source/tasks.c ****                          * item value is the time at which the task at the head
2786:bsp/middlewares/freertos/source/tasks.c ****                          * of the blocked list must be removed from the Blocked
2787:bsp/middlewares/freertos/source/tasks.c ****                          * state -  so record the item value in
2788:bsp/middlewares/freertos/source/tasks.c ****                          * xNextTaskUnblockTime. */
2789:bsp/middlewares/freertos/source/tasks.c ****                         xNextTaskUnblockTime = xItemValue;
2790:bsp/middlewares/freertos/source/tasks.c ****                         break; /*lint !e9011 Code structure here is deedmed easier to understand wi
2791:bsp/middlewares/freertos/source/tasks.c ****                     }
2792:bsp/middlewares/freertos/source/tasks.c ****                     else
2793:bsp/middlewares/freertos/source/tasks.c ****                     {
2794:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2795:bsp/middlewares/freertos/source/tasks.c ****                     }
2796:bsp/middlewares/freertos/source/tasks.c **** 
2797:bsp/middlewares/freertos/source/tasks.c ****                     /* It is time to remove the item from the Blocked state. */
2798:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2799:bsp/middlewares/freertos/source/tasks.c **** 
2800:bsp/middlewares/freertos/source/tasks.c ****                     /* Is the task waiting on an event also?  If so remove
2801:bsp/middlewares/freertos/source/tasks.c ****                      * it from the event list. */
2802:bsp/middlewares/freertos/source/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2803:bsp/middlewares/freertos/source/tasks.c ****                     {
2804:bsp/middlewares/freertos/source/tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2805:bsp/middlewares/freertos/source/tasks.c ****                     }
2806:bsp/middlewares/freertos/source/tasks.c ****                     else
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 56


2807:bsp/middlewares/freertos/source/tasks.c ****                     {
2808:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2809:bsp/middlewares/freertos/source/tasks.c ****                     }
2810:bsp/middlewares/freertos/source/tasks.c **** 
2811:bsp/middlewares/freertos/source/tasks.c ****                     /* Place the unblocked task into the appropriate ready
2812:bsp/middlewares/freertos/source/tasks.c ****                      * list. */
2813:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2814:bsp/middlewares/freertos/source/tasks.c **** 
2815:bsp/middlewares/freertos/source/tasks.c ****                     /* A task being unblocked cannot cause an immediate
2816:bsp/middlewares/freertos/source/tasks.c ****                      * context switch if preemption is turned off. */
2817:bsp/middlewares/freertos/source/tasks.c ****                     #if ( configUSE_PREEMPTION == 1 )
2818:bsp/middlewares/freertos/source/tasks.c ****                         {
2819:bsp/middlewares/freertos/source/tasks.c ****                             /* Preemption is on, but a context switch should
2820:bsp/middlewares/freertos/source/tasks.c ****                              * only be performed if the unblocked task has a
2821:bsp/middlewares/freertos/source/tasks.c ****                              * priority that is equal to or higher than the
2822:bsp/middlewares/freertos/source/tasks.c ****                              * currently executing task. */
2823:bsp/middlewares/freertos/source/tasks.c ****                             if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2824:bsp/middlewares/freertos/source/tasks.c ****                             {
2825:bsp/middlewares/freertos/source/tasks.c ****                                 xSwitchRequired = pdTRUE;
2826:bsp/middlewares/freertos/source/tasks.c ****                             }
2827:bsp/middlewares/freertos/source/tasks.c ****                             else
2828:bsp/middlewares/freertos/source/tasks.c ****                             {
2829:bsp/middlewares/freertos/source/tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2830:bsp/middlewares/freertos/source/tasks.c ****                             }
2831:bsp/middlewares/freertos/source/tasks.c ****                         }
2832:bsp/middlewares/freertos/source/tasks.c ****                     #endif /* configUSE_PREEMPTION */
2833:bsp/middlewares/freertos/source/tasks.c ****                 }
2834:bsp/middlewares/freertos/source/tasks.c ****             }
2835:bsp/middlewares/freertos/source/tasks.c ****         }
2836:bsp/middlewares/freertos/source/tasks.c **** 
2837:bsp/middlewares/freertos/source/tasks.c ****         /* Tasks of equal priority to the currently running task will share
2838:bsp/middlewares/freertos/source/tasks.c ****          * processing time (time slice) if preemption is on, and the application
2839:bsp/middlewares/freertos/source/tasks.c ****          * writer has not explicitly turned time slicing off. */
2840:bsp/middlewares/freertos/source/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2841:bsp/middlewares/freertos/source/tasks.c ****             {
2842:bsp/middlewares/freertos/source/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) >
2843:bsp/middlewares/freertos/source/tasks.c ****                 {
2844:bsp/middlewares/freertos/source/tasks.c ****                     xSwitchRequired = pdTRUE;
2845:bsp/middlewares/freertos/source/tasks.c ****                 }
2846:bsp/middlewares/freertos/source/tasks.c ****                 else
2847:bsp/middlewares/freertos/source/tasks.c ****                 {
2848:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2849:bsp/middlewares/freertos/source/tasks.c ****                 }
2850:bsp/middlewares/freertos/source/tasks.c ****             }
2851:bsp/middlewares/freertos/source/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2852:bsp/middlewares/freertos/source/tasks.c **** 
2853:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2854:bsp/middlewares/freertos/source/tasks.c ****             {
2855:bsp/middlewares/freertos/source/tasks.c ****                 /* Guard against the tick hook being called when the pended tick
2856:bsp/middlewares/freertos/source/tasks.c ****                  * count is being unwound (when the scheduler is being unlocked). */
2857:bsp/middlewares/freertos/source/tasks.c ****                 if( xPendedTicks == ( TickType_t ) 0 )
2858:bsp/middlewares/freertos/source/tasks.c ****                 {
2859:bsp/middlewares/freertos/source/tasks.c ****                     vApplicationTickHook();
2860:bsp/middlewares/freertos/source/tasks.c ****                 }
2861:bsp/middlewares/freertos/source/tasks.c ****                 else
2862:bsp/middlewares/freertos/source/tasks.c ****                 {
2863:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 57


2864:bsp/middlewares/freertos/source/tasks.c ****                 }
2865:bsp/middlewares/freertos/source/tasks.c ****             }
2866:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_TICK_HOOK */
2867:bsp/middlewares/freertos/source/tasks.c **** 
2868:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_PREEMPTION == 1 )
2869:bsp/middlewares/freertos/source/tasks.c ****             {
2870:bsp/middlewares/freertos/source/tasks.c ****                 if( xYieldPending != pdFALSE )
2871:bsp/middlewares/freertos/source/tasks.c ****                 {
2872:bsp/middlewares/freertos/source/tasks.c ****                     xSwitchRequired = pdTRUE;
2873:bsp/middlewares/freertos/source/tasks.c ****                 }
2874:bsp/middlewares/freertos/source/tasks.c ****                 else
2875:bsp/middlewares/freertos/source/tasks.c ****                 {
2876:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2877:bsp/middlewares/freertos/source/tasks.c ****                 }
2878:bsp/middlewares/freertos/source/tasks.c ****             }
2879:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_PREEMPTION */
2880:bsp/middlewares/freertos/source/tasks.c ****     }
2881:bsp/middlewares/freertos/source/tasks.c ****     else
2882:bsp/middlewares/freertos/source/tasks.c ****     {
2883:bsp/middlewares/freertos/source/tasks.c ****         ++xPendedTicks;
2884:bsp/middlewares/freertos/source/tasks.c **** 
2885:bsp/middlewares/freertos/source/tasks.c ****         /* The tick hook gets called at regular intervals, even if the
2886:bsp/middlewares/freertos/source/tasks.c ****          * scheduler is locked. */
2887:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2888:bsp/middlewares/freertos/source/tasks.c ****             {
2889:bsp/middlewares/freertos/source/tasks.c ****                 vApplicationTickHook();
2890:bsp/middlewares/freertos/source/tasks.c ****             }
2891:bsp/middlewares/freertos/source/tasks.c ****         #endif
2892:bsp/middlewares/freertos/source/tasks.c ****     }
2893:bsp/middlewares/freertos/source/tasks.c **** 
2894:bsp/middlewares/freertos/source/tasks.c ****     return xSwitchRequired;
2895:bsp/middlewares/freertos/source/tasks.c **** }
2896:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2897:bsp/middlewares/freertos/source/tasks.c **** 
2898:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2899:bsp/middlewares/freertos/source/tasks.c **** 
2900:bsp/middlewares/freertos/source/tasks.c ****     void vTaskSetApplicationTaskTag( TaskHandle_t xTask,
2901:bsp/middlewares/freertos/source/tasks.c ****                                      TaskHookFunction_t pxHookFunction )
2902:bsp/middlewares/freertos/source/tasks.c ****     {
2903:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * xTCB;
2904:bsp/middlewares/freertos/source/tasks.c **** 
2905:bsp/middlewares/freertos/source/tasks.c ****         /* If xTask is NULL then it is the task hook of the calling task that is
2906:bsp/middlewares/freertos/source/tasks.c ****          * getting set. */
2907:bsp/middlewares/freertos/source/tasks.c ****         if( xTask == NULL )
2908:bsp/middlewares/freertos/source/tasks.c ****         {
2909:bsp/middlewares/freertos/source/tasks.c ****             xTCB = ( TCB_t * ) pxCurrentTCB;
2910:bsp/middlewares/freertos/source/tasks.c ****         }
2911:bsp/middlewares/freertos/source/tasks.c ****         else
2912:bsp/middlewares/freertos/source/tasks.c ****         {
2913:bsp/middlewares/freertos/source/tasks.c ****             xTCB = xTask;
2914:bsp/middlewares/freertos/source/tasks.c ****         }
2915:bsp/middlewares/freertos/source/tasks.c **** 
2916:bsp/middlewares/freertos/source/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2917:bsp/middlewares/freertos/source/tasks.c ****          * the value can be accessed from an interrupt. */
2918:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
2919:bsp/middlewares/freertos/source/tasks.c ****         {
2920:bsp/middlewares/freertos/source/tasks.c ****             xTCB->pxTaskTag = pxHookFunction;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 58


2921:bsp/middlewares/freertos/source/tasks.c ****         }
2922:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
2923:bsp/middlewares/freertos/source/tasks.c ****     }
2924:bsp/middlewares/freertos/source/tasks.c **** 
2925:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2926:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2927:bsp/middlewares/freertos/source/tasks.c **** 
2928:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2929:bsp/middlewares/freertos/source/tasks.c **** 
2930:bsp/middlewares/freertos/source/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2931:bsp/middlewares/freertos/source/tasks.c ****     {
2932:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
2933:bsp/middlewares/freertos/source/tasks.c ****         TaskHookFunction_t xReturn;
2934:bsp/middlewares/freertos/source/tasks.c **** 
2935:bsp/middlewares/freertos/source/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2936:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2937:bsp/middlewares/freertos/source/tasks.c **** 
2938:bsp/middlewares/freertos/source/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2939:bsp/middlewares/freertos/source/tasks.c ****          * the value can be accessed from an interrupt. */
2940:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
2941:bsp/middlewares/freertos/source/tasks.c ****         {
2942:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2943:bsp/middlewares/freertos/source/tasks.c ****         }
2944:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
2945:bsp/middlewares/freertos/source/tasks.c **** 
2946:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
2947:bsp/middlewares/freertos/source/tasks.c ****     }
2948:bsp/middlewares/freertos/source/tasks.c **** 
2949:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2950:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2951:bsp/middlewares/freertos/source/tasks.c **** 
2952:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2953:bsp/middlewares/freertos/source/tasks.c **** 
2954:bsp/middlewares/freertos/source/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2955:bsp/middlewares/freertos/source/tasks.c ****     {
2956:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
2957:bsp/middlewares/freertos/source/tasks.c ****         TaskHookFunction_t xReturn;
2958:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
2959:bsp/middlewares/freertos/source/tasks.c **** 
2960:bsp/middlewares/freertos/source/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2961:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2962:bsp/middlewares/freertos/source/tasks.c **** 
2963:bsp/middlewares/freertos/source/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2964:bsp/middlewares/freertos/source/tasks.c ****          * the value can be accessed from an interrupt. */
2965:bsp/middlewares/freertos/source/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2966:bsp/middlewares/freertos/source/tasks.c ****         {
2967:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2968:bsp/middlewares/freertos/source/tasks.c ****         }
2969:bsp/middlewares/freertos/source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2970:bsp/middlewares/freertos/source/tasks.c **** 
2971:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
2972:bsp/middlewares/freertos/source/tasks.c ****     }
2973:bsp/middlewares/freertos/source/tasks.c **** 
2974:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2975:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
2976:bsp/middlewares/freertos/source/tasks.c **** 
2977:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 59


2978:bsp/middlewares/freertos/source/tasks.c **** 
2979:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask,
2980:bsp/middlewares/freertos/source/tasks.c ****                                              void * pvParameter )
2981:bsp/middlewares/freertos/source/tasks.c ****     {
2982:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * xTCB;
2983:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
2984:bsp/middlewares/freertos/source/tasks.c **** 
2985:bsp/middlewares/freertos/source/tasks.c ****         /* If xTask is NULL then we are calling our own task hook. */
2986:bsp/middlewares/freertos/source/tasks.c ****         if( xTask == NULL )
2987:bsp/middlewares/freertos/source/tasks.c ****         {
2988:bsp/middlewares/freertos/source/tasks.c ****             xTCB = pxCurrentTCB;
2989:bsp/middlewares/freertos/source/tasks.c ****         }
2990:bsp/middlewares/freertos/source/tasks.c ****         else
2991:bsp/middlewares/freertos/source/tasks.c ****         {
2992:bsp/middlewares/freertos/source/tasks.c ****             xTCB = xTask;
2993:bsp/middlewares/freertos/source/tasks.c ****         }
2994:bsp/middlewares/freertos/source/tasks.c **** 
2995:bsp/middlewares/freertos/source/tasks.c ****         if( xTCB->pxTaskTag != NULL )
2996:bsp/middlewares/freertos/source/tasks.c ****         {
2997:bsp/middlewares/freertos/source/tasks.c ****             xReturn = xTCB->pxTaskTag( pvParameter );
2998:bsp/middlewares/freertos/source/tasks.c ****         }
2999:bsp/middlewares/freertos/source/tasks.c ****         else
3000:bsp/middlewares/freertos/source/tasks.c ****         {
3001:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdFAIL;
3002:bsp/middlewares/freertos/source/tasks.c ****         }
3003:bsp/middlewares/freertos/source/tasks.c **** 
3004:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
3005:bsp/middlewares/freertos/source/tasks.c ****     }
3006:bsp/middlewares/freertos/source/tasks.c **** 
3007:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
3008:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3009:bsp/middlewares/freertos/source/tasks.c **** 
3010:bsp/middlewares/freertos/source/tasks.c **** void vTaskSwitchContext( void )
3011:bsp/middlewares/freertos/source/tasks.c **** {
3012:bsp/middlewares/freertos/source/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
3013:bsp/middlewares/freertos/source/tasks.c ****     {
3014:bsp/middlewares/freertos/source/tasks.c ****         /* The scheduler is currently suspended - do not allow a context
3015:bsp/middlewares/freertos/source/tasks.c ****          * switch. */
3016:bsp/middlewares/freertos/source/tasks.c ****         xYieldPending = pdTRUE;
3017:bsp/middlewares/freertos/source/tasks.c ****     }
3018:bsp/middlewares/freertos/source/tasks.c ****     else
3019:bsp/middlewares/freertos/source/tasks.c ****     {
3020:bsp/middlewares/freertos/source/tasks.c ****         xYieldPending = pdFALSE;
3021:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_OUT();
3022:bsp/middlewares/freertos/source/tasks.c **** 
3023:bsp/middlewares/freertos/source/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3024:bsp/middlewares/freertos/source/tasks.c ****             {
3025:bsp/middlewares/freertos/source/tasks.c ****                 #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3026:bsp/middlewares/freertos/source/tasks.c ****                     portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3027:bsp/middlewares/freertos/source/tasks.c ****                 #else
3028:bsp/middlewares/freertos/source/tasks.c ****                     ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3029:bsp/middlewares/freertos/source/tasks.c ****                 #endif
3030:bsp/middlewares/freertos/source/tasks.c **** 
3031:bsp/middlewares/freertos/source/tasks.c ****                 /* Add the amount of time the task has been running to the
3032:bsp/middlewares/freertos/source/tasks.c ****                  * accumulated time so far.  The time the task started running was
3033:bsp/middlewares/freertos/source/tasks.c ****                  * stored in ulTaskSwitchedInTime.  Note that there is no overflow
3034:bsp/middlewares/freertos/source/tasks.c ****                  * protection here so count values are only valid until the timer
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 60


3035:bsp/middlewares/freertos/source/tasks.c ****                  * overflows.  The guard against negative values is to protect
3036:bsp/middlewares/freertos/source/tasks.c ****                  * against suspect run time stat counter implementations - which
3037:bsp/middlewares/freertos/source/tasks.c ****                  * are provided by the application, not the kernel. */
3038:bsp/middlewares/freertos/source/tasks.c ****                 if( ulTotalRunTime > ulTaskSwitchedInTime )
3039:bsp/middlewares/freertos/source/tasks.c ****                 {
3040:bsp/middlewares/freertos/source/tasks.c ****                     pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3041:bsp/middlewares/freertos/source/tasks.c ****                 }
3042:bsp/middlewares/freertos/source/tasks.c ****                 else
3043:bsp/middlewares/freertos/source/tasks.c ****                 {
3044:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3045:bsp/middlewares/freertos/source/tasks.c ****                 }
3046:bsp/middlewares/freertos/source/tasks.c **** 
3047:bsp/middlewares/freertos/source/tasks.c ****                 ulTaskSwitchedInTime = ulTotalRunTime;
3048:bsp/middlewares/freertos/source/tasks.c ****             }
3049:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configGENERATE_RUN_TIME_STATS */
3050:bsp/middlewares/freertos/source/tasks.c **** 
3051:bsp/middlewares/freertos/source/tasks.c ****         /* Check for stack overflow, if configured. */
3052:bsp/middlewares/freertos/source/tasks.c ****         taskCHECK_FOR_STACK_OVERFLOW();
3053:bsp/middlewares/freertos/source/tasks.c **** 
3054:bsp/middlewares/freertos/source/tasks.c ****         /* Before the currently running task is switched out, save its errno. */
3055:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3056:bsp/middlewares/freertos/source/tasks.c ****             {
3057:bsp/middlewares/freertos/source/tasks.c ****                 pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3058:bsp/middlewares/freertos/source/tasks.c ****             }
3059:bsp/middlewares/freertos/source/tasks.c ****         #endif
3060:bsp/middlewares/freertos/source/tasks.c **** 
3061:bsp/middlewares/freertos/source/tasks.c ****         /* Select a new task to run using either the generic C or port
3062:bsp/middlewares/freertos/source/tasks.c ****          * optimised asm code. */
3063:bsp/middlewares/freertos/source/tasks.c ****         taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with
3064:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
3065:bsp/middlewares/freertos/source/tasks.c **** 
3066:bsp/middlewares/freertos/source/tasks.c ****         /* After the new task is switched in, update the global errno. */
3067:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3068:bsp/middlewares/freertos/source/tasks.c ****             {
3069:bsp/middlewares/freertos/source/tasks.c ****                 FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3070:bsp/middlewares/freertos/source/tasks.c ****             }
3071:bsp/middlewares/freertos/source/tasks.c ****         #endif
3072:bsp/middlewares/freertos/source/tasks.c **** 
3073:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
3074:bsp/middlewares/freertos/source/tasks.c ****             {
3075:bsp/middlewares/freertos/source/tasks.c ****                 /* Switch Newlib's _impure_ptr variable to point to the _reent
3076:bsp/middlewares/freertos/source/tasks.c ****                  * structure specific to this task.
3077:bsp/middlewares/freertos/source/tasks.c ****                  * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3078:bsp/middlewares/freertos/source/tasks.c ****                  * for additional information. */
3079:bsp/middlewares/freertos/source/tasks.c ****                 _impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3080:bsp/middlewares/freertos/source/tasks.c ****             }
3081:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
3082:bsp/middlewares/freertos/source/tasks.c ****     }
3083:bsp/middlewares/freertos/source/tasks.c **** }
3084:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3085:bsp/middlewares/freertos/source/tasks.c **** 
3086:bsp/middlewares/freertos/source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList,
3087:bsp/middlewares/freertos/source/tasks.c ****                             const TickType_t xTicksToWait )
3088:bsp/middlewares/freertos/source/tasks.c **** {
3089:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxEventList );
3090:bsp/middlewares/freertos/source/tasks.c **** 
3091:bsp/middlewares/freertos/source/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 61


3092:bsp/middlewares/freertos/source/tasks.c ****      * SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3093:bsp/middlewares/freertos/source/tasks.c **** 
3094:bsp/middlewares/freertos/source/tasks.c ****     /* Place the event list item of the TCB in the appropriate event list.
3095:bsp/middlewares/freertos/source/tasks.c ****      * This is placed in the list in priority order so the highest priority task
3096:bsp/middlewares/freertos/source/tasks.c ****      * is the first to be woken by the event.  The queue that contains the event
3097:bsp/middlewares/freertos/source/tasks.c ****      * list is locked, preventing simultaneous access from interrupts. */
3098:bsp/middlewares/freertos/source/tasks.c ****     vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3099:bsp/middlewares/freertos/source/tasks.c **** 
3100:bsp/middlewares/freertos/source/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3101:bsp/middlewares/freertos/source/tasks.c **** }
3102:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3103:bsp/middlewares/freertos/source/tasks.c **** 
3104:bsp/middlewares/freertos/source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
3105:bsp/middlewares/freertos/source/tasks.c ****                                      const TickType_t xItemValue,
3106:bsp/middlewares/freertos/source/tasks.c ****                                      const TickType_t xTicksToWait )
3107:bsp/middlewares/freertos/source/tasks.c **** {
3108:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxEventList );
3109:bsp/middlewares/freertos/source/tasks.c **** 
3110:bsp/middlewares/freertos/source/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3111:bsp/middlewares/freertos/source/tasks.c ****      * the event groups implementation. */
3112:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( uxSchedulerSuspended != 0 );
3113:bsp/middlewares/freertos/source/tasks.c **** 
3114:bsp/middlewares/freertos/source/tasks.c ****     /* Store the item value in the event list item.  It is safe to access the
3115:bsp/middlewares/freertos/source/tasks.c ****      * event list item here as interrupts won't access the event list item of a
3116:bsp/middlewares/freertos/source/tasks.c ****      * task that is not in the Blocked state. */
3117:bsp/middlewares/freertos/source/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VA
3118:bsp/middlewares/freertos/source/tasks.c **** 
3119:bsp/middlewares/freertos/source/tasks.c ****     /* Place the event list item of the TCB at the end of the appropriate event
3120:bsp/middlewares/freertos/source/tasks.c ****      * list.  It is safe to access the event list here because it is part of an
3121:bsp/middlewares/freertos/source/tasks.c ****      * event group implementation - and interrupts don't access event groups
3122:bsp/middlewares/freertos/source/tasks.c ****      * directly (instead they access them indirectly by pending function calls to
3123:bsp/middlewares/freertos/source/tasks.c ****      * the task level). */
3124:bsp/middlewares/freertos/source/tasks.c ****     vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3125:bsp/middlewares/freertos/source/tasks.c **** 
3126:bsp/middlewares/freertos/source/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3127:bsp/middlewares/freertos/source/tasks.c **** }
3128:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3129:bsp/middlewares/freertos/source/tasks.c **** 
3130:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TIMERS == 1 )
3131:bsp/middlewares/freertos/source/tasks.c **** 
3132:bsp/middlewares/freertos/source/tasks.c ****     void vTaskPlaceOnEventListRestricted( List_t * const pxEventList,
3133:bsp/middlewares/freertos/source/tasks.c ****                                           TickType_t xTicksToWait,
3134:bsp/middlewares/freertos/source/tasks.c ****                                           const BaseType_t xWaitIndefinitely )
3135:bsp/middlewares/freertos/source/tasks.c ****     {
3136:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( pxEventList );
3137:bsp/middlewares/freertos/source/tasks.c **** 
3138:bsp/middlewares/freertos/source/tasks.c ****         /* This function should not be called by application code hence the
3139:bsp/middlewares/freertos/source/tasks.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
3140:bsp/middlewares/freertos/source/tasks.c ****          * designed for use by kernel code, and has special calling requirements -
3141:bsp/middlewares/freertos/source/tasks.c ****          * it should be called with the scheduler suspended. */
3142:bsp/middlewares/freertos/source/tasks.c **** 
3143:bsp/middlewares/freertos/source/tasks.c **** 
3144:bsp/middlewares/freertos/source/tasks.c ****         /* Place the event list item of the TCB in the appropriate event list.
3145:bsp/middlewares/freertos/source/tasks.c ****          * In this case it is assume that this is the only task that is going to
3146:bsp/middlewares/freertos/source/tasks.c ****          * be waiting on this event list, so the faster vListInsertEnd() function
3147:bsp/middlewares/freertos/source/tasks.c ****          * can be used in place of vListInsert. */
3148:bsp/middlewares/freertos/source/tasks.c ****         vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 62


3149:bsp/middlewares/freertos/source/tasks.c **** 
3150:bsp/middlewares/freertos/source/tasks.c ****         /* If the task should block indefinitely then set the block time to a
3151:bsp/middlewares/freertos/source/tasks.c ****          * value that will be recognised as an indefinite delay inside the
3152:bsp/middlewares/freertos/source/tasks.c ****          * prvAddCurrentTaskToDelayedList() function. */
3153:bsp/middlewares/freertos/source/tasks.c ****         if( xWaitIndefinitely != pdFALSE )
3154:bsp/middlewares/freertos/source/tasks.c ****         {
3155:bsp/middlewares/freertos/source/tasks.c ****             xTicksToWait = portMAX_DELAY;
3156:bsp/middlewares/freertos/source/tasks.c ****         }
3157:bsp/middlewares/freertos/source/tasks.c **** 
3158:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3159:bsp/middlewares/freertos/source/tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3160:bsp/middlewares/freertos/source/tasks.c ****     }
3161:bsp/middlewares/freertos/source/tasks.c **** 
3162:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TIMERS */
3163:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3164:bsp/middlewares/freertos/source/tasks.c **** 
3165:bsp/middlewares/freertos/source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3166:bsp/middlewares/freertos/source/tasks.c **** {
3167:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxUnblockedTCB;
3168:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xReturn;
3169:bsp/middlewares/freertos/source/tasks.c **** 
3170:bsp/middlewares/freertos/source/tasks.c ****     /* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3171:bsp/middlewares/freertos/source/tasks.c ****      * called from a critical section within an ISR. */
3172:bsp/middlewares/freertos/source/tasks.c **** 
3173:bsp/middlewares/freertos/source/tasks.c ****     /* The event list is sorted in priority order, so the first in the list can
3174:bsp/middlewares/freertos/source/tasks.c ****      * be removed as it is known to be the highest priority.  Remove the TCB from
3175:bsp/middlewares/freertos/source/tasks.c ****      * the delayed list, and add it to the ready list.
3176:bsp/middlewares/freertos/source/tasks.c ****      *
3177:bsp/middlewares/freertos/source/tasks.c ****      * If an event is for a queue that is locked then this function will never
3178:bsp/middlewares/freertos/source/tasks.c ****      * get called - the lock count on the queue will get modified instead.  This
3179:bsp/middlewares/freertos/source/tasks.c ****      * means exclusive access to the event list is guaranteed here.
3180:bsp/middlewares/freertos/source/tasks.c ****      *
3181:bsp/middlewares/freertos/source/tasks.c ****      * This function assumes that a check has already been made to ensure that
3182:bsp/middlewares/freertos/source/tasks.c ****      * pxEventList is not empty. */
3183:bsp/middlewares/freertos/source/tasks.c ****     pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as th
3184:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxUnblockedTCB );
3185:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3186:bsp/middlewares/freertos/source/tasks.c **** 
3187:bsp/middlewares/freertos/source/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3188:bsp/middlewares/freertos/source/tasks.c ****     {
3189:bsp/middlewares/freertos/source/tasks.c ****         ( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3190:bsp/middlewares/freertos/source/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
3191:bsp/middlewares/freertos/source/tasks.c **** 
3192:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3193:bsp/middlewares/freertos/source/tasks.c ****             {
3194:bsp/middlewares/freertos/source/tasks.c ****                 /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3195:bsp/middlewares/freertos/source/tasks.c ****                  * might be set to the blocked task's time out time.  If the task is
3196:bsp/middlewares/freertos/source/tasks.c ****                  * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3197:bsp/middlewares/freertos/source/tasks.c ****                  * normally left unchanged, because it is automatically reset to a new
3198:bsp/middlewares/freertos/source/tasks.c ****                  * value when the tick count equals xNextTaskUnblockTime.  However if
3199:bsp/middlewares/freertos/source/tasks.c ****                  * tickless idling is used it might be more important to enter sleep mode
3200:bsp/middlewares/freertos/source/tasks.c ****                  * at the earliest possible time - so reset xNextTaskUnblockTime here to
3201:bsp/middlewares/freertos/source/tasks.c ****                  * ensure it is updated at the earliest possible time. */
3202:bsp/middlewares/freertos/source/tasks.c ****                 prvResetNextTaskUnblockTime();
3203:bsp/middlewares/freertos/source/tasks.c ****             }
3204:bsp/middlewares/freertos/source/tasks.c ****         #endif
3205:bsp/middlewares/freertos/source/tasks.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 63


3206:bsp/middlewares/freertos/source/tasks.c ****     else
3207:bsp/middlewares/freertos/source/tasks.c ****     {
3208:bsp/middlewares/freertos/source/tasks.c ****         /* The delayed and ready lists cannot be accessed, so hold this task
3209:bsp/middlewares/freertos/source/tasks.c ****          * pending until the scheduler is resumed. */
3210:bsp/middlewares/freertos/source/tasks.c ****         vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3211:bsp/middlewares/freertos/source/tasks.c ****     }
3212:bsp/middlewares/freertos/source/tasks.c **** 
3213:bsp/middlewares/freertos/source/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3214:bsp/middlewares/freertos/source/tasks.c ****     {
3215:bsp/middlewares/freertos/source/tasks.c ****         /* Return true if the task removed from the event list has a higher
3216:bsp/middlewares/freertos/source/tasks.c ****          * priority than the calling task.  This allows the calling task to know if
3217:bsp/middlewares/freertos/source/tasks.c ****          * it should force a context switch now. */
3218:bsp/middlewares/freertos/source/tasks.c ****         xReturn = pdTRUE;
3219:bsp/middlewares/freertos/source/tasks.c **** 
3220:bsp/middlewares/freertos/source/tasks.c ****         /* Mark that a yield is pending in case the user is not using the
3221:bsp/middlewares/freertos/source/tasks.c ****          * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3222:bsp/middlewares/freertos/source/tasks.c ****         xYieldPending = pdTRUE;
3223:bsp/middlewares/freertos/source/tasks.c ****     }
3224:bsp/middlewares/freertos/source/tasks.c ****     else
3225:bsp/middlewares/freertos/source/tasks.c ****     {
3226:bsp/middlewares/freertos/source/tasks.c ****         xReturn = pdFALSE;
3227:bsp/middlewares/freertos/source/tasks.c ****     }
3228:bsp/middlewares/freertos/source/tasks.c **** 
3229:bsp/middlewares/freertos/source/tasks.c ****     return xReturn;
3230:bsp/middlewares/freertos/source/tasks.c **** }
3231:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3232:bsp/middlewares/freertos/source/tasks.c **** 
3233:bsp/middlewares/freertos/source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
3234:bsp/middlewares/freertos/source/tasks.c ****                                         const TickType_t xItemValue )
3235:bsp/middlewares/freertos/source/tasks.c **** {
3236:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxUnblockedTCB;
3237:bsp/middlewares/freertos/source/tasks.c **** 
3238:bsp/middlewares/freertos/source/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3239:bsp/middlewares/freertos/source/tasks.c ****      * the event flags implementation. */
3240:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( uxSchedulerSuspended != pdFALSE );
3241:bsp/middlewares/freertos/source/tasks.c **** 
3242:bsp/middlewares/freertos/source/tasks.c ****     /* Store the new item value in the event list. */
3243:bsp/middlewares/freertos/source/tasks.c ****     listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3244:bsp/middlewares/freertos/source/tasks.c **** 
3245:bsp/middlewares/freertos/source/tasks.c ****     /* Remove the event list form the event flag.  Interrupts do not access
3246:bsp/middlewares/freertos/source/tasks.c ****      * event flags. */
3247:bsp/middlewares/freertos/source/tasks.c ****     pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as th
3248:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxUnblockedTCB );
3249:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( pxEventListItem );
3250:bsp/middlewares/freertos/source/tasks.c **** 
3251:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_TICKLESS_IDLE != 0 )
3252:bsp/middlewares/freertos/source/tasks.c ****         {
3253:bsp/middlewares/freertos/source/tasks.c ****             /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3254:bsp/middlewares/freertos/source/tasks.c ****              * might be set to the blocked task's time out time.  If the task is
3255:bsp/middlewares/freertos/source/tasks.c ****              * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3256:bsp/middlewares/freertos/source/tasks.c ****              * normally left unchanged, because it is automatically reset to a new
3257:bsp/middlewares/freertos/source/tasks.c ****              * value when the tick count equals xNextTaskUnblockTime.  However if
3258:bsp/middlewares/freertos/source/tasks.c ****              * tickless idling is used it might be more important to enter sleep mode
3259:bsp/middlewares/freertos/source/tasks.c ****              * at the earliest possible time - so reset xNextTaskUnblockTime here to
3260:bsp/middlewares/freertos/source/tasks.c ****              * ensure it is updated at the earliest possible time. */
3261:bsp/middlewares/freertos/source/tasks.c ****             prvResetNextTaskUnblockTime();
3262:bsp/middlewares/freertos/source/tasks.c ****         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 64


3263:bsp/middlewares/freertos/source/tasks.c ****     #endif
3264:bsp/middlewares/freertos/source/tasks.c **** 
3265:bsp/middlewares/freertos/source/tasks.c ****     /* Remove the task from the delayed list and add it to the ready list.  The
3266:bsp/middlewares/freertos/source/tasks.c ****      * scheduler is suspended so interrupts will not be accessing the ready
3267:bsp/middlewares/freertos/source/tasks.c ****      * lists. */
3268:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3269:bsp/middlewares/freertos/source/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
3270:bsp/middlewares/freertos/source/tasks.c **** 
3271:bsp/middlewares/freertos/source/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3272:bsp/middlewares/freertos/source/tasks.c ****     {
3273:bsp/middlewares/freertos/source/tasks.c ****         /* The unblocked task has a priority above that of the calling task, so
3274:bsp/middlewares/freertos/source/tasks.c ****          * a context switch is required.  This function is called with the
3275:bsp/middlewares/freertos/source/tasks.c ****          * scheduler suspended so xYieldPending is set so the context switch
3276:bsp/middlewares/freertos/source/tasks.c ****          * occurs immediately that the scheduler is resumed (unsuspended). */
3277:bsp/middlewares/freertos/source/tasks.c ****         xYieldPending = pdTRUE;
3278:bsp/middlewares/freertos/source/tasks.c ****     }
3279:bsp/middlewares/freertos/source/tasks.c **** }
3280:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3281:bsp/middlewares/freertos/source/tasks.c **** 
3282:bsp/middlewares/freertos/source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3283:bsp/middlewares/freertos/source/tasks.c **** {
3284:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTimeOut );
3285:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
3286:bsp/middlewares/freertos/source/tasks.c ****     {
3287:bsp/middlewares/freertos/source/tasks.c ****         pxTimeOut->xOverflowCount = xNumOfOverflows;
3288:bsp/middlewares/freertos/source/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
3289:bsp/middlewares/freertos/source/tasks.c ****     }
3290:bsp/middlewares/freertos/source/tasks.c ****     taskEXIT_CRITICAL();
3291:bsp/middlewares/freertos/source/tasks.c **** }
3292:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3293:bsp/middlewares/freertos/source/tasks.c **** 
3294:bsp/middlewares/freertos/source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3295:bsp/middlewares/freertos/source/tasks.c **** {
3296:bsp/middlewares/freertos/source/tasks.c ****     /* For internal use only as it does not use a critical section. */
3297:bsp/middlewares/freertos/source/tasks.c ****     pxTimeOut->xOverflowCount = xNumOfOverflows;
3298:bsp/middlewares/freertos/source/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
3299:bsp/middlewares/freertos/source/tasks.c **** }
3300:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3301:bsp/middlewares/freertos/source/tasks.c **** 
3302:bsp/middlewares/freertos/source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
3303:bsp/middlewares/freertos/source/tasks.c ****                                  TickType_t * const pxTicksToWait )
3304:bsp/middlewares/freertos/source/tasks.c **** {
3305:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xReturn;
3306:bsp/middlewares/freertos/source/tasks.c **** 
3307:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTimeOut );
3308:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTicksToWait );
3309:bsp/middlewares/freertos/source/tasks.c **** 
3310:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
3311:bsp/middlewares/freertos/source/tasks.c ****     {
3312:bsp/middlewares/freertos/source/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this block. */
3313:bsp/middlewares/freertos/source/tasks.c ****         const TickType_t xConstTickCount = xTickCount;
3314:bsp/middlewares/freertos/source/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3315:bsp/middlewares/freertos/source/tasks.c **** 
3316:bsp/middlewares/freertos/source/tasks.c ****         #if ( INCLUDE_xTaskAbortDelay == 1 )
3317:bsp/middlewares/freertos/source/tasks.c ****             if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3318:bsp/middlewares/freertos/source/tasks.c ****             {
3319:bsp/middlewares/freertos/source/tasks.c ****                 /* The delay was aborted, which is not the same as a time out,
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 65


3320:bsp/middlewares/freertos/source/tasks.c ****                  * but has the same result. */
3321:bsp/middlewares/freertos/source/tasks.c ****                 pxCurrentTCB->ucDelayAborted = pdFALSE;
3322:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdTRUE;
3323:bsp/middlewares/freertos/source/tasks.c ****             }
3324:bsp/middlewares/freertos/source/tasks.c ****             else
3325:bsp/middlewares/freertos/source/tasks.c ****         #endif
3326:bsp/middlewares/freertos/source/tasks.c **** 
3327:bsp/middlewares/freertos/source/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3328:bsp/middlewares/freertos/source/tasks.c ****             if( *pxTicksToWait == portMAX_DELAY )
3329:bsp/middlewares/freertos/source/tasks.c ****             {
3330:bsp/middlewares/freertos/source/tasks.c ****                 /* If INCLUDE_vTaskSuspend is set to 1 and the block time
3331:bsp/middlewares/freertos/source/tasks.c ****                  * specified is the maximum block time then the task should block
3332:bsp/middlewares/freertos/source/tasks.c ****                  * indefinitely, and therefore never time out. */
3333:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdFALSE;
3334:bsp/middlewares/freertos/source/tasks.c ****             }
3335:bsp/middlewares/freertos/source/tasks.c ****             else
3336:bsp/middlewares/freertos/source/tasks.c ****         #endif
3337:bsp/middlewares/freertos/source/tasks.c **** 
3338:bsp/middlewares/freertos/source/tasks.c ****         if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTi
3339:bsp/middlewares/freertos/source/tasks.c ****         {
3340:bsp/middlewares/freertos/source/tasks.c ****             /* The tick count is greater than the time at which
3341:bsp/middlewares/freertos/source/tasks.c ****              * vTaskSetTimeout() was called, but has also overflowed since
3342:bsp/middlewares/freertos/source/tasks.c ****              * vTaskSetTimeOut() was called.  It must have wrapped all the way
3343:bsp/middlewares/freertos/source/tasks.c ****              * around and gone past again. This passed since vTaskSetTimeout()
3344:bsp/middlewares/freertos/source/tasks.c ****              * was called. */
3345:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdTRUE;
3346:bsp/middlewares/freertos/source/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3347:bsp/middlewares/freertos/source/tasks.c ****         }
3348:bsp/middlewares/freertos/source/tasks.c ****         else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant wi
3349:bsp/middlewares/freertos/source/tasks.c ****         {
3350:bsp/middlewares/freertos/source/tasks.c ****             /* Not a genuine timeout. Adjust parameters for time remaining. */
3351:bsp/middlewares/freertos/source/tasks.c ****             *pxTicksToWait -= xElapsedTime;
3352:bsp/middlewares/freertos/source/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
3353:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdFALSE;
3354:bsp/middlewares/freertos/source/tasks.c ****         }
3355:bsp/middlewares/freertos/source/tasks.c ****         else
3356:bsp/middlewares/freertos/source/tasks.c ****         {
3357:bsp/middlewares/freertos/source/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3358:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdTRUE;
3359:bsp/middlewares/freertos/source/tasks.c ****         }
3360:bsp/middlewares/freertos/source/tasks.c ****     }
3361:bsp/middlewares/freertos/source/tasks.c ****     taskEXIT_CRITICAL();
3362:bsp/middlewares/freertos/source/tasks.c **** 
3363:bsp/middlewares/freertos/source/tasks.c ****     return xReturn;
3364:bsp/middlewares/freertos/source/tasks.c **** }
3365:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3366:bsp/middlewares/freertos/source/tasks.c **** 
3367:bsp/middlewares/freertos/source/tasks.c **** void vTaskMissedYield( void )
3368:bsp/middlewares/freertos/source/tasks.c **** {
3369:bsp/middlewares/freertos/source/tasks.c ****     xYieldPending = pdTRUE;
3370:bsp/middlewares/freertos/source/tasks.c **** }
3371:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3372:bsp/middlewares/freertos/source/tasks.c **** 
3373:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3374:bsp/middlewares/freertos/source/tasks.c **** 
3375:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3376:bsp/middlewares/freertos/source/tasks.c ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 66


3377:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxReturn;
3378:bsp/middlewares/freertos/source/tasks.c ****         TCB_t const * pxTCB;
3379:bsp/middlewares/freertos/source/tasks.c **** 
3380:bsp/middlewares/freertos/source/tasks.c ****         if( xTask != NULL )
3381:bsp/middlewares/freertos/source/tasks.c ****         {
3382:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = xTask;
3383:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
3384:bsp/middlewares/freertos/source/tasks.c ****         }
3385:bsp/middlewares/freertos/source/tasks.c ****         else
3386:bsp/middlewares/freertos/source/tasks.c ****         {
3387:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = 0U;
3388:bsp/middlewares/freertos/source/tasks.c ****         }
3389:bsp/middlewares/freertos/source/tasks.c **** 
3390:bsp/middlewares/freertos/source/tasks.c ****         return uxReturn;
3391:bsp/middlewares/freertos/source/tasks.c ****     }
3392:bsp/middlewares/freertos/source/tasks.c **** 
3393:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3394:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3395:bsp/middlewares/freertos/source/tasks.c **** 
3396:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3397:bsp/middlewares/freertos/source/tasks.c **** 
3398:bsp/middlewares/freertos/source/tasks.c ****     void vTaskSetTaskNumber( TaskHandle_t xTask,
3399:bsp/middlewares/freertos/source/tasks.c ****                              const UBaseType_t uxHandle )
3400:bsp/middlewares/freertos/source/tasks.c ****     {
3401:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
3402:bsp/middlewares/freertos/source/tasks.c **** 
3403:bsp/middlewares/freertos/source/tasks.c ****         if( xTask != NULL )
3404:bsp/middlewares/freertos/source/tasks.c ****         {
3405:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = xTask;
3406:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
3407:bsp/middlewares/freertos/source/tasks.c ****         }
3408:bsp/middlewares/freertos/source/tasks.c ****     }
3409:bsp/middlewares/freertos/source/tasks.c **** 
3410:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3411:bsp/middlewares/freertos/source/tasks.c **** 
3412:bsp/middlewares/freertos/source/tasks.c **** /*
3413:bsp/middlewares/freertos/source/tasks.c ****  * -----------------------------------------------------------
3414:bsp/middlewares/freertos/source/tasks.c ****  * The Idle task.
3415:bsp/middlewares/freertos/source/tasks.c ****  * ----------------------------------------------------------
3416:bsp/middlewares/freertos/source/tasks.c ****  *
3417:bsp/middlewares/freertos/source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3418:bsp/middlewares/freertos/source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3419:bsp/middlewares/freertos/source/tasks.c ****  *
3420:bsp/middlewares/freertos/source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3421:bsp/middlewares/freertos/source/tasks.c ****  *
3422:bsp/middlewares/freertos/source/tasks.c ****  */
3423:bsp/middlewares/freertos/source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3424:bsp/middlewares/freertos/source/tasks.c **** {
3425:bsp/middlewares/freertos/source/tasks.c ****     /* Stop warnings. */
3426:bsp/middlewares/freertos/source/tasks.c ****     ( void ) pvParameters;
3427:bsp/middlewares/freertos/source/tasks.c **** 
3428:bsp/middlewares/freertos/source/tasks.c ****     /** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3429:bsp/middlewares/freertos/source/tasks.c ****      * SCHEDULER IS STARTED. **/
3430:bsp/middlewares/freertos/source/tasks.c **** 
3431:bsp/middlewares/freertos/source/tasks.c ****     /* In case a task that has a secure context deletes itself, in which case
3432:bsp/middlewares/freertos/source/tasks.c ****      * the idle task is responsible for deleting the task's secure context, if
3433:bsp/middlewares/freertos/source/tasks.c ****      * any. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 67


3434:bsp/middlewares/freertos/source/tasks.c ****     portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3435:bsp/middlewares/freertos/source/tasks.c **** 
3436:bsp/middlewares/freertos/source/tasks.c ****     for( ; ; )
3437:bsp/middlewares/freertos/source/tasks.c ****     {
3438:bsp/middlewares/freertos/source/tasks.c ****         /* See if any tasks have deleted themselves - if so then the idle task
3439:bsp/middlewares/freertos/source/tasks.c ****          * is responsible for freeing the deleted task's TCB and stack. */
3440:bsp/middlewares/freertos/source/tasks.c ****         prvCheckTasksWaitingTermination();
3441:bsp/middlewares/freertos/source/tasks.c **** 
3442:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_PREEMPTION == 0 )
3443:bsp/middlewares/freertos/source/tasks.c ****             {
3444:bsp/middlewares/freertos/source/tasks.c ****                 /* If we are not using preemption we keep forcing a task switch to
3445:bsp/middlewares/freertos/source/tasks.c ****                  * see if any other task has become available.  If we are using
3446:bsp/middlewares/freertos/source/tasks.c ****                  * preemption we don't need to do this as any task becoming available
3447:bsp/middlewares/freertos/source/tasks.c ****                  * will automatically get the processor anyway. */
3448:bsp/middlewares/freertos/source/tasks.c ****                 taskYIELD();
3449:bsp/middlewares/freertos/source/tasks.c ****             }
3450:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_PREEMPTION */
3451:bsp/middlewares/freertos/source/tasks.c **** 
3452:bsp/middlewares/freertos/source/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3453:bsp/middlewares/freertos/source/tasks.c ****             {
3454:bsp/middlewares/freertos/source/tasks.c ****                 /* When using preemption tasks of equal priority will be
3455:bsp/middlewares/freertos/source/tasks.c ****                  * timesliced.  If a task that is sharing the idle priority is ready
3456:bsp/middlewares/freertos/source/tasks.c ****                  * to run then the idle task should yield before the end of the
3457:bsp/middlewares/freertos/source/tasks.c ****                  * timeslice.
3458:bsp/middlewares/freertos/source/tasks.c ****                  *
3459:bsp/middlewares/freertos/source/tasks.c ****                  * A critical region is not required here as we are just reading from
3460:bsp/middlewares/freertos/source/tasks.c ****                  * the list, and an occasional incorrect value will not matter.  If
3461:bsp/middlewares/freertos/source/tasks.c ****                  * the ready list at the idle priority contains more than one task
3462:bsp/middlewares/freertos/source/tasks.c ****                  * then a task other than the idle task is ready to execute. */
3463:bsp/middlewares/freertos/source/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBase
3464:bsp/middlewares/freertos/source/tasks.c ****                 {
3465:bsp/middlewares/freertos/source/tasks.c ****                     taskYIELD();
3466:bsp/middlewares/freertos/source/tasks.c ****                 }
3467:bsp/middlewares/freertos/source/tasks.c ****                 else
3468:bsp/middlewares/freertos/source/tasks.c ****                 {
3469:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3470:bsp/middlewares/freertos/source/tasks.c ****                 }
3471:bsp/middlewares/freertos/source/tasks.c ****             }
3472:bsp/middlewares/freertos/source/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3473:bsp/middlewares/freertos/source/tasks.c **** 
3474:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_IDLE_HOOK == 1 )
3475:bsp/middlewares/freertos/source/tasks.c ****             {
3476:bsp/middlewares/freertos/source/tasks.c ****                 extern void vApplicationIdleHook( void );
3477:bsp/middlewares/freertos/source/tasks.c **** 
3478:bsp/middlewares/freertos/source/tasks.c ****                 /* Call the user defined function from within the idle task.  This
3479:bsp/middlewares/freertos/source/tasks.c ****                  * allows the application designer to add background functionality
3480:bsp/middlewares/freertos/source/tasks.c ****                  * without the overhead of a separate task.
3481:bsp/middlewares/freertos/source/tasks.c ****                  * NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3482:bsp/middlewares/freertos/source/tasks.c ****                  * CALL A FUNCTION THAT MIGHT BLOCK. */
3483:bsp/middlewares/freertos/source/tasks.c ****                 vApplicationIdleHook();
3484:bsp/middlewares/freertos/source/tasks.c ****             }
3485:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_IDLE_HOOK */
3486:bsp/middlewares/freertos/source/tasks.c **** 
3487:bsp/middlewares/freertos/source/tasks.c ****         /* This conditional compilation should use inequality to 0, not equality
3488:bsp/middlewares/freertos/source/tasks.c ****          * to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3489:bsp/middlewares/freertos/source/tasks.c ****          * user defined low power mode  implementations require
3490:bsp/middlewares/freertos/source/tasks.c ****          * configUSE_TICKLESS_IDLE to be set to a value other than 1. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 68


3491:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3492:bsp/middlewares/freertos/source/tasks.c ****             {
3493:bsp/middlewares/freertos/source/tasks.c ****                 TickType_t xExpectedIdleTime;
3494:bsp/middlewares/freertos/source/tasks.c **** 
3495:bsp/middlewares/freertos/source/tasks.c ****                 /* It is not desirable to suspend then resume the scheduler on
3496:bsp/middlewares/freertos/source/tasks.c ****                  * each iteration of the idle task.  Therefore, a preliminary
3497:bsp/middlewares/freertos/source/tasks.c ****                  * test of the expected idle time is performed without the
3498:bsp/middlewares/freertos/source/tasks.c ****                  * scheduler suspended.  The result here is not necessarily
3499:bsp/middlewares/freertos/source/tasks.c ****                  * valid. */
3500:bsp/middlewares/freertos/source/tasks.c ****                 xExpectedIdleTime = prvGetExpectedIdleTime();
3501:bsp/middlewares/freertos/source/tasks.c **** 
3502:bsp/middlewares/freertos/source/tasks.c ****                 if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3503:bsp/middlewares/freertos/source/tasks.c ****                 {
3504:bsp/middlewares/freertos/source/tasks.c ****                     vTaskSuspendAll();
3505:bsp/middlewares/freertos/source/tasks.c ****                     {
3506:bsp/middlewares/freertos/source/tasks.c ****                         /* Now the scheduler is suspended, the expected idle
3507:bsp/middlewares/freertos/source/tasks.c ****                          * time can be sampled again, and this time its value can
3508:bsp/middlewares/freertos/source/tasks.c ****                          * be used. */
3509:bsp/middlewares/freertos/source/tasks.c ****                         configASSERT( xNextTaskUnblockTime >= xTickCount );
3510:bsp/middlewares/freertos/source/tasks.c ****                         xExpectedIdleTime = prvGetExpectedIdleTime();
3511:bsp/middlewares/freertos/source/tasks.c **** 
3512:bsp/middlewares/freertos/source/tasks.c ****                         /* Define the following macro to set xExpectedIdleTime to 0
3513:bsp/middlewares/freertos/source/tasks.c ****                          * if the application does not want
3514:bsp/middlewares/freertos/source/tasks.c ****                          * portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3515:bsp/middlewares/freertos/source/tasks.c ****                         configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3516:bsp/middlewares/freertos/source/tasks.c **** 
3517:bsp/middlewares/freertos/source/tasks.c ****                         if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3518:bsp/middlewares/freertos/source/tasks.c ****                         {
3519:bsp/middlewares/freertos/source/tasks.c ****                             traceLOW_POWER_IDLE_BEGIN();
3520:bsp/middlewares/freertos/source/tasks.c ****                             portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3521:bsp/middlewares/freertos/source/tasks.c ****                             traceLOW_POWER_IDLE_END();
3522:bsp/middlewares/freertos/source/tasks.c ****                         }
3523:bsp/middlewares/freertos/source/tasks.c ****                         else
3524:bsp/middlewares/freertos/source/tasks.c ****                         {
3525:bsp/middlewares/freertos/source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
3526:bsp/middlewares/freertos/source/tasks.c ****                         }
3527:bsp/middlewares/freertos/source/tasks.c ****                     }
3528:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) xTaskResumeAll();
3529:bsp/middlewares/freertos/source/tasks.c ****                 }
3530:bsp/middlewares/freertos/source/tasks.c ****                 else
3531:bsp/middlewares/freertos/source/tasks.c ****                 {
3532:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3533:bsp/middlewares/freertos/source/tasks.c ****                 }
3534:bsp/middlewares/freertos/source/tasks.c ****             }
3535:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_TICKLESS_IDLE */
3536:bsp/middlewares/freertos/source/tasks.c ****     }
3537:bsp/middlewares/freertos/source/tasks.c **** }
3538:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3539:bsp/middlewares/freertos/source/tasks.c **** 
3540:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
3541:bsp/middlewares/freertos/source/tasks.c **** 
3542:bsp/middlewares/freertos/source/tasks.c ****     eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3543:bsp/middlewares/freertos/source/tasks.c ****     {
3544:bsp/middlewares/freertos/source/tasks.c ****         /* The idle task exists in addition to the application tasks. */
3545:bsp/middlewares/freertos/source/tasks.c ****         const UBaseType_t uxNonApplicationTasks = 1;
3546:bsp/middlewares/freertos/source/tasks.c ****         eSleepModeStatus eReturn = eStandardSleep;
3547:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 69


3548:bsp/middlewares/freertos/source/tasks.c ****         /* This function must be called from a critical section. */
3549:bsp/middlewares/freertos/source/tasks.c **** 
3550:bsp/middlewares/freertos/source/tasks.c ****         if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3551:bsp/middlewares/freertos/source/tasks.c ****         {
3552:bsp/middlewares/freertos/source/tasks.c ****             /* A task was made ready while the scheduler was suspended. */
3553:bsp/middlewares/freertos/source/tasks.c ****             eReturn = eAbortSleep;
3554:bsp/middlewares/freertos/source/tasks.c ****         }
3555:bsp/middlewares/freertos/source/tasks.c ****         else if( xYieldPending != pdFALSE )
3556:bsp/middlewares/freertos/source/tasks.c ****         {
3557:bsp/middlewares/freertos/source/tasks.c ****             /* A yield was pended while the scheduler was suspended. */
3558:bsp/middlewares/freertos/source/tasks.c ****             eReturn = eAbortSleep;
3559:bsp/middlewares/freertos/source/tasks.c ****         }
3560:bsp/middlewares/freertos/source/tasks.c ****         else if( xPendedTicks != 0 )
3561:bsp/middlewares/freertos/source/tasks.c ****         {
3562:bsp/middlewares/freertos/source/tasks.c ****             /* A tick interrupt has already occurred but was held pending
3563:bsp/middlewares/freertos/source/tasks.c ****              * because the scheduler is suspended. */
3564:bsp/middlewares/freertos/source/tasks.c ****             eReturn = eAbortSleep;
3565:bsp/middlewares/freertos/source/tasks.c ****         }
3566:bsp/middlewares/freertos/source/tasks.c ****         else
3567:bsp/middlewares/freertos/source/tasks.c ****         {
3568:bsp/middlewares/freertos/source/tasks.c ****             /* If all the tasks are in the suspended list (which might mean they
3569:bsp/middlewares/freertos/source/tasks.c ****              * have an infinite block time rather than actually being suspended)
3570:bsp/middlewares/freertos/source/tasks.c ****              * then it is safe to turn all clocks off and just wait for external
3571:bsp/middlewares/freertos/source/tasks.c ****              * interrupts. */
3572:bsp/middlewares/freertos/source/tasks.c ****             if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonA
3573:bsp/middlewares/freertos/source/tasks.c ****             {
3574:bsp/middlewares/freertos/source/tasks.c ****                 eReturn = eNoTasksWaitingTimeout;
3575:bsp/middlewares/freertos/source/tasks.c ****             }
3576:bsp/middlewares/freertos/source/tasks.c ****             else
3577:bsp/middlewares/freertos/source/tasks.c ****             {
3578:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3579:bsp/middlewares/freertos/source/tasks.c ****             }
3580:bsp/middlewares/freertos/source/tasks.c ****         }
3581:bsp/middlewares/freertos/source/tasks.c **** 
3582:bsp/middlewares/freertos/source/tasks.c ****         return eReturn;
3583:bsp/middlewares/freertos/source/tasks.c ****     }
3584:bsp/middlewares/freertos/source/tasks.c **** 
3585:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3586:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3587:bsp/middlewares/freertos/source/tasks.c **** 
3588:bsp/middlewares/freertos/source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3589:bsp/middlewares/freertos/source/tasks.c **** 
3590:bsp/middlewares/freertos/source/tasks.c ****     void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,
3591:bsp/middlewares/freertos/source/tasks.c ****                                             BaseType_t xIndex,
3592:bsp/middlewares/freertos/source/tasks.c ****                                             void * pvValue )
3593:bsp/middlewares/freertos/source/tasks.c ****     {
3594:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
3595:bsp/middlewares/freertos/source/tasks.c **** 
3596:bsp/middlewares/freertos/source/tasks.c ****         if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3597:bsp/middlewares/freertos/source/tasks.c ****         {
3598:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSet );
3599:bsp/middlewares/freertos/source/tasks.c ****             configASSERT( pxTCB != NULL );
3600:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3601:bsp/middlewares/freertos/source/tasks.c ****         }
3602:bsp/middlewares/freertos/source/tasks.c ****     }
3603:bsp/middlewares/freertos/source/tasks.c **** 
3604:bsp/middlewares/freertos/source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 70


3605:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3606:bsp/middlewares/freertos/source/tasks.c **** 
3607:bsp/middlewares/freertos/source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3608:bsp/middlewares/freertos/source/tasks.c **** 
3609:bsp/middlewares/freertos/source/tasks.c ****     void * pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,
3610:bsp/middlewares/freertos/source/tasks.c ****                                                BaseType_t xIndex )
3611:bsp/middlewares/freertos/source/tasks.c ****     {
3612:bsp/middlewares/freertos/source/tasks.c ****         void * pvReturn = NULL;
3613:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
3614:bsp/middlewares/freertos/source/tasks.c **** 
3615:bsp/middlewares/freertos/source/tasks.c ****         if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3616:bsp/middlewares/freertos/source/tasks.c ****         {
3617:bsp/middlewares/freertos/source/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3618:bsp/middlewares/freertos/source/tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3619:bsp/middlewares/freertos/source/tasks.c ****         }
3620:bsp/middlewares/freertos/source/tasks.c ****         else
3621:bsp/middlewares/freertos/source/tasks.c ****         {
3622:bsp/middlewares/freertos/source/tasks.c ****             pvReturn = NULL;
3623:bsp/middlewares/freertos/source/tasks.c ****         }
3624:bsp/middlewares/freertos/source/tasks.c **** 
3625:bsp/middlewares/freertos/source/tasks.c ****         return pvReturn;
3626:bsp/middlewares/freertos/source/tasks.c ****     }
3627:bsp/middlewares/freertos/source/tasks.c **** 
3628:bsp/middlewares/freertos/source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3629:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3630:bsp/middlewares/freertos/source/tasks.c **** 
3631:bsp/middlewares/freertos/source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3632:bsp/middlewares/freertos/source/tasks.c **** 
3633:bsp/middlewares/freertos/source/tasks.c ****     void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify,
3634:bsp/middlewares/freertos/source/tasks.c ****                                   const MemoryRegion_t * const xRegions )
3635:bsp/middlewares/freertos/source/tasks.c ****     {
3636:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
3637:bsp/middlewares/freertos/source/tasks.c **** 
3638:bsp/middlewares/freertos/source/tasks.c ****         /* If null is passed in here then we are modifying the MPU settings of
3639:bsp/middlewares/freertos/source/tasks.c ****          * the calling task. */
3640:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTaskToModify );
3641:bsp/middlewares/freertos/source/tasks.c **** 
3642:bsp/middlewares/freertos/source/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3643:bsp/middlewares/freertos/source/tasks.c ****     }
3644:bsp/middlewares/freertos/source/tasks.c **** 
3645:bsp/middlewares/freertos/source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3646:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3647:bsp/middlewares/freertos/source/tasks.c **** 
3648:bsp/middlewares/freertos/source/tasks.c **** static void prvInitialiseTaskLists( void )
3649:bsp/middlewares/freertos/source/tasks.c **** {
3650:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxPriority;
3651:bsp/middlewares/freertos/source/tasks.c **** 
3652:bsp/middlewares/freertos/source/tasks.c ****     for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPrio
3653:bsp/middlewares/freertos/source/tasks.c ****     {
3654:bsp/middlewares/freertos/source/tasks.c ****         vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3655:bsp/middlewares/freertos/source/tasks.c ****     }
3656:bsp/middlewares/freertos/source/tasks.c **** 
3657:bsp/middlewares/freertos/source/tasks.c ****     vListInitialise( &xDelayedTaskList1 );
3658:bsp/middlewares/freertos/source/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
3659:bsp/middlewares/freertos/source/tasks.c ****     vListInitialise( &xPendingReadyList );
3660:bsp/middlewares/freertos/source/tasks.c **** 
3661:bsp/middlewares/freertos/source/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 71


3662:bsp/middlewares/freertos/source/tasks.c ****         {
3663:bsp/middlewares/freertos/source/tasks.c ****             vListInitialise( &xTasksWaitingTermination );
3664:bsp/middlewares/freertos/source/tasks.c ****         }
3665:bsp/middlewares/freertos/source/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3666:bsp/middlewares/freertos/source/tasks.c **** 
3667:bsp/middlewares/freertos/source/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
3668:bsp/middlewares/freertos/source/tasks.c ****         {
3669:bsp/middlewares/freertos/source/tasks.c ****             vListInitialise( &xSuspendedTaskList );
3670:bsp/middlewares/freertos/source/tasks.c ****         }
3671:bsp/middlewares/freertos/source/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
3672:bsp/middlewares/freertos/source/tasks.c **** 
3673:bsp/middlewares/freertos/source/tasks.c ****     /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3674:bsp/middlewares/freertos/source/tasks.c ****      * using list2. */
3675:bsp/middlewares/freertos/source/tasks.c ****     pxDelayedTaskList = &xDelayedTaskList1;
3676:bsp/middlewares/freertos/source/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
3677:bsp/middlewares/freertos/source/tasks.c **** }
3678:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3679:bsp/middlewares/freertos/source/tasks.c **** 
3680:bsp/middlewares/freertos/source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3681:bsp/middlewares/freertos/source/tasks.c **** {
3682:bsp/middlewares/freertos/source/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3683:bsp/middlewares/freertos/source/tasks.c **** 
3684:bsp/middlewares/freertos/source/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3685:bsp/middlewares/freertos/source/tasks.c ****         {
3686:bsp/middlewares/freertos/source/tasks.c ****             TCB_t * pxTCB;
3687:bsp/middlewares/freertos/source/tasks.c **** 
3688:bsp/middlewares/freertos/source/tasks.c ****             /* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3689:bsp/middlewares/freertos/source/tasks.c ****              * being called too often in the idle task. */
3690:bsp/middlewares/freertos/source/tasks.c ****             while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3691:bsp/middlewares/freertos/source/tasks.c ****             {
3692:bsp/middlewares/freertos/source/tasks.c ****                 taskENTER_CRITICAL();
3693:bsp/middlewares/freertos/source/tasks.c ****                 {
3694:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e
3695:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3696:bsp/middlewares/freertos/source/tasks.c ****                     --uxCurrentNumberOfTasks;
3697:bsp/middlewares/freertos/source/tasks.c ****                     --uxDeletedTasksWaitingCleanUp;
3698:bsp/middlewares/freertos/source/tasks.c ****                 }
3699:bsp/middlewares/freertos/source/tasks.c ****                 taskEXIT_CRITICAL();
3700:bsp/middlewares/freertos/source/tasks.c **** 
3701:bsp/middlewares/freertos/source/tasks.c ****                 prvDeleteTCB( pxTCB );
3702:bsp/middlewares/freertos/source/tasks.c ****             }
3703:bsp/middlewares/freertos/source/tasks.c ****         }
3704:bsp/middlewares/freertos/source/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3705:bsp/middlewares/freertos/source/tasks.c **** }
3706:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3707:bsp/middlewares/freertos/source/tasks.c **** 
3708:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3709:bsp/middlewares/freertos/source/tasks.c **** 
3710:bsp/middlewares/freertos/source/tasks.c ****     void vTaskGetInfo( TaskHandle_t xTask,
3711:bsp/middlewares/freertos/source/tasks.c ****                        TaskStatus_t * pxTaskStatus,
3712:bsp/middlewares/freertos/source/tasks.c ****                        BaseType_t xGetFreeStackSpace,
3713:bsp/middlewares/freertos/source/tasks.c ****                        eTaskState eState )
3714:bsp/middlewares/freertos/source/tasks.c ****     {
3715:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
3716:bsp/middlewares/freertos/source/tasks.c **** 
3717:bsp/middlewares/freertos/source/tasks.c ****         /* xTask is NULL then get the state of the calling task. */
3718:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 72


3719:bsp/middlewares/freertos/source/tasks.c **** 
3720:bsp/middlewares/freertos/source/tasks.c ****         pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3721:bsp/middlewares/freertos/source/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
3722:bsp/middlewares/freertos/source/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3723:bsp/middlewares/freertos/source/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
3724:bsp/middlewares/freertos/source/tasks.c ****         pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3725:bsp/middlewares/freertos/source/tasks.c **** 
3726:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_MUTEXES == 1 )
3727:bsp/middlewares/freertos/source/tasks.c ****             {
3728:bsp/middlewares/freertos/source/tasks.c ****                 pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3729:bsp/middlewares/freertos/source/tasks.c ****             }
3730:bsp/middlewares/freertos/source/tasks.c ****         #else
3731:bsp/middlewares/freertos/source/tasks.c ****             {
3732:bsp/middlewares/freertos/source/tasks.c ****                 pxTaskStatus->uxBasePriority = 0;
3733:bsp/middlewares/freertos/source/tasks.c ****             }
3734:bsp/middlewares/freertos/source/tasks.c ****         #endif
3735:bsp/middlewares/freertos/source/tasks.c **** 
3736:bsp/middlewares/freertos/source/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3737:bsp/middlewares/freertos/source/tasks.c ****             {
3738:bsp/middlewares/freertos/source/tasks.c ****                 pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3739:bsp/middlewares/freertos/source/tasks.c ****             }
3740:bsp/middlewares/freertos/source/tasks.c ****         #else
3741:bsp/middlewares/freertos/source/tasks.c ****             {
3742:bsp/middlewares/freertos/source/tasks.c ****                 pxTaskStatus->ulRunTimeCounter = 0;
3743:bsp/middlewares/freertos/source/tasks.c ****             }
3744:bsp/middlewares/freertos/source/tasks.c ****         #endif
3745:bsp/middlewares/freertos/source/tasks.c **** 
3746:bsp/middlewares/freertos/source/tasks.c ****         /* Obtaining the task state is a little fiddly, so is only done if the
3747:bsp/middlewares/freertos/source/tasks.c ****          * value of eState passed into this function is eInvalid - otherwise the
3748:bsp/middlewares/freertos/source/tasks.c ****          * state is just set to whatever is passed in. */
3749:bsp/middlewares/freertos/source/tasks.c ****         if( eState != eInvalid )
3750:bsp/middlewares/freertos/source/tasks.c ****         {
3751:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB == pxCurrentTCB )
3752:bsp/middlewares/freertos/source/tasks.c ****             {
3753:bsp/middlewares/freertos/source/tasks.c ****                 pxTaskStatus->eCurrentState = eRunning;
3754:bsp/middlewares/freertos/source/tasks.c ****             }
3755:bsp/middlewares/freertos/source/tasks.c ****             else
3756:bsp/middlewares/freertos/source/tasks.c ****             {
3757:bsp/middlewares/freertos/source/tasks.c ****                 pxTaskStatus->eCurrentState = eState;
3758:bsp/middlewares/freertos/source/tasks.c **** 
3759:bsp/middlewares/freertos/source/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
3760:bsp/middlewares/freertos/source/tasks.c ****                     {
3761:bsp/middlewares/freertos/source/tasks.c ****                         /* If the task is in the suspended list then there is a
3762:bsp/middlewares/freertos/source/tasks.c ****                          *  chance it is actually just blocked indefinitely - so really
3763:bsp/middlewares/freertos/source/tasks.c ****                          *  it should be reported as being in the Blocked state. */
3764:bsp/middlewares/freertos/source/tasks.c ****                         if( eState == eSuspended )
3765:bsp/middlewares/freertos/source/tasks.c ****                         {
3766:bsp/middlewares/freertos/source/tasks.c ****                             vTaskSuspendAll();
3767:bsp/middlewares/freertos/source/tasks.c ****                             {
3768:bsp/middlewares/freertos/source/tasks.c ****                                 if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3769:bsp/middlewares/freertos/source/tasks.c ****                                 {
3770:bsp/middlewares/freertos/source/tasks.c ****                                     pxTaskStatus->eCurrentState = eBlocked;
3771:bsp/middlewares/freertos/source/tasks.c ****                                 }
3772:bsp/middlewares/freertos/source/tasks.c ****                             }
3773:bsp/middlewares/freertos/source/tasks.c ****                             ( void ) xTaskResumeAll();
3774:bsp/middlewares/freertos/source/tasks.c ****                         }
3775:bsp/middlewares/freertos/source/tasks.c ****                     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 73


3776:bsp/middlewares/freertos/source/tasks.c ****                 #endif /* INCLUDE_vTaskSuspend */
3777:bsp/middlewares/freertos/source/tasks.c ****             }
3778:bsp/middlewares/freertos/source/tasks.c ****         }
3779:bsp/middlewares/freertos/source/tasks.c ****         else
3780:bsp/middlewares/freertos/source/tasks.c ****         {
3781:bsp/middlewares/freertos/source/tasks.c ****             pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3782:bsp/middlewares/freertos/source/tasks.c ****         }
3783:bsp/middlewares/freertos/source/tasks.c **** 
3784:bsp/middlewares/freertos/source/tasks.c ****         /* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3785:bsp/middlewares/freertos/source/tasks.c ****          * parameter is provided to allow it to be skipped. */
3786:bsp/middlewares/freertos/source/tasks.c ****         if( xGetFreeStackSpace != pdFALSE )
3787:bsp/middlewares/freertos/source/tasks.c ****         {
3788:bsp/middlewares/freertos/source/tasks.c ****             #if ( portSTACK_GROWTH > 0 )
3789:bsp/middlewares/freertos/source/tasks.c ****                 {
3790:bsp/middlewares/freertos/source/tasks.c ****                     pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) 
3791:bsp/middlewares/freertos/source/tasks.c ****                 }
3792:bsp/middlewares/freertos/source/tasks.c ****             #else
3793:bsp/middlewares/freertos/source/tasks.c ****                 {
3794:bsp/middlewares/freertos/source/tasks.c ****                     pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) 
3795:bsp/middlewares/freertos/source/tasks.c ****                 }
3796:bsp/middlewares/freertos/source/tasks.c ****             #endif
3797:bsp/middlewares/freertos/source/tasks.c ****         }
3798:bsp/middlewares/freertos/source/tasks.c ****         else
3799:bsp/middlewares/freertos/source/tasks.c ****         {
3800:bsp/middlewares/freertos/source/tasks.c ****             pxTaskStatus->usStackHighWaterMark = 0;
3801:bsp/middlewares/freertos/source/tasks.c ****         }
3802:bsp/middlewares/freertos/source/tasks.c ****     }
3803:bsp/middlewares/freertos/source/tasks.c **** 
3804:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3805:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3806:bsp/middlewares/freertos/source/tasks.c **** 
3807:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3808:bsp/middlewares/freertos/source/tasks.c **** 
3809:bsp/middlewares/freertos/source/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
3810:bsp/middlewares/freertos/source/tasks.c ****                                                      List_t * pxList,
3811:bsp/middlewares/freertos/source/tasks.c ****                                                      eTaskState eState )
3812:bsp/middlewares/freertos/source/tasks.c ****     {
3813:bsp/middlewares/freertos/source/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB, * pxFirstTCB;
3814:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxTask = 0;
3815:bsp/middlewares/freertos/source/tasks.c **** 
3816:bsp/middlewares/freertos/source/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3817:bsp/middlewares/freertos/source/tasks.c ****         {
3818:bsp/middlewares/freertos/source/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
3819:bsp/middlewares/freertos/source/tasks.c **** 
3820:bsp/middlewares/freertos/source/tasks.c ****             /* Populate an TaskStatus_t structure within the
3821:bsp/middlewares/freertos/source/tasks.c ****              * pxTaskStatusArray array for each task that is referenced from
3822:bsp/middlewares/freertos/source/tasks.c ****              * pxList.  See the definition of TaskStatus_t in task.h for the
3823:bsp/middlewares/freertos/source/tasks.c ****              * meaning of each TaskStatus_t structure member. */
3824:bsp/middlewares/freertos/source/tasks.c ****             do
3825:bsp/middlewares/freertos/source/tasks.c ****             {
3826:bsp/middlewares/freertos/source/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
3827:bsp/middlewares/freertos/source/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
3828:bsp/middlewares/freertos/source/tasks.c ****                 uxTask++;
3829:bsp/middlewares/freertos/source/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
3830:bsp/middlewares/freertos/source/tasks.c ****         }
3831:bsp/middlewares/freertos/source/tasks.c ****         else
3832:bsp/middlewares/freertos/source/tasks.c ****         {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 74


3833:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3834:bsp/middlewares/freertos/source/tasks.c ****         }
3835:bsp/middlewares/freertos/source/tasks.c **** 
3836:bsp/middlewares/freertos/source/tasks.c ****         return uxTask;
3837:bsp/middlewares/freertos/source/tasks.c ****     }
3838:bsp/middlewares/freertos/source/tasks.c **** 
3839:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3840:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3841:bsp/middlewares/freertos/source/tasks.c **** 
3842:bsp/middlewares/freertos/source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3843:bsp/middlewares/freertos/source/tasks.c **** 
3844:bsp/middlewares/freertos/source/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3845:bsp/middlewares/freertos/source/tasks.c ****     {
3846:bsp/middlewares/freertos/source/tasks.c ****         uint32_t ulCount = 0U;
3847:bsp/middlewares/freertos/source/tasks.c **** 
3848:bsp/middlewares/freertos/source/tasks.c ****         while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3849:bsp/middlewares/freertos/source/tasks.c ****         {
3850:bsp/middlewares/freertos/source/tasks.c ****             pucStackByte -= portSTACK_GROWTH;
3851:bsp/middlewares/freertos/source/tasks.c ****             ulCount++;
3852:bsp/middlewares/freertos/source/tasks.c ****         }
3853:bsp/middlewares/freertos/source/tasks.c **** 
3854:bsp/middlewares/freertos/source/tasks.c ****         ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on sma
3855:bsp/middlewares/freertos/source/tasks.c **** 
3856:bsp/middlewares/freertos/source/tasks.c ****         return ( configSTACK_DEPTH_TYPE ) ulCount;
3857:bsp/middlewares/freertos/source/tasks.c ****     }
3858:bsp/middlewares/freertos/source/tasks.c **** 
3859:bsp/middlewares/freertos/source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3860:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3861:bsp/middlewares/freertos/source/tasks.c **** 
3862:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3863:bsp/middlewares/freertos/source/tasks.c **** 
3864:bsp/middlewares/freertos/source/tasks.c **** /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3865:bsp/middlewares/freertos/source/tasks.c ****  * same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3866:bsp/middlewares/freertos/source/tasks.c ****  * user to determine the return type.  It gets around the problem of the value
3867:bsp/middlewares/freertos/source/tasks.c ****  * overflowing on 8-bit types without breaking backward compatibility for
3868:bsp/middlewares/freertos/source/tasks.c ****  * applications that expect an 8-bit return type. */
3869:bsp/middlewares/freertos/source/tasks.c ****     configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3870:bsp/middlewares/freertos/source/tasks.c ****     {
3871:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
3872:bsp/middlewares/freertos/source/tasks.c ****         uint8_t * pucEndOfStack;
3873:bsp/middlewares/freertos/source/tasks.c ****         configSTACK_DEPTH_TYPE uxReturn;
3874:bsp/middlewares/freertos/source/tasks.c **** 
3875:bsp/middlewares/freertos/source/tasks.c ****         /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3876:bsp/middlewares/freertos/source/tasks.c ****          * the same except for their return type.  Using configSTACK_DEPTH_TYPE
3877:bsp/middlewares/freertos/source/tasks.c ****          * allows the user to determine the return type.  It gets around the
3878:bsp/middlewares/freertos/source/tasks.c ****          * problem of the value overflowing on 8-bit types without breaking
3879:bsp/middlewares/freertos/source/tasks.c ****          * backward compatibility for applications that expect an 8-bit return
3880:bsp/middlewares/freertos/source/tasks.c ****          * type. */
3881:bsp/middlewares/freertos/source/tasks.c **** 
3882:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3883:bsp/middlewares/freertos/source/tasks.c **** 
3884:bsp/middlewares/freertos/source/tasks.c ****         #if portSTACK_GROWTH < 0
3885:bsp/middlewares/freertos/source/tasks.c ****             {
3886:bsp/middlewares/freertos/source/tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3887:bsp/middlewares/freertos/source/tasks.c ****             }
3888:bsp/middlewares/freertos/source/tasks.c ****         #else
3889:bsp/middlewares/freertos/source/tasks.c ****             {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 75


3890:bsp/middlewares/freertos/source/tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3891:bsp/middlewares/freertos/source/tasks.c ****             }
3892:bsp/middlewares/freertos/source/tasks.c ****         #endif
3893:bsp/middlewares/freertos/source/tasks.c **** 
3894:bsp/middlewares/freertos/source/tasks.c ****         uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3895:bsp/middlewares/freertos/source/tasks.c **** 
3896:bsp/middlewares/freertos/source/tasks.c ****         return uxReturn;
3897:bsp/middlewares/freertos/source/tasks.c ****     }
3898:bsp/middlewares/freertos/source/tasks.c **** 
3899:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3900:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3901:bsp/middlewares/freertos/source/tasks.c **** 
3902:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3903:bsp/middlewares/freertos/source/tasks.c **** 
3904:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3905:bsp/middlewares/freertos/source/tasks.c ****     {
3906:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
3907:bsp/middlewares/freertos/source/tasks.c ****         uint8_t * pucEndOfStack;
3908:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxReturn;
3909:bsp/middlewares/freertos/source/tasks.c **** 
3910:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3911:bsp/middlewares/freertos/source/tasks.c **** 
3912:bsp/middlewares/freertos/source/tasks.c ****         #if portSTACK_GROWTH < 0
3913:bsp/middlewares/freertos/source/tasks.c ****             {
3914:bsp/middlewares/freertos/source/tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3915:bsp/middlewares/freertos/source/tasks.c ****             }
3916:bsp/middlewares/freertos/source/tasks.c ****         #else
3917:bsp/middlewares/freertos/source/tasks.c ****             {
3918:bsp/middlewares/freertos/source/tasks.c ****                 pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3919:bsp/middlewares/freertos/source/tasks.c ****             }
3920:bsp/middlewares/freertos/source/tasks.c ****         #endif
3921:bsp/middlewares/freertos/source/tasks.c **** 
3922:bsp/middlewares/freertos/source/tasks.c ****         uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3923:bsp/middlewares/freertos/source/tasks.c **** 
3924:bsp/middlewares/freertos/source/tasks.c ****         return uxReturn;
3925:bsp/middlewares/freertos/source/tasks.c ****     }
3926:bsp/middlewares/freertos/source/tasks.c **** 
3927:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3928:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3929:bsp/middlewares/freertos/source/tasks.c **** 
3930:bsp/middlewares/freertos/source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3931:bsp/middlewares/freertos/source/tasks.c **** 
3932:bsp/middlewares/freertos/source/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB )
3933:bsp/middlewares/freertos/source/tasks.c ****     {
3934:bsp/middlewares/freertos/source/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
3935:bsp/middlewares/freertos/source/tasks.c ****          * above the vPortFree() calls.  The call is also used by ports/demos that
3936:bsp/middlewares/freertos/source/tasks.c ****          * want to allocate and clean RAM statically. */
3937:bsp/middlewares/freertos/source/tasks.c ****         portCLEAN_UP_TCB( pxTCB );
3938:bsp/middlewares/freertos/source/tasks.c **** 
3939:bsp/middlewares/freertos/source/tasks.c ****         /* Free up the memory allocated by the scheduler for the task.  It is up
3940:bsp/middlewares/freertos/source/tasks.c ****          * to the task to free any memory allocated at the application level.
3941:bsp/middlewares/freertos/source/tasks.c ****          * See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3942:bsp/middlewares/freertos/source/tasks.c ****          * for additional information. */
3943:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_NEWLIB_REENTRANT == 1 )
3944:bsp/middlewares/freertos/source/tasks.c ****             {
3945:bsp/middlewares/freertos/source/tasks.c ****                 _reclaim_reent( &( pxTCB->xNewLib_reent ) );
3946:bsp/middlewares/freertos/source/tasks.c ****             }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 76


3947:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configUSE_NEWLIB_REENTRANT */
3948:bsp/middlewares/freertos/source/tasks.c **** 
3949:bsp/middlewares/freertos/source/tasks.c ****         #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 )
3950:bsp/middlewares/freertos/source/tasks.c ****             {
3951:bsp/middlewares/freertos/source/tasks.c ****                 /* The task can only have been allocated dynamically - free both
3952:bsp/middlewares/freertos/source/tasks.c ****                  * the stack and TCB. */
3953:bsp/middlewares/freertos/source/tasks.c ****                 vPortFree( pxTCB->pxStack );
3954:bsp/middlewares/freertos/source/tasks.c ****                 vPortFree( pxTCB );
3955:bsp/middlewares/freertos/source/tasks.c ****             }
3956:bsp/middlewares/freertos/source/tasks.c ****         #elif ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been
3957:bsp/middlewares/freertos/source/tasks.c ****             {
3958:bsp/middlewares/freertos/source/tasks.c ****                 /* The task could have been allocated statically or dynamically, so
3959:bsp/middlewares/freertos/source/tasks.c ****                  * check what was statically allocated before trying to free the
3960:bsp/middlewares/freertos/source/tasks.c ****                  * memory. */
3961:bsp/middlewares/freertos/source/tasks.c ****                 if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3962:bsp/middlewares/freertos/source/tasks.c ****                 {
3963:bsp/middlewares/freertos/source/tasks.c ****                     /* Both the stack and TCB were allocated dynamically, so both
3964:bsp/middlewares/freertos/source/tasks.c ****                      * must be freed. */
3965:bsp/middlewares/freertos/source/tasks.c ****                     vPortFree( pxTCB->pxStack );
3966:bsp/middlewares/freertos/source/tasks.c ****                     vPortFree( pxTCB );
3967:bsp/middlewares/freertos/source/tasks.c ****                 }
3968:bsp/middlewares/freertos/source/tasks.c ****                 else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3969:bsp/middlewares/freertos/source/tasks.c ****                 {
3970:bsp/middlewares/freertos/source/tasks.c ****                     /* Only the stack was statically allocated, so the TCB is the
3971:bsp/middlewares/freertos/source/tasks.c ****                      * only memory that must be freed. */
3972:bsp/middlewares/freertos/source/tasks.c ****                     vPortFree( pxTCB );
3973:bsp/middlewares/freertos/source/tasks.c ****                 }
3974:bsp/middlewares/freertos/source/tasks.c ****                 else
3975:bsp/middlewares/freertos/source/tasks.c ****                 {
3976:bsp/middlewares/freertos/source/tasks.c ****                     /* Neither the stack nor the TCB were allocated dynamically, so
3977:bsp/middlewares/freertos/source/tasks.c ****                      * nothing needs to be freed. */
3978:bsp/middlewares/freertos/source/tasks.c ****                     configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND
3979:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
3980:bsp/middlewares/freertos/source/tasks.c ****                 }
3981:bsp/middlewares/freertos/source/tasks.c ****             }
3982:bsp/middlewares/freertos/source/tasks.c ****         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3983:bsp/middlewares/freertos/source/tasks.c ****     }
3984:bsp/middlewares/freertos/source/tasks.c **** 
3985:bsp/middlewares/freertos/source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3986:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
3987:bsp/middlewares/freertos/source/tasks.c **** 
3988:bsp/middlewares/freertos/source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3989:bsp/middlewares/freertos/source/tasks.c **** {
 126              		.loc 1 3989 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
3990:bsp/middlewares/freertos/source/tasks.c ****     if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 131              		.loc 1 3990 5 view .LVU32
 132              		.loc 1 3990 9 is_stmt 0 view .LVU33
 133 0000 074B     		ldr	r3, .L15
 134 0002 1B68     		ldr	r3, [r3]
 135 0004 1B68     		ldr	r3, [r3]
 136              		.loc 1 3990 7 view .LVU34
 137 0006 23B9     		cbnz	r3, .L13
3991:bsp/middlewares/freertos/source/tasks.c ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 77


3992:bsp/middlewares/freertos/source/tasks.c ****         /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3993:bsp/middlewares/freertos/source/tasks.c ****          * the maximum possible value so it is  extremely unlikely that the
3994:bsp/middlewares/freertos/source/tasks.c ****          * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3995:bsp/middlewares/freertos/source/tasks.c ****          * there is an item in the delayed list. */
3996:bsp/middlewares/freertos/source/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
 138              		.loc 1 3996 9 is_stmt 1 view .LVU35
 139              		.loc 1 3996 30 is_stmt 0 view .LVU36
 140 0008 064B     		ldr	r3, .L15+4
 141 000a 4FF0FF32 		mov	r2, #-1
 142 000e 1A60     		str	r2, [r3]
 143 0010 7047     		bx	lr
 144              	.L13:
3997:bsp/middlewares/freertos/source/tasks.c ****     }
3998:bsp/middlewares/freertos/source/tasks.c ****     else
3999:bsp/middlewares/freertos/source/tasks.c ****     {
4000:bsp/middlewares/freertos/source/tasks.c ****         /* The new current delayed list is not empty, get the value of
4001:bsp/middlewares/freertos/source/tasks.c ****          * the item at the head of the delayed list.  This is the time at
4002:bsp/middlewares/freertos/source/tasks.c ****          * which the task at the head of the delayed list should be removed
4003:bsp/middlewares/freertos/source/tasks.c ****          * from the Blocked state. */
4004:bsp/middlewares/freertos/source/tasks.c ****         xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 145              		.loc 1 4004 9 is_stmt 1 view .LVU37
 146              		.loc 1 4004 32 is_stmt 0 view .LVU38
 147 0012 034B     		ldr	r3, .L15
 148 0014 1B68     		ldr	r3, [r3]
 149 0016 DB68     		ldr	r3, [r3, #12]
 150 0018 1A68     		ldr	r2, [r3]
 151              		.loc 1 4004 30 view .LVU39
 152 001a 024B     		ldr	r3, .L15+4
 153 001c 1A60     		str	r2, [r3]
4005:bsp/middlewares/freertos/source/tasks.c ****     }
4006:bsp/middlewares/freertos/source/tasks.c **** }
 154              		.loc 1 4006 1 view .LVU40
 155 001e 7047     		bx	lr
 156              	.L16:
 157              		.align	2
 158              	.L15:
 159 0020 00000000 		.word	.LANCHOR2
 160 0024 00000000 		.word	.LANCHOR3
 161              		.cfi_endproc
 162              	.LFE41:
 164              		.section	.text.prvDeleteTCB,"ax",%progbits
 165              		.align	1
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	prvDeleteTCB:
 171              	.LVL9:
 172              	.LFB40:
3933:bsp/middlewares/freertos/source/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
 173              		.loc 1 3933 5 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
3933:bsp/middlewares/freertos/source/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
 177              		.loc 1 3933 5 is_stmt 0 view .LVU42
 178 0000 10B5     		push	{r4, lr}
 179              	.LCFI0:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 78


 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
 183 0002 0446     		mov	r4, r0
3937:bsp/middlewares/freertos/source/tasks.c **** 
 184              		.loc 1 3937 9 is_stmt 1 view .LVU43
3953:bsp/middlewares/freertos/source/tasks.c ****                 vPortFree( pxTCB );
 185              		.loc 1 3953 17 view .LVU44
 186 0004 006B     		ldr	r0, [r0, #48]
 187              	.LVL10:
3953:bsp/middlewares/freertos/source/tasks.c ****                 vPortFree( pxTCB );
 188              		.loc 1 3953 17 is_stmt 0 view .LVU45
 189 0006 FFF7FEFF 		bl	vPortFree
 190              	.LVL11:
3954:bsp/middlewares/freertos/source/tasks.c ****             }
 191              		.loc 1 3954 17 is_stmt 1 view .LVU46
 192 000a 2046     		mov	r0, r4
 193 000c FFF7FEFF 		bl	vPortFree
 194              	.LVL12:
3983:bsp/middlewares/freertos/source/tasks.c **** 
 195              		.loc 1 3983 5 is_stmt 0 view .LVU47
 196 0010 10BD     		pop	{r4, pc}
3983:bsp/middlewares/freertos/source/tasks.c **** 
 197              		.loc 1 3983 5 view .LVU48
 198              		.cfi_endproc
 199              	.LFE40:
 201              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 202              		.align	1
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 207              	prvInitialiseNewTask:
 208              	.LVL13:
 209              	.LFB6:
 825:bsp/middlewares/freertos/source/tasks.c ****     StackType_t * pxTopOfStack;
 210              		.loc 1 825 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 16, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 825:bsp/middlewares/freertos/source/tasks.c ****     StackType_t * pxTopOfStack;
 214              		.loc 1 825 1 is_stmt 0 view .LVU50
 215 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 216              	.LCFI1:
 217              		.cfi_def_cfa_offset 32
 218              		.cfi_offset 3, -32
 219              		.cfi_offset 4, -28
 220              		.cfi_offset 5, -24
 221              		.cfi_offset 6, -20
 222              		.cfi_offset 7, -16
 223              		.cfi_offset 8, -12
 224              		.cfi_offset 9, -8
 225              		.cfi_offset 14, -4
 226 0004 0746     		mov	r7, r0
 227 0006 9846     		mov	r8, r3
 228 0008 089D     		ldr	r5, [sp, #32]
 229 000a DDF82490 		ldr	r9, [sp, #36]
 230 000e 0A9C     		ldr	r4, [sp, #40]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 79


 826:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t x;
 231              		.loc 1 826 5 is_stmt 1 view .LVU51
 827:bsp/middlewares/freertos/source/tasks.c **** 
 232              		.loc 1 827 5 view .LVU52
 858:bsp/middlewares/freertos/source/tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
 233              		.loc 1 858 13 view .LVU53
 858:bsp/middlewares/freertos/source/tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
 234              		.loc 1 858 39 is_stmt 0 view .LVU54
 235 0010 266B     		ldr	r6, [r4, #48]
 858:bsp/middlewares/freertos/source/tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
 236              		.loc 1 858 48 view .LVU55
 237 0012 02F18042 		add	r2, r2, #1073741824
 238              	.LVL14:
 858:bsp/middlewares/freertos/source/tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
 239              		.loc 1 858 48 view .LVU56
 240 0016 013A     		subs	r2, r2, #1
 241              	.LVL15:
 858:bsp/middlewares/freertos/source/tasks.c ****             pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( 
 242              		.loc 1 858 26 view .LVU57
 243 0018 06EB8206 		add	r6, r6, r2, lsl #2
 244              	.LVL16:
 859:bsp/middlewares/freertos/source/tasks.c **** 
 245              		.loc 1 859 13 is_stmt 1 view .LVU58
 859:bsp/middlewares/freertos/source/tasks.c **** 
 246              		.loc 1 859 91 is_stmt 0 view .LVU59
 247 001c 26F00706 		bic	r6, r6, #7
 248              	.LVL17:
 862:bsp/middlewares/freertos/source/tasks.c **** 
 249              		.loc 1 862 13 is_stmt 1 view .LVU60
 862:bsp/middlewares/freertos/source/tasks.c **** 
 250              		.loc 1 862 134 view .LVU61
 886:bsp/middlewares/freertos/source/tasks.c ****     {
 251              		.loc 1 886 5 view .LVU62
 886:bsp/middlewares/freertos/source/tasks.c ****     {
 252              		.loc 1 886 7 is_stmt 0 view .LVU63
 253 0020 A9B3     		cbz	r1, .L31
 254 0022 8E46     		mov	lr, r1
 888:bsp/middlewares/freertos/source/tasks.c ****         {
 255              		.loc 1 888 16 view .LVU64
 256 0024 4FF0000C 		mov	ip, #0
 257              	.LVL18:
 258              	.L20:
 888:bsp/middlewares/freertos/source/tasks.c ****         {
 259              		.loc 1 888 37 is_stmt 1 discriminator 1 view .LVU65
 888:bsp/middlewares/freertos/source/tasks.c ****         {
 260              		.loc 1 888 9 is_stmt 0 discriminator 1 view .LVU66
 261 0028 BCF10F0F 		cmp	ip, #15
 262 002c 0BD8     		bhi	.L22
 890:bsp/middlewares/freertos/source/tasks.c **** 
 263              		.loc 1 890 13 is_stmt 1 view .LVU67
 890:bsp/middlewares/freertos/source/tasks.c **** 
 264              		.loc 1 890 47 is_stmt 0 view .LVU68
 265 002e 1EF80C20 		ldrb	r2, [lr, ip]	@ zero_extendqisi2
 890:bsp/middlewares/freertos/source/tasks.c **** 
 266              		.loc 1 890 39 view .LVU69
 267 0032 04EB0C03 		add	r3, r4, ip
 268 0036 83F83420 		strb	r2, [r3, #52]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 80


 895:bsp/middlewares/freertos/source/tasks.c ****             {
 269              		.loc 1 895 13 is_stmt 1 view .LVU70
 895:bsp/middlewares/freertos/source/tasks.c ****             {
 270              		.loc 1 895 23 is_stmt 0 view .LVU71
 271 003a 1EF80C30 		ldrb	r3, [lr, ip]	@ zero_extendqisi2
 895:bsp/middlewares/freertos/source/tasks.c ****             {
 272              		.loc 1 895 15 view .LVU72
 273 003e 13B1     		cbz	r3, .L22
 901:bsp/middlewares/freertos/source/tasks.c ****             }
 274              		.loc 1 901 41 is_stmt 1 discriminator 2 view .LVU73
 888:bsp/middlewares/freertos/source/tasks.c ****         {
 275              		.loc 1 888 82 discriminator 2 view .LVU74
 888:bsp/middlewares/freertos/source/tasks.c ****         {
 276              		.loc 1 888 83 is_stmt 0 discriminator 2 view .LVU75
 277 0040 0CF1010C 		add	ip, ip, #1
 278              	.LVL19:
 888:bsp/middlewares/freertos/source/tasks.c ****         {
 279              		.loc 1 888 83 discriminator 2 view .LVU76
 280 0044 F0E7     		b	.L20
 281              	.L22:
 907:bsp/middlewares/freertos/source/tasks.c ****     }
 282              		.loc 1 907 9 is_stmt 1 view .LVU77
 907:bsp/middlewares/freertos/source/tasks.c ****     }
 283              		.loc 1 907 61 is_stmt 0 view .LVU78
 284 0046 0023     		movs	r3, #0
 285 0048 84F84330 		strb	r3, [r4, #67]
 286              	.LVL20:
 287              	.L24:
 918:bsp/middlewares/freertos/source/tasks.c ****     {
 288              		.loc 1 918 5 is_stmt 1 view .LVU79
 918:bsp/middlewares/freertos/source/tasks.c ****     {
 289              		.loc 1 918 7 is_stmt 0 view .LVU80
 290 004c 1F2D     		cmp	r5, #31
 291 004e 00D9     		bls	.L25
 920:bsp/middlewares/freertos/source/tasks.c ****     }
 292              		.loc 1 920 20 view .LVU81
 293 0050 1F25     		movs	r5, #31
 294              	.L25:
 295              	.LVL21:
 924:bsp/middlewares/freertos/source/tasks.c ****     }
 296              		.loc 1 924 33 is_stmt 1 view .LVU82
 927:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 297              		.loc 1 927 5 view .LVU83
 927:bsp/middlewares/freertos/source/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 298              		.loc 1 927 26 is_stmt 0 view .LVU84
 299 0052 E562     		str	r5, [r4, #44]
 935:bsp/middlewares/freertos/source/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 300              		.loc 1 935 5 is_stmt 1 view .LVU85
 301 0054 201D     		adds	r0, r4, #4
 302              	.LVL22:
 935:bsp/middlewares/freertos/source/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 303              		.loc 1 935 5 is_stmt 0 view .LVU86
 304 0056 FFF7FEFF 		bl	vListInitialiseItem
 305              	.LVL23:
 936:bsp/middlewares/freertos/source/tasks.c **** 
 306              		.loc 1 936 5 is_stmt 1 view .LVU87
 307 005a 04F11800 		add	r0, r4, #24
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 81


 308 005e FFF7FEFF 		bl	vListInitialiseItem
 309              	.LVL24:
 940:bsp/middlewares/freertos/source/tasks.c **** 
 310              		.loc 1 940 5 view .LVU88
 311 0062 2461     		str	r4, [r4, #16]
 943:bsp/middlewares/freertos/source/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 312              		.loc 1 943 5 view .LVU89
 313 0064 C5F12005 		rsb	r5, r5, #32
 314              	.LVL25:
 943:bsp/middlewares/freertos/source/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 315              		.loc 1 943 5 is_stmt 0 view .LVU90
 316 0068 A561     		str	r5, [r4, #24]
 944:bsp/middlewares/freertos/source/tasks.c **** 
 317              		.loc 1 944 5 is_stmt 1 view .LVU91
 318 006a 6462     		str	r4, [r4, #36]
 971:bsp/middlewares/freertos/source/tasks.c ****         }
 319              		.loc 1 971 13 view .LVU92
 983:bsp/middlewares/freertos/source/tasks.c ****             memset( ( void * ) &( pxNewTCB->ucNotifyState[ 0 ] ), 0x00, sizeof( pxNewTCB->ucNotifyS
 320              		.loc 1 983 13 view .LVU93
 321 006c 0023     		movs	r3, #0
 322 006e 6364     		str	r3, [r4, #68]	@ unaligned
 984:bsp/middlewares/freertos/source/tasks.c ****         }
 323              		.loc 1 984 13 view .LVU94
 324 0070 84F84830 		strb	r3, [r4, #72]
1049:bsp/middlewares/freertos/source/tasks.c ****                 }
 325              		.loc 1 1049 21 view .LVU95
1049:bsp/middlewares/freertos/source/tasks.c ****                 }
 326              		.loc 1 1049 46 is_stmt 0 view .LVU96
 327 0074 4246     		mov	r2, r8
 328 0076 3946     		mov	r1, r7
 329 0078 3046     		mov	r0, r6
 330 007a FFF7FEFF 		bl	pxPortInitialiseStack
 331              	.LVL26:
1049:bsp/middlewares/freertos/source/tasks.c ****                 }
 332              		.loc 1 1049 44 view .LVU97
 333 007e 2060     		str	r0, [r4]
1055:bsp/middlewares/freertos/source/tasks.c ****     {
 334              		.loc 1 1055 5 is_stmt 1 view .LVU98
1055:bsp/middlewares/freertos/source/tasks.c ****     {
 335              		.loc 1 1055 7 is_stmt 0 view .LVU99
 336 0080 B9F1000F 		cmp	r9, #0
 337 0084 01D0     		beq	.L19
1059:bsp/middlewares/freertos/source/tasks.c ****     }
 338              		.loc 1 1059 9 is_stmt 1 view .LVU100
1059:bsp/middlewares/freertos/source/tasks.c ****     }
 339              		.loc 1 1059 24 is_stmt 0 view .LVU101
 340 0086 C9F80040 		str	r4, [r9]
1063:bsp/middlewares/freertos/source/tasks.c ****     }
 341              		.loc 1 1063 33 is_stmt 1 view .LVU102
 342              	.L19:
1065:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 343              		.loc 1 1065 1 is_stmt 0 view .LVU103
 344 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 345              	.LVL27:
 346              	.L31:
 913:bsp/middlewares/freertos/source/tasks.c ****     }
 347              		.loc 1 913 9 is_stmt 1 view .LVU104
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 82


 913:bsp/middlewares/freertos/source/tasks.c ****     }
 348              		.loc 1 913 35 is_stmt 0 view .LVU105
 349 008e 0023     		movs	r3, #0
 350              	.LVL28:
 913:bsp/middlewares/freertos/source/tasks.c ****     }
 351              		.loc 1 913 35 view .LVU106
 352 0090 84F83430 		strb	r3, [r4, #52]
 353 0094 DAE7     		b	.L24
 354              		.cfi_endproc
 355              	.LFE6:
 357              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 358              		.align	1
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	prvInitialiseTaskLists:
 364              	.LFB38:
3649:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxPriority;
 365              		.loc 1 3649 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 38B5     		push	{r3, r4, r5, lr}
 370              	.LCFI2:
 371              		.cfi_def_cfa_offset 16
 372              		.cfi_offset 3, -16
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 5, -8
 375              		.cfi_offset 14, -4
3650:bsp/middlewares/freertos/source/tasks.c **** 
 376              		.loc 1 3650 5 view .LVU108
3652:bsp/middlewares/freertos/source/tasks.c ****     {
 377              		.loc 1 3652 5 view .LVU109
 378              	.LVL29:
3652:bsp/middlewares/freertos/source/tasks.c ****     {
 379              		.loc 1 3652 21 is_stmt 0 view .LVU110
 380 0002 0024     		movs	r4, #0
3652:bsp/middlewares/freertos/source/tasks.c ****     {
 381              		.loc 1 3652 5 view .LVU111
 382 0004 07E0     		b	.L33
 383              	.LVL30:
 384              	.L34:
3654:bsp/middlewares/freertos/source/tasks.c ****     }
 385              		.loc 1 3654 9 is_stmt 1 discriminator 3 view .LVU112
 386 0006 04EB8402 		add	r2, r4, r4, lsl #2
 387 000a 9300     		lsls	r3, r2, #2
 388 000c 0E48     		ldr	r0, .L36
 389 000e 1844     		add	r0, r0, r3
 390 0010 FFF7FEFF 		bl	vListInitialise
 391              	.LVL31:
3652:bsp/middlewares/freertos/source/tasks.c ****     {
 392              		.loc 1 3652 94 discriminator 3 view .LVU113
3652:bsp/middlewares/freertos/source/tasks.c ****     {
 393              		.loc 1 3652 104 is_stmt 0 discriminator 3 view .LVU114
 394 0014 0134     		adds	r4, r4, #1
 395              	.LVL32:
 396              	.L33:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 83


3652:bsp/middlewares/freertos/source/tasks.c ****     {
 397              		.loc 1 3652 43 is_stmt 1 discriminator 1 view .LVU115
3652:bsp/middlewares/freertos/source/tasks.c ****     {
 398              		.loc 1 3652 5 is_stmt 0 discriminator 1 view .LVU116
 399 0016 1F2C     		cmp	r4, #31
 400 0018 F5D9     		bls	.L34
3657:bsp/middlewares/freertos/source/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
 401              		.loc 1 3657 5 is_stmt 1 view .LVU117
 402 001a 0C4D     		ldr	r5, .L36+4
 403 001c 2846     		mov	r0, r5
 404 001e FFF7FEFF 		bl	vListInitialise
 405              	.LVL33:
3658:bsp/middlewares/freertos/source/tasks.c ****     vListInitialise( &xPendingReadyList );
 406              		.loc 1 3658 5 view .LVU118
 407 0022 0B4C     		ldr	r4, .L36+8
 408              	.LVL34:
3658:bsp/middlewares/freertos/source/tasks.c ****     vListInitialise( &xPendingReadyList );
 409              		.loc 1 3658 5 is_stmt 0 view .LVU119
 410 0024 2046     		mov	r0, r4
 411 0026 FFF7FEFF 		bl	vListInitialise
 412              	.LVL35:
3659:bsp/middlewares/freertos/source/tasks.c **** 
 413              		.loc 1 3659 5 is_stmt 1 view .LVU120
 414 002a 0A48     		ldr	r0, .L36+12
 415 002c FFF7FEFF 		bl	vListInitialise
 416              	.LVL36:
3663:bsp/middlewares/freertos/source/tasks.c ****         }
 417              		.loc 1 3663 13 view .LVU121
 418 0030 0948     		ldr	r0, .L36+16
 419 0032 FFF7FEFF 		bl	vListInitialise
 420              	.LVL37:
3669:bsp/middlewares/freertos/source/tasks.c ****         }
 421              		.loc 1 3669 13 view .LVU122
 422 0036 0948     		ldr	r0, .L36+20
 423 0038 FFF7FEFF 		bl	vListInitialise
 424              	.LVL38:
3675:bsp/middlewares/freertos/source/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 425              		.loc 1 3675 5 view .LVU123
3675:bsp/middlewares/freertos/source/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 426              		.loc 1 3675 23 is_stmt 0 view .LVU124
 427 003c 084B     		ldr	r3, .L36+24
 428 003e 1D60     		str	r5, [r3]
3676:bsp/middlewares/freertos/source/tasks.c **** }
 429              		.loc 1 3676 5 is_stmt 1 view .LVU125
3676:bsp/middlewares/freertos/source/tasks.c **** }
 430              		.loc 1 3676 31 is_stmt 0 view .LVU126
 431 0040 084B     		ldr	r3, .L36+28
 432 0042 1C60     		str	r4, [r3]
3677:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 433              		.loc 1 3677 1 view .LVU127
 434 0044 38BD     		pop	{r3, r4, r5, pc}
 435              	.L37:
 436 0046 00BF     		.align	2
 437              	.L36:
 438 0048 00000000 		.word	.LANCHOR4
 439 004c 00000000 		.word	.LANCHOR5
 440 0050 00000000 		.word	.LANCHOR6
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 84


 441 0054 00000000 		.word	.LANCHOR1
 442 0058 00000000 		.word	.LANCHOR7
 443 005c 00000000 		.word	.LANCHOR0
 444 0060 00000000 		.word	.LANCHOR2
 445 0064 00000000 		.word	.LANCHOR8
 446              		.cfi_endproc
 447              	.LFE38:
 449              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 450              		.align	1
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	prvAddNewTaskToReadyList:
 456              	.LVL39:
 457              	.LFB7:
1069:bsp/middlewares/freertos/source/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 458              		.loc 1 1069 1 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
1069:bsp/middlewares/freertos/source/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 462              		.loc 1 1069 1 is_stmt 0 view .LVU129
 463 0000 10B5     		push	{r4, lr}
 464              	.LCFI3:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 0002 0446     		mov	r4, r0
1072:bsp/middlewares/freertos/source/tasks.c ****     {
 469              		.loc 1 1072 5 is_stmt 1 view .LVU130
 470 0004 FFF7FEFF 		bl	vPortEnterCritical
 471              	.LVL40:
1074:bsp/middlewares/freertos/source/tasks.c **** 
 472              		.loc 1 1074 9 view .LVU131
1074:bsp/middlewares/freertos/source/tasks.c **** 
 473              		.loc 1 1074 31 is_stmt 0 view .LVU132
 474 0008 214A     		ldr	r2, .L45
 475 000a 1368     		ldr	r3, [r2]
 476 000c 0133     		adds	r3, r3, #1
 477 000e 1360     		str	r3, [r2]
1076:bsp/middlewares/freertos/source/tasks.c ****         {
 478              		.loc 1 1076 9 is_stmt 1 view .LVU133
1076:bsp/middlewares/freertos/source/tasks.c ****         {
 479              		.loc 1 1076 26 is_stmt 0 view .LVU134
 480 0010 204B     		ldr	r3, .L45+4
 481 0012 1B68     		ldr	r3, [r3]
1076:bsp/middlewares/freertos/source/tasks.c ****         {
 482              		.loc 1 1076 11 view .LVU135
 483 0014 5BB1     		cbz	r3, .L43
1099:bsp/middlewares/freertos/source/tasks.c ****             {
 484              		.loc 1 1099 13 is_stmt 1 view .LVU136
1099:bsp/middlewares/freertos/source/tasks.c ****             {
 485              		.loc 1 1099 35 is_stmt 0 view .LVU137
 486 0016 204B     		ldr	r3, .L45+8
 487 0018 1B68     		ldr	r3, [r3]
1099:bsp/middlewares/freertos/source/tasks.c ****             {
 488              		.loc 1 1099 15 view .LVU138
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 85


 489 001a 6BB9     		cbnz	r3, .L40
1101:bsp/middlewares/freertos/source/tasks.c ****                 {
 490              		.loc 1 1101 17 is_stmt 1 view .LVU139
1101:bsp/middlewares/freertos/source/tasks.c ****                 {
 491              		.loc 1 1101 33 is_stmt 0 view .LVU140
 492 001c 1D4B     		ldr	r3, .L45+4
 493 001e 1B68     		ldr	r3, [r3]
 494 0020 DA6A     		ldr	r2, [r3, #44]
1101:bsp/middlewares/freertos/source/tasks.c ****                 {
 495              		.loc 1 1101 57 view .LVU141
 496 0022 E36A     		ldr	r3, [r4, #44]
1101:bsp/middlewares/freertos/source/tasks.c ****                 {
 497              		.loc 1 1101 19 view .LVU142
 498 0024 9A42     		cmp	r2, r3
 499 0026 07D8     		bhi	.L40
1103:bsp/middlewares/freertos/source/tasks.c ****                 }
 500              		.loc 1 1103 21 is_stmt 1 view .LVU143
1103:bsp/middlewares/freertos/source/tasks.c ****                 }
 501              		.loc 1 1103 34 is_stmt 0 view .LVU144
 502 0028 1A4B     		ldr	r3, .L45+4
 503 002a 1C60     		str	r4, [r3]
 504 002c 04E0     		b	.L40
 505              	.L43:
1080:bsp/middlewares/freertos/source/tasks.c **** 
 506              		.loc 1 1080 13 is_stmt 1 view .LVU145
1080:bsp/middlewares/freertos/source/tasks.c **** 
 507              		.loc 1 1080 26 is_stmt 0 view .LVU146
 508 002e 194B     		ldr	r3, .L45+4
 509 0030 1C60     		str	r4, [r3]
1082:bsp/middlewares/freertos/source/tasks.c ****             {
 510              		.loc 1 1082 13 is_stmt 1 view .LVU147
1082:bsp/middlewares/freertos/source/tasks.c ****             {
 511              		.loc 1 1082 40 is_stmt 0 view .LVU148
 512 0032 1368     		ldr	r3, [r2]
1082:bsp/middlewares/freertos/source/tasks.c ****             {
 513              		.loc 1 1082 15 view .LVU149
 514 0034 012B     		cmp	r3, #1
 515 0036 28D0     		beq	.L44
 516              	.L40:
1112:bsp/middlewares/freertos/source/tasks.c ****             }
 517              		.loc 1 1112 41 is_stmt 1 view .LVU150
1116:bsp/middlewares/freertos/source/tasks.c **** 
 518              		.loc 1 1116 9 view .LVU151
1116:bsp/middlewares/freertos/source/tasks.c **** 
 519              		.loc 1 1116 21 is_stmt 0 view .LVU152
 520 0038 184A     		ldr	r2, .L45+12
 521 003a 1368     		ldr	r3, [r2]
 522 003c 0133     		adds	r3, r3, #1
 523 003e 1360     		str	r3, [r2]
1124:bsp/middlewares/freertos/source/tasks.c **** 
 524              		.loc 1 1124 37 is_stmt 1 view .LVU153
1126:bsp/middlewares/freertos/source/tasks.c **** 
 525              		.loc 1 1126 9 view .LVU154
1126:bsp/middlewares/freertos/source/tasks.c **** 
 526              		.loc 1 1126 9 view .LVU155
 527 0040 E06A     		ldr	r0, [r4, #44]
 528 0042 0123     		movs	r3, #1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 86


 529 0044 8340     		lsls	r3, r3, r0
 530 0046 164A     		ldr	r2, .L45+16
 531 0048 1168     		ldr	r1, [r2]
 532 004a 0B43     		orrs	r3, r3, r1
 533 004c 1360     		str	r3, [r2]
1126:bsp/middlewares/freertos/source/tasks.c **** 
 534              		.loc 1 1126 9 view .LVU156
 535 004e 00EB8000 		add	r0, r0, r0, lsl #2
 536 0052 211D     		adds	r1, r4, #4
 537 0054 134B     		ldr	r3, .L45+20
 538 0056 03EB8000 		add	r0, r3, r0, lsl #2
 539 005a FFF7FEFF 		bl	vListInsertEnd
 540              	.LVL41:
1126:bsp/middlewares/freertos/source/tasks.c **** 
 541              		.loc 1 1126 42 view .LVU157
1128:bsp/middlewares/freertos/source/tasks.c ****     }
 542              		.loc 1 1128 9 view .LVU158
1130:bsp/middlewares/freertos/source/tasks.c **** 
 543              		.loc 1 1130 5 view .LVU159
 544 005e FFF7FEFF 		bl	vPortExitCritical
 545              	.LVL42:
1132:bsp/middlewares/freertos/source/tasks.c ****     {
 546              		.loc 1 1132 5 view .LVU160
1132:bsp/middlewares/freertos/source/tasks.c ****     {
 547              		.loc 1 1132 27 is_stmt 0 view .LVU161
 548 0062 0D4B     		ldr	r3, .L45+8
 549 0064 1B68     		ldr	r3, [r3]
1132:bsp/middlewares/freertos/source/tasks.c ****     {
 550              		.loc 1 1132 7 view .LVU162
 551 0066 7BB1     		cbz	r3, .L38
1136:bsp/middlewares/freertos/source/tasks.c ****         {
 552              		.loc 1 1136 9 is_stmt 1 view .LVU163
1136:bsp/middlewares/freertos/source/tasks.c ****         {
 553              		.loc 1 1136 25 is_stmt 0 view .LVU164
 554 0068 0A4B     		ldr	r3, .L45+4
 555 006a 1B68     		ldr	r3, [r3]
 556 006c DA6A     		ldr	r2, [r3, #44]
1136:bsp/middlewares/freertos/source/tasks.c ****         {
 557              		.loc 1 1136 48 view .LVU165
 558 006e E36A     		ldr	r3, [r4, #44]
1136:bsp/middlewares/freertos/source/tasks.c ****         {
 559              		.loc 1 1136 11 view .LVU166
 560 0070 9A42     		cmp	r2, r3
 561 0072 09D2     		bcs	.L38
1138:bsp/middlewares/freertos/source/tasks.c ****         }
 562              		.loc 1 1138 13 is_stmt 1 view .LVU167
 563 0074 4FF0E023 		mov	r3, #-536813568
 564 0078 4FF08052 		mov	r2, #268435456
 565 007c C3F8042D 		str	r2, [r3, #3332]
1138:bsp/middlewares/freertos/source/tasks.c ****         }
 566              		.loc 1 1138 13 view .LVU168
 567              		.syntax unified
 568              	@ 1138 "bsp/middlewares/freertos/source/tasks.c" 1
 569 0080 BFF34F8F 		dsb
 570              	@ 0 "" 2
1138:bsp/middlewares/freertos/source/tasks.c ****         }
 571              		.loc 1 1138 13 view .LVU169
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 87


 572              	@ 1138 "bsp/middlewares/freertos/source/tasks.c" 1
 573 0084 BFF36F8F 		isb
 574              	@ 0 "" 2
1138:bsp/middlewares/freertos/source/tasks.c ****         }
 575              		.loc 1 1138 44 view .LVU170
1147:bsp/middlewares/freertos/source/tasks.c ****     }
 576              		.loc 1 1147 33 view .LVU171
 577              		.thumb
 578              		.syntax unified
 579              	.L38:
1149:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 580              		.loc 1 1149 1 is_stmt 0 view .LVU172
 581 0088 10BD     		pop	{r4, pc}
 582              	.LVL43:
 583              	.L44:
1087:bsp/middlewares/freertos/source/tasks.c ****             }
 584              		.loc 1 1087 17 is_stmt 1 view .LVU173
 585 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 586              	.LVL44:
 587 008e D3E7     		b	.L40
 588              	.L46:
 589              		.align	2
 590              	.L45:
 591 0090 00000000 		.word	.LANCHOR9
 592 0094 00000000 		.word	.LANCHOR10
 593 0098 00000000 		.word	.LANCHOR11
 594 009c 00000000 		.word	.LANCHOR12
 595 00a0 00000000 		.word	.LANCHOR13
 596 00a4 00000000 		.word	.LANCHOR4
 597              		.cfi_endproc
 598              	.LFE7:
 600              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 601              		.align	1
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 606              	prvCheckTasksWaitingTermination:
 607              	.LFB39:
3681:bsp/middlewares/freertos/source/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 608              		.loc 1 3681 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              	.LBB114:
3686:bsp/middlewares/freertos/source/tasks.c **** 
 613              		.loc 1 3686 13 view .LVU175
3690:bsp/middlewares/freertos/source/tasks.c ****             {
 614              		.loc 1 3690 13 view .LVU176
3690:bsp/middlewares/freertos/source/tasks.c ****             {
 615              		.loc 1 3690 18 view .LVU177
3690:bsp/middlewares/freertos/source/tasks.c ****             {
 616              		.loc 1 3690 49 is_stmt 0 view .LVU178
 617 0000 0F4B     		ldr	r3, .L54
 618 0002 1B68     		ldr	r3, [r3]
3690:bsp/middlewares/freertos/source/tasks.c ****             {
 619              		.loc 1 3690 18 view .LVU179
 620 0004 D3B1     		cbz	r3, .L53
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 88


 621              	.LBE114:
3681:bsp/middlewares/freertos/source/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 622              		.loc 1 3681 1 view .LVU180
 623 0006 10B5     		push	{r4, lr}
 624              	.LCFI4:
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 4, -8
 627              		.cfi_offset 14, -4
 628              	.L49:
 629              	.LBB115:
3692:bsp/middlewares/freertos/source/tasks.c ****                 {
 630              		.loc 1 3692 17 is_stmt 1 view .LVU181
 631 0008 FFF7FEFF 		bl	vPortEnterCritical
 632              	.LVL45:
3694:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 633              		.loc 1 3694 21 view .LVU182
3694:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 634              		.loc 1 3694 29 is_stmt 0 view .LVU183
 635 000c 0D4B     		ldr	r3, .L54+4
 636 000e DB68     		ldr	r3, [r3, #12]
3694:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 637              		.loc 1 3694 27 view .LVU184
 638 0010 DC68     		ldr	r4, [r3, #12]
 639              	.LVL46:
3695:bsp/middlewares/freertos/source/tasks.c ****                     --uxCurrentNumberOfTasks;
 640              		.loc 1 3695 21 is_stmt 1 view .LVU185
3695:bsp/middlewares/freertos/source/tasks.c ****                     --uxCurrentNumberOfTasks;
 641              		.loc 1 3695 30 is_stmt 0 view .LVU186
 642 0012 201D     		adds	r0, r4, #4
 643 0014 FFF7FEFF 		bl	uxListRemove
 644              	.LVL47:
3696:bsp/middlewares/freertos/source/tasks.c ****                     --uxDeletedTasksWaitingCleanUp;
 645              		.loc 1 3696 21 is_stmt 1 view .LVU187
 646 0018 0B4A     		ldr	r2, .L54+8
 647 001a 1368     		ldr	r3, [r2]
 648 001c 013B     		subs	r3, r3, #1
 649 001e 1360     		str	r3, [r2]
3697:bsp/middlewares/freertos/source/tasks.c ****                 }
 650              		.loc 1 3697 21 view .LVU188
 651 0020 074A     		ldr	r2, .L54
 652 0022 1368     		ldr	r3, [r2]
 653 0024 013B     		subs	r3, r3, #1
 654 0026 1360     		str	r3, [r2]
3699:bsp/middlewares/freertos/source/tasks.c **** 
 655              		.loc 1 3699 17 view .LVU189
 656 0028 FFF7FEFF 		bl	vPortExitCritical
 657              	.LVL48:
3701:bsp/middlewares/freertos/source/tasks.c ****             }
 658              		.loc 1 3701 17 view .LVU190
 659 002c 2046     		mov	r0, r4
 660 002e FFF7FEFF 		bl	prvDeleteTCB
 661              	.LVL49:
3690:bsp/middlewares/freertos/source/tasks.c ****             {
 662              		.loc 1 3690 18 view .LVU191
3690:bsp/middlewares/freertos/source/tasks.c ****             {
 663              		.loc 1 3690 49 is_stmt 0 view .LVU192
 664 0032 034B     		ldr	r3, .L54
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 89


 665 0034 1B68     		ldr	r3, [r3]
3690:bsp/middlewares/freertos/source/tasks.c ****             {
 666              		.loc 1 3690 18 view .LVU193
 667 0036 002B     		cmp	r3, #0
 668 0038 E6D1     		bne	.L49
 669              	.LBE115:
3705:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 670              		.loc 1 3705 1 view .LVU194
 671 003a 10BD     		pop	{r4, pc}
 672              	.LVL50:
 673              	.L53:
 674              	.LCFI5:
 675              		.cfi_def_cfa_offset 0
 676              		.cfi_restore 4
 677              		.cfi_restore 14
3705:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 678              		.loc 1 3705 1 view .LVU195
 679 003c 7047     		bx	lr
 680              	.L55:
 681 003e 00BF     		.align	2
 682              	.L54:
 683 0040 00000000 		.word	.LANCHOR14
 684 0044 00000000 		.word	.LANCHOR7
 685 0048 00000000 		.word	.LANCHOR9
 686              		.cfi_endproc
 687              	.LFE39:
 689              		.section	.text.prvIdleTask,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 695              	prvIdleTask:
 696              	.LFB37:
3424:bsp/middlewares/freertos/source/tasks.c ****     /* Stop warnings. */
 697              		.loc 1 3424 1 is_stmt 1 view -0
 698              		.cfi_startproc
 699              		@ Volatile: function does not return.
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              	.LVL51:
3424:bsp/middlewares/freertos/source/tasks.c ****     /* Stop warnings. */
 703              		.loc 1 3424 1 is_stmt 0 view .LVU197
 704 0000 08B5     		push	{r3, lr}
 705              	.LCFI6:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 3, -8
 708              		.cfi_offset 14, -4
 709              	.LVL52:
 710              	.L57:
3426:bsp/middlewares/freertos/source/tasks.c **** 
 711              		.loc 1 3426 5 is_stmt 1 view .LVU198
3434:bsp/middlewares/freertos/source/tasks.c **** 
 712              		.loc 1 3434 67 view .LVU199
3436:bsp/middlewares/freertos/source/tasks.c ****     {
 713              		.loc 1 3436 5 view .LVU200
3440:bsp/middlewares/freertos/source/tasks.c **** 
 714              		.loc 1 3440 9 view .LVU201
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 90


 715 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 716              	.LVL53:
3463:bsp/middlewares/freertos/source/tasks.c ****                 {
 717              		.loc 1 3463 17 view .LVU202
3463:bsp/middlewares/freertos/source/tasks.c ****                 {
 718              		.loc 1 3463 21 is_stmt 0 view .LVU203
 719 0006 074B     		ldr	r3, .L60
 720 0008 1B68     		ldr	r3, [r3]
3463:bsp/middlewares/freertos/source/tasks.c ****                 {
 721              		.loc 1 3463 19 view .LVU204
 722 000a 012B     		cmp	r3, #1
 723 000c F9D9     		bls	.L57
3465:bsp/middlewares/freertos/source/tasks.c ****                 }
 724              		.loc 1 3465 21 is_stmt 1 view .LVU205
 725 000e 4FF0E023 		mov	r3, #-536813568
 726 0012 4FF08052 		mov	r2, #268435456
 727 0016 C3F8042D 		str	r2, [r3, #3332]
3465:bsp/middlewares/freertos/source/tasks.c ****                 }
 728              		.loc 1 3465 21 view .LVU206
 729              		.syntax unified
 730              	@ 3465 "bsp/middlewares/freertos/source/tasks.c" 1
 731 001a BFF34F8F 		dsb
 732              	@ 0 "" 2
3465:bsp/middlewares/freertos/source/tasks.c ****                 }
 733              		.loc 1 3465 21 view .LVU207
 734              	@ 3465 "bsp/middlewares/freertos/source/tasks.c" 1
 735 001e BFF36F8F 		isb
 736              	@ 0 "" 2
3465:bsp/middlewares/freertos/source/tasks.c ****                 }
 737              		.loc 1 3465 32 view .LVU208
 738              		.thumb
 739              		.syntax unified
 740 0022 EEE7     		b	.L57
 741              	.L61:
 742              		.align	2
 743              	.L60:
 744 0024 00000000 		.word	.LANCHOR4
 745              		.cfi_endproc
 746              	.LFE37:
 748              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 749              		.align	1
 750              		.syntax unified
 751              		.thumb
 752              		.thumb_func
 754              	prvAddCurrentTaskToDelayedList:
 755              	.LVL54:
 756              	.LFB51:
4007:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4008:bsp/middlewares/freertos/source/tasks.c **** 
4009:bsp/middlewares/freertos/source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
4010:bsp/middlewares/freertos/source/tasks.c **** 
4011:bsp/middlewares/freertos/source/tasks.c ****     TaskHandle_t xTaskGetCurrentTaskHandle( void )
4012:bsp/middlewares/freertos/source/tasks.c ****     {
4013:bsp/middlewares/freertos/source/tasks.c ****         TaskHandle_t xReturn;
4014:bsp/middlewares/freertos/source/tasks.c **** 
4015:bsp/middlewares/freertos/source/tasks.c ****         /* A critical section is not required as this is not called from
4016:bsp/middlewares/freertos/source/tasks.c ****          * an interrupt and the current TCB will always be the same for any
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 91


4017:bsp/middlewares/freertos/source/tasks.c ****          * individual execution thread. */
4018:bsp/middlewares/freertos/source/tasks.c ****         xReturn = pxCurrentTCB;
4019:bsp/middlewares/freertos/source/tasks.c **** 
4020:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
4021:bsp/middlewares/freertos/source/tasks.c ****     }
4022:bsp/middlewares/freertos/source/tasks.c **** 
4023:bsp/middlewares/freertos/source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
4024:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4025:bsp/middlewares/freertos/source/tasks.c **** 
4026:bsp/middlewares/freertos/source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
4027:bsp/middlewares/freertos/source/tasks.c **** 
4028:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskGetSchedulerState( void )
4029:bsp/middlewares/freertos/source/tasks.c ****     {
4030:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
4031:bsp/middlewares/freertos/source/tasks.c **** 
4032:bsp/middlewares/freertos/source/tasks.c ****         if( xSchedulerRunning == pdFALSE )
4033:bsp/middlewares/freertos/source/tasks.c ****         {
4034:bsp/middlewares/freertos/source/tasks.c ****             xReturn = taskSCHEDULER_NOT_STARTED;
4035:bsp/middlewares/freertos/source/tasks.c ****         }
4036:bsp/middlewares/freertos/source/tasks.c ****         else
4037:bsp/middlewares/freertos/source/tasks.c ****         {
4038:bsp/middlewares/freertos/source/tasks.c ****             if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4039:bsp/middlewares/freertos/source/tasks.c ****             {
4040:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = taskSCHEDULER_RUNNING;
4041:bsp/middlewares/freertos/source/tasks.c ****             }
4042:bsp/middlewares/freertos/source/tasks.c ****             else
4043:bsp/middlewares/freertos/source/tasks.c ****             {
4044:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = taskSCHEDULER_SUSPENDED;
4045:bsp/middlewares/freertos/source/tasks.c ****             }
4046:bsp/middlewares/freertos/source/tasks.c ****         }
4047:bsp/middlewares/freertos/source/tasks.c **** 
4048:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
4049:bsp/middlewares/freertos/source/tasks.c ****     }
4050:bsp/middlewares/freertos/source/tasks.c **** 
4051:bsp/middlewares/freertos/source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4052:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4053:bsp/middlewares/freertos/source/tasks.c **** 
4054:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4055:bsp/middlewares/freertos/source/tasks.c **** 
4056:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4057:bsp/middlewares/freertos/source/tasks.c ****     {
4058:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4059:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = pdFALSE;
4060:bsp/middlewares/freertos/source/tasks.c **** 
4061:bsp/middlewares/freertos/source/tasks.c ****         /* If the mutex was given back by an interrupt while the queue was
4062:bsp/middlewares/freertos/source/tasks.c ****          * locked then the mutex holder might now be NULL.  _RB_ Is this still
4063:bsp/middlewares/freertos/source/tasks.c ****          * needed as interrupts can no longer use mutexes? */
4064:bsp/middlewares/freertos/source/tasks.c ****         if( pxMutexHolder != NULL )
4065:bsp/middlewares/freertos/source/tasks.c ****         {
4066:bsp/middlewares/freertos/source/tasks.c ****             /* If the holder of the mutex has a priority below the priority of
4067:bsp/middlewares/freertos/source/tasks.c ****              * the task attempting to obtain the mutex then it will temporarily
4068:bsp/middlewares/freertos/source/tasks.c ****              * inherit the priority of the task attempting to obtain the mutex. */
4069:bsp/middlewares/freertos/source/tasks.c ****             if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4070:bsp/middlewares/freertos/source/tasks.c ****             {
4071:bsp/middlewares/freertos/source/tasks.c ****                 /* Adjust the mutex holder state to account for its new
4072:bsp/middlewares/freertos/source/tasks.c ****                  * priority.  Only reset the event list item value if the value is
4073:bsp/middlewares/freertos/source/tasks.c ****                  * not being used for anything else. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 92


4074:bsp/middlewares/freertos/source/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_
4075:bsp/middlewares/freertos/source/tasks.c ****                 {
4076:bsp/middlewares/freertos/source/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) 
4077:bsp/middlewares/freertos/source/tasks.c ****                 }
4078:bsp/middlewares/freertos/source/tasks.c ****                 else
4079:bsp/middlewares/freertos/source/tasks.c ****                 {
4080:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4081:bsp/middlewares/freertos/source/tasks.c ****                 }
4082:bsp/middlewares/freertos/source/tasks.c **** 
4083:bsp/middlewares/freertos/source/tasks.c ****                 /* If the task being modified is in the ready state it will need
4084:bsp/middlewares/freertos/source/tasks.c ****                  * to be moved into a new list. */
4085:bsp/middlewares/freertos/source/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] )
4086:bsp/middlewares/freertos/source/tasks.c ****                 {
4087:bsp/middlewares/freertos/source/tasks.c ****                     if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 
4088:bsp/middlewares/freertos/source/tasks.c ****                     {
4089:bsp/middlewares/freertos/source/tasks.c ****                         /* It is known that the task is in its ready list so
4090:bsp/middlewares/freertos/source/tasks.c ****                          * there is no need to check again and the port level
4091:bsp/middlewares/freertos/source/tasks.c ****                          * reset macro can be called directly. */
4092:bsp/middlewares/freertos/source/tasks.c ****                         portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority 
4093:bsp/middlewares/freertos/source/tasks.c ****                     }
4094:bsp/middlewares/freertos/source/tasks.c ****                     else
4095:bsp/middlewares/freertos/source/tasks.c ****                     {
4096:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4097:bsp/middlewares/freertos/source/tasks.c ****                     }
4098:bsp/middlewares/freertos/source/tasks.c **** 
4099:bsp/middlewares/freertos/source/tasks.c ****                     /* Inherit the priority before being moved into the new list. */
4100:bsp/middlewares/freertos/source/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4101:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
4102:bsp/middlewares/freertos/source/tasks.c ****                 }
4103:bsp/middlewares/freertos/source/tasks.c ****                 else
4104:bsp/middlewares/freertos/source/tasks.c ****                 {
4105:bsp/middlewares/freertos/source/tasks.c ****                     /* Just inherit the priority. */
4106:bsp/middlewares/freertos/source/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4107:bsp/middlewares/freertos/source/tasks.c ****                 }
4108:bsp/middlewares/freertos/source/tasks.c **** 
4109:bsp/middlewares/freertos/source/tasks.c ****                 traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4110:bsp/middlewares/freertos/source/tasks.c **** 
4111:bsp/middlewares/freertos/source/tasks.c ****                 /* Inheritance occurred. */
4112:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdTRUE;
4113:bsp/middlewares/freertos/source/tasks.c ****             }
4114:bsp/middlewares/freertos/source/tasks.c ****             else
4115:bsp/middlewares/freertos/source/tasks.c ****             {
4116:bsp/middlewares/freertos/source/tasks.c ****                 if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4117:bsp/middlewares/freertos/source/tasks.c ****                 {
4118:bsp/middlewares/freertos/source/tasks.c ****                     /* The base priority of the mutex holder is lower than the
4119:bsp/middlewares/freertos/source/tasks.c ****                      * priority of the task attempting to take the mutex, but the
4120:bsp/middlewares/freertos/source/tasks.c ****                      * current priority of the mutex holder is not lower than the
4121:bsp/middlewares/freertos/source/tasks.c ****                      * priority of the task attempting to take the mutex.
4122:bsp/middlewares/freertos/source/tasks.c ****                      * Therefore the mutex holder must have already inherited a
4123:bsp/middlewares/freertos/source/tasks.c ****                      * priority, but inheritance would have occurred if that had
4124:bsp/middlewares/freertos/source/tasks.c ****                      * not been the case. */
4125:bsp/middlewares/freertos/source/tasks.c ****                     xReturn = pdTRUE;
4126:bsp/middlewares/freertos/source/tasks.c ****                 }
4127:bsp/middlewares/freertos/source/tasks.c ****                 else
4128:bsp/middlewares/freertos/source/tasks.c ****                 {
4129:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4130:bsp/middlewares/freertos/source/tasks.c ****                 }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 93


4131:bsp/middlewares/freertos/source/tasks.c ****             }
4132:bsp/middlewares/freertos/source/tasks.c ****         }
4133:bsp/middlewares/freertos/source/tasks.c ****         else
4134:bsp/middlewares/freertos/source/tasks.c ****         {
4135:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4136:bsp/middlewares/freertos/source/tasks.c ****         }
4137:bsp/middlewares/freertos/source/tasks.c **** 
4138:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
4139:bsp/middlewares/freertos/source/tasks.c ****     }
4140:bsp/middlewares/freertos/source/tasks.c **** 
4141:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_MUTEXES */
4142:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4143:bsp/middlewares/freertos/source/tasks.c **** 
4144:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4145:bsp/middlewares/freertos/source/tasks.c **** 
4146:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4147:bsp/middlewares/freertos/source/tasks.c ****     {
4148:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4149:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = pdFALSE;
4150:bsp/middlewares/freertos/source/tasks.c **** 
4151:bsp/middlewares/freertos/source/tasks.c ****         if( pxMutexHolder != NULL )
4152:bsp/middlewares/freertos/source/tasks.c ****         {
4153:bsp/middlewares/freertos/source/tasks.c ****             /* A task can only have an inherited priority if it holds the mutex.
4154:bsp/middlewares/freertos/source/tasks.c ****              * If the mutex is held by a task then it cannot be given from an
4155:bsp/middlewares/freertos/source/tasks.c ****              * interrupt, and if a mutex is given by the holding task then it must
4156:bsp/middlewares/freertos/source/tasks.c ****              * be the running state task. */
4157:bsp/middlewares/freertos/source/tasks.c ****             configASSERT( pxTCB == pxCurrentTCB );
4158:bsp/middlewares/freertos/source/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4159:bsp/middlewares/freertos/source/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
4160:bsp/middlewares/freertos/source/tasks.c **** 
4161:bsp/middlewares/freertos/source/tasks.c ****             /* Has the holder of the mutex inherited the priority of another
4162:bsp/middlewares/freertos/source/tasks.c ****              * task? */
4163:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4164:bsp/middlewares/freertos/source/tasks.c ****             {
4165:bsp/middlewares/freertos/source/tasks.c ****                 /* Only disinherit if no other mutexes are held. */
4166:bsp/middlewares/freertos/source/tasks.c ****                 if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4167:bsp/middlewares/freertos/source/tasks.c ****                 {
4168:bsp/middlewares/freertos/source/tasks.c ****                     /* A task can only have an inherited priority if it holds
4169:bsp/middlewares/freertos/source/tasks.c ****                      * the mutex.  If the mutex is held by a task then it cannot be
4170:bsp/middlewares/freertos/source/tasks.c ****                      * given from an interrupt, and if a mutex is given by the
4171:bsp/middlewares/freertos/source/tasks.c ****                      * holding task then it must be the running state task.  Remove
4172:bsp/middlewares/freertos/source/tasks.c ****                      * the holding task from the ready list. */
4173:bsp/middlewares/freertos/source/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4174:bsp/middlewares/freertos/source/tasks.c ****                     {
4175:bsp/middlewares/freertos/source/tasks.c ****                         portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4176:bsp/middlewares/freertos/source/tasks.c ****                     }
4177:bsp/middlewares/freertos/source/tasks.c ****                     else
4178:bsp/middlewares/freertos/source/tasks.c ****                     {
4179:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4180:bsp/middlewares/freertos/source/tasks.c ****                     }
4181:bsp/middlewares/freertos/source/tasks.c **** 
4182:bsp/middlewares/freertos/source/tasks.c ****                     /* Disinherit the priority before adding the task into the
4183:bsp/middlewares/freertos/source/tasks.c ****                      * new  ready list. */
4184:bsp/middlewares/freertos/source/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4185:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
4186:bsp/middlewares/freertos/source/tasks.c **** 
4187:bsp/middlewares/freertos/source/tasks.c ****                     /* Reset the event list item value.  It cannot be in use for
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 94


4188:bsp/middlewares/freertos/source/tasks.c ****                      * any other purpose if this task is running, and it must be
4189:bsp/middlewares/freertos/source/tasks.c ****                      * running to give back the mutex. */
4190:bsp/middlewares/freertos/source/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_P
4191:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
4192:bsp/middlewares/freertos/source/tasks.c **** 
4193:bsp/middlewares/freertos/source/tasks.c ****                     /* Return true to indicate that a context switch is required.
4194:bsp/middlewares/freertos/source/tasks.c ****                      * This is only actually required in the corner case whereby
4195:bsp/middlewares/freertos/source/tasks.c ****                      * multiple mutexes were held and the mutexes were given back
4196:bsp/middlewares/freertos/source/tasks.c ****                      * in an order different to that in which they were taken.
4197:bsp/middlewares/freertos/source/tasks.c ****                      * If a context switch did not occur when the first mutex was
4198:bsp/middlewares/freertos/source/tasks.c ****                      * returned, even if a task was waiting on it, then a context
4199:bsp/middlewares/freertos/source/tasks.c ****                      * switch should occur when the last mutex is returned whether
4200:bsp/middlewares/freertos/source/tasks.c ****                      * a task is waiting on it or not. */
4201:bsp/middlewares/freertos/source/tasks.c ****                     xReturn = pdTRUE;
4202:bsp/middlewares/freertos/source/tasks.c ****                 }
4203:bsp/middlewares/freertos/source/tasks.c ****                 else
4204:bsp/middlewares/freertos/source/tasks.c ****                 {
4205:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4206:bsp/middlewares/freertos/source/tasks.c ****                 }
4207:bsp/middlewares/freertos/source/tasks.c ****             }
4208:bsp/middlewares/freertos/source/tasks.c ****             else
4209:bsp/middlewares/freertos/source/tasks.c ****             {
4210:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4211:bsp/middlewares/freertos/source/tasks.c ****             }
4212:bsp/middlewares/freertos/source/tasks.c ****         }
4213:bsp/middlewares/freertos/source/tasks.c ****         else
4214:bsp/middlewares/freertos/source/tasks.c ****         {
4215:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4216:bsp/middlewares/freertos/source/tasks.c ****         }
4217:bsp/middlewares/freertos/source/tasks.c **** 
4218:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
4219:bsp/middlewares/freertos/source/tasks.c ****     }
4220:bsp/middlewares/freertos/source/tasks.c **** 
4221:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_MUTEXES */
4222:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4223:bsp/middlewares/freertos/source/tasks.c **** 
4224:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4225:bsp/middlewares/freertos/source/tasks.c **** 
4226:bsp/middlewares/freertos/source/tasks.c ****     void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
4227:bsp/middlewares/freertos/source/tasks.c ****                                               UBaseType_t uxHighestPriorityWaitingTask )
4228:bsp/middlewares/freertos/source/tasks.c ****     {
4229:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4230:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4231:bsp/middlewares/freertos/source/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4232:bsp/middlewares/freertos/source/tasks.c **** 
4233:bsp/middlewares/freertos/source/tasks.c ****         if( pxMutexHolder != NULL )
4234:bsp/middlewares/freertos/source/tasks.c ****         {
4235:bsp/middlewares/freertos/source/tasks.c ****             /* If pxMutexHolder is not NULL then the holder must hold at least
4236:bsp/middlewares/freertos/source/tasks.c ****              * one mutex. */
4237:bsp/middlewares/freertos/source/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4238:bsp/middlewares/freertos/source/tasks.c **** 
4239:bsp/middlewares/freertos/source/tasks.c ****             /* Determine the priority to which the priority of the task that
4240:bsp/middlewares/freertos/source/tasks.c ****              * holds the mutex should be set.  This will be the greater of the
4241:bsp/middlewares/freertos/source/tasks.c ****              * holding task's base priority and the priority of the highest
4242:bsp/middlewares/freertos/source/tasks.c ****              * priority task that is waiting to obtain the mutex. */
4243:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4244:bsp/middlewares/freertos/source/tasks.c ****             {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 95


4245:bsp/middlewares/freertos/source/tasks.c ****                 uxPriorityToUse = uxHighestPriorityWaitingTask;
4246:bsp/middlewares/freertos/source/tasks.c ****             }
4247:bsp/middlewares/freertos/source/tasks.c ****             else
4248:bsp/middlewares/freertos/source/tasks.c ****             {
4249:bsp/middlewares/freertos/source/tasks.c ****                 uxPriorityToUse = pxTCB->uxBasePriority;
4250:bsp/middlewares/freertos/source/tasks.c ****             }
4251:bsp/middlewares/freertos/source/tasks.c **** 
4252:bsp/middlewares/freertos/source/tasks.c ****             /* Does the priority need to change? */
4253:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB->uxPriority != uxPriorityToUse )
4254:bsp/middlewares/freertos/source/tasks.c ****             {
4255:bsp/middlewares/freertos/source/tasks.c ****                 /* Only disinherit if no other mutexes are held.  This is a
4256:bsp/middlewares/freertos/source/tasks.c ****                  * simplification in the priority inheritance implementation.  If
4257:bsp/middlewares/freertos/source/tasks.c ****                  * the task that holds the mutex is also holding other mutexes then
4258:bsp/middlewares/freertos/source/tasks.c ****                  * the other mutexes may have caused the priority inheritance. */
4259:bsp/middlewares/freertos/source/tasks.c ****                 if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4260:bsp/middlewares/freertos/source/tasks.c ****                 {
4261:bsp/middlewares/freertos/source/tasks.c ****                     /* If a task has timed out because it already holds the
4262:bsp/middlewares/freertos/source/tasks.c ****                      * mutex it was trying to obtain then it cannot of inherited
4263:bsp/middlewares/freertos/source/tasks.c ****                      * its own priority. */
4264:bsp/middlewares/freertos/source/tasks.c ****                     configASSERT( pxTCB != pxCurrentTCB );
4265:bsp/middlewares/freertos/source/tasks.c **** 
4266:bsp/middlewares/freertos/source/tasks.c ****                     /* Disinherit the priority, remembering the previous
4267:bsp/middlewares/freertos/source/tasks.c ****                      * priority to facilitate determining the subject task's
4268:bsp/middlewares/freertos/source/tasks.c ****                      * state. */
4269:bsp/middlewares/freertos/source/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, uxPriorityToUse );
4270:bsp/middlewares/freertos/source/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
4271:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
4272:bsp/middlewares/freertos/source/tasks.c **** 
4273:bsp/middlewares/freertos/source/tasks.c ****                     /* Only reset the event list item value if the value is not
4274:bsp/middlewares/freertos/source/tasks.c ****                      * being used for anything else. */
4275:bsp/middlewares/freertos/source/tasks.c ****                     if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_IT
4276:bsp/middlewares/freertos/source/tasks.c ****                     {
4277:bsp/middlewares/freertos/source/tasks.c ****                         listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configM
4278:bsp/middlewares/freertos/source/tasks.c ****                     }
4279:bsp/middlewares/freertos/source/tasks.c ****                     else
4280:bsp/middlewares/freertos/source/tasks.c ****                     {
4281:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4282:bsp/middlewares/freertos/source/tasks.c ****                     }
4283:bsp/middlewares/freertos/source/tasks.c **** 
4284:bsp/middlewares/freertos/source/tasks.c ****                     /* If the running task is not the task that holds the mutex
4285:bsp/middlewares/freertos/source/tasks.c ****                      * then the task that holds the mutex could be in either the
4286:bsp/middlewares/freertos/source/tasks.c ****                      * Ready, Blocked or Suspended states.  Only remove the task
4287:bsp/middlewares/freertos/source/tasks.c ****                      * from its current state list if it is in the Ready state as
4288:bsp/middlewares/freertos/source/tasks.c ****                      * the task's priority is going to change and there is one
4289:bsp/middlewares/freertos/source/tasks.c ****                      * Ready list per priority. */
4290:bsp/middlewares/freertos/source/tasks.c ****                     if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &
4291:bsp/middlewares/freertos/source/tasks.c ****                     {
4292:bsp/middlewares/freertos/source/tasks.c ****                         if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4293:bsp/middlewares/freertos/source/tasks.c ****                         {
4294:bsp/middlewares/freertos/source/tasks.c ****                             /* It is known that the task is in its ready list so
4295:bsp/middlewares/freertos/source/tasks.c ****                              * there is no need to check again and the port level
4296:bsp/middlewares/freertos/source/tasks.c ****                              * reset macro can be called directly. */
4297:bsp/middlewares/freertos/source/tasks.c ****                             portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4298:bsp/middlewares/freertos/source/tasks.c ****                         }
4299:bsp/middlewares/freertos/source/tasks.c ****                         else
4300:bsp/middlewares/freertos/source/tasks.c ****                         {
4301:bsp/middlewares/freertos/source/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 96


4302:bsp/middlewares/freertos/source/tasks.c ****                         }
4303:bsp/middlewares/freertos/source/tasks.c **** 
4304:bsp/middlewares/freertos/source/tasks.c ****                         prvAddTaskToReadyList( pxTCB );
4305:bsp/middlewares/freertos/source/tasks.c ****                     }
4306:bsp/middlewares/freertos/source/tasks.c ****                     else
4307:bsp/middlewares/freertos/source/tasks.c ****                     {
4308:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4309:bsp/middlewares/freertos/source/tasks.c ****                     }
4310:bsp/middlewares/freertos/source/tasks.c ****                 }
4311:bsp/middlewares/freertos/source/tasks.c ****                 else
4312:bsp/middlewares/freertos/source/tasks.c ****                 {
4313:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4314:bsp/middlewares/freertos/source/tasks.c ****                 }
4315:bsp/middlewares/freertos/source/tasks.c ****             }
4316:bsp/middlewares/freertos/source/tasks.c ****             else
4317:bsp/middlewares/freertos/source/tasks.c ****             {
4318:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4319:bsp/middlewares/freertos/source/tasks.c ****             }
4320:bsp/middlewares/freertos/source/tasks.c ****         }
4321:bsp/middlewares/freertos/source/tasks.c ****         else
4322:bsp/middlewares/freertos/source/tasks.c ****         {
4323:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4324:bsp/middlewares/freertos/source/tasks.c ****         }
4325:bsp/middlewares/freertos/source/tasks.c ****     }
4326:bsp/middlewares/freertos/source/tasks.c **** 
4327:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_MUTEXES */
4328:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4329:bsp/middlewares/freertos/source/tasks.c **** 
4330:bsp/middlewares/freertos/source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4331:bsp/middlewares/freertos/source/tasks.c **** 
4332:bsp/middlewares/freertos/source/tasks.c ****     void vTaskEnterCritical( void )
4333:bsp/middlewares/freertos/source/tasks.c ****     {
4334:bsp/middlewares/freertos/source/tasks.c ****         portDISABLE_INTERRUPTS();
4335:bsp/middlewares/freertos/source/tasks.c **** 
4336:bsp/middlewares/freertos/source/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4337:bsp/middlewares/freertos/source/tasks.c ****         {
4338:bsp/middlewares/freertos/source/tasks.c ****             ( pxCurrentTCB->uxCriticalNesting )++;
4339:bsp/middlewares/freertos/source/tasks.c **** 
4340:bsp/middlewares/freertos/source/tasks.c ****             /* This is not the interrupt safe version of the enter critical
4341:bsp/middlewares/freertos/source/tasks.c ****              * function so  assert() if it is being called from an interrupt
4342:bsp/middlewares/freertos/source/tasks.c ****              * context.  Only API functions that end in "FromISR" can be used in an
4343:bsp/middlewares/freertos/source/tasks.c ****              * interrupt.  Only assert if the critical nesting count is 1 to
4344:bsp/middlewares/freertos/source/tasks.c ****              * protect against recursive calls if the assert function also uses a
4345:bsp/middlewares/freertos/source/tasks.c ****              * critical section. */
4346:bsp/middlewares/freertos/source/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting == 1 )
4347:bsp/middlewares/freertos/source/tasks.c ****             {
4348:bsp/middlewares/freertos/source/tasks.c ****                 portASSERT_IF_IN_ISR();
4349:bsp/middlewares/freertos/source/tasks.c ****             }
4350:bsp/middlewares/freertos/source/tasks.c ****         }
4351:bsp/middlewares/freertos/source/tasks.c ****         else
4352:bsp/middlewares/freertos/source/tasks.c ****         {
4353:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4354:bsp/middlewares/freertos/source/tasks.c ****         }
4355:bsp/middlewares/freertos/source/tasks.c ****     }
4356:bsp/middlewares/freertos/source/tasks.c **** 
4357:bsp/middlewares/freertos/source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4358:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 97


4359:bsp/middlewares/freertos/source/tasks.c **** 
4360:bsp/middlewares/freertos/source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4361:bsp/middlewares/freertos/source/tasks.c **** 
4362:bsp/middlewares/freertos/source/tasks.c ****     void vTaskExitCritical( void )
4363:bsp/middlewares/freertos/source/tasks.c ****     {
4364:bsp/middlewares/freertos/source/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4365:bsp/middlewares/freertos/source/tasks.c ****         {
4366:bsp/middlewares/freertos/source/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting > 0U )
4367:bsp/middlewares/freertos/source/tasks.c ****             {
4368:bsp/middlewares/freertos/source/tasks.c ****                 ( pxCurrentTCB->uxCriticalNesting )--;
4369:bsp/middlewares/freertos/source/tasks.c **** 
4370:bsp/middlewares/freertos/source/tasks.c ****                 if( pxCurrentTCB->uxCriticalNesting == 0U )
4371:bsp/middlewares/freertos/source/tasks.c ****                 {
4372:bsp/middlewares/freertos/source/tasks.c ****                     portENABLE_INTERRUPTS();
4373:bsp/middlewares/freertos/source/tasks.c ****                 }
4374:bsp/middlewares/freertos/source/tasks.c ****                 else
4375:bsp/middlewares/freertos/source/tasks.c ****                 {
4376:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4377:bsp/middlewares/freertos/source/tasks.c ****                 }
4378:bsp/middlewares/freertos/source/tasks.c ****             }
4379:bsp/middlewares/freertos/source/tasks.c ****             else
4380:bsp/middlewares/freertos/source/tasks.c ****             {
4381:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4382:bsp/middlewares/freertos/source/tasks.c ****             }
4383:bsp/middlewares/freertos/source/tasks.c ****         }
4384:bsp/middlewares/freertos/source/tasks.c ****         else
4385:bsp/middlewares/freertos/source/tasks.c ****         {
4386:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4387:bsp/middlewares/freertos/source/tasks.c ****         }
4388:bsp/middlewares/freertos/source/tasks.c ****     }
4389:bsp/middlewares/freertos/source/tasks.c **** 
4390:bsp/middlewares/freertos/source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4391:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4392:bsp/middlewares/freertos/source/tasks.c **** 
4393:bsp/middlewares/freertos/source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4394:bsp/middlewares/freertos/source/tasks.c **** 
4395:bsp/middlewares/freertos/source/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
4396:bsp/middlewares/freertos/source/tasks.c ****                                         const char * pcTaskName )
4397:bsp/middlewares/freertos/source/tasks.c ****     {
4398:bsp/middlewares/freertos/source/tasks.c ****         size_t x;
4399:bsp/middlewares/freertos/source/tasks.c **** 
4400:bsp/middlewares/freertos/source/tasks.c ****         /* Start by copying the entire string. */
4401:bsp/middlewares/freertos/source/tasks.c ****         strcpy( pcBuffer, pcTaskName );
4402:bsp/middlewares/freertos/source/tasks.c **** 
4403:bsp/middlewares/freertos/source/tasks.c ****         /* Pad the end of the string with spaces to ensure columns line up when
4404:bsp/middlewares/freertos/source/tasks.c ****          * printed out. */
4405:bsp/middlewares/freertos/source/tasks.c ****         for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4406:bsp/middlewares/freertos/source/tasks.c ****         {
4407:bsp/middlewares/freertos/source/tasks.c ****             pcBuffer[ x ] = ' ';
4408:bsp/middlewares/freertos/source/tasks.c ****         }
4409:bsp/middlewares/freertos/source/tasks.c **** 
4410:bsp/middlewares/freertos/source/tasks.c ****         /* Terminate. */
4411:bsp/middlewares/freertos/source/tasks.c ****         pcBuffer[ x ] = ( char ) 0x00;
4412:bsp/middlewares/freertos/source/tasks.c **** 
4413:bsp/middlewares/freertos/source/tasks.c ****         /* Return the new end of string. */
4414:bsp/middlewares/freertos/source/tasks.c ****         return &( pcBuffer[ x ] );
4415:bsp/middlewares/freertos/source/tasks.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 98


4416:bsp/middlewares/freertos/source/tasks.c **** 
4417:bsp/middlewares/freertos/source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4418:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4419:bsp/middlewares/freertos/source/tasks.c **** 
4420:bsp/middlewares/freertos/source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4421:bsp/middlewares/freertos/source/tasks.c **** 
4422:bsp/middlewares/freertos/source/tasks.c ****     void vTaskList( char * pcWriteBuffer )
4423:bsp/middlewares/freertos/source/tasks.c ****     {
4424:bsp/middlewares/freertos/source/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4425:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxArraySize, x;
4426:bsp/middlewares/freertos/source/tasks.c ****         char cStatus;
4427:bsp/middlewares/freertos/source/tasks.c **** 
4428:bsp/middlewares/freertos/source/tasks.c ****         /*
4429:bsp/middlewares/freertos/source/tasks.c ****          * PLEASE NOTE:
4430:bsp/middlewares/freertos/source/tasks.c ****          *
4431:bsp/middlewares/freertos/source/tasks.c ****          * This function is provided for convenience only, and is used by many
4432:bsp/middlewares/freertos/source/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4433:bsp/middlewares/freertos/source/tasks.c ****          * scheduler.
4434:bsp/middlewares/freertos/source/tasks.c ****          *
4435:bsp/middlewares/freertos/source/tasks.c ****          * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4436:bsp/middlewares/freertos/source/tasks.c ****          * uxTaskGetSystemState() output into a human readable table that
4437:bsp/middlewares/freertos/source/tasks.c ****          * displays task names, states and stack usage.
4438:bsp/middlewares/freertos/source/tasks.c ****          *
4439:bsp/middlewares/freertos/source/tasks.c ****          * vTaskList() has a dependency on the sprintf() C library function that
4440:bsp/middlewares/freertos/source/tasks.c ****          * might bloat the code size, use a lot of stack, and provide different
4441:bsp/middlewares/freertos/source/tasks.c ****          * results on different platforms.  An alternative, tiny, third party,
4442:bsp/middlewares/freertos/source/tasks.c ****          * and limited functionality implementation of sprintf() is provided in
4443:bsp/middlewares/freertos/source/tasks.c ****          * many of the FreeRTOS/Demo sub-directories in a file called
4444:bsp/middlewares/freertos/source/tasks.c ****          * printf-stdarg.c (note printf-stdarg.c does not provide a full
4445:bsp/middlewares/freertos/source/tasks.c ****          * snprintf() implementation!).
4446:bsp/middlewares/freertos/source/tasks.c ****          *
4447:bsp/middlewares/freertos/source/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4448:bsp/middlewares/freertos/source/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4449:bsp/middlewares/freertos/source/tasks.c ****          * through a call to vTaskList().
4450:bsp/middlewares/freertos/source/tasks.c ****          */
4451:bsp/middlewares/freertos/source/tasks.c **** 
4452:bsp/middlewares/freertos/source/tasks.c **** 
4453:bsp/middlewares/freertos/source/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4454:bsp/middlewares/freertos/source/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4455:bsp/middlewares/freertos/source/tasks.c **** 
4456:bsp/middlewares/freertos/source/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4457:bsp/middlewares/freertos/source/tasks.c ****          * function is executing. */
4458:bsp/middlewares/freertos/source/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4459:bsp/middlewares/freertos/source/tasks.c **** 
4460:bsp/middlewares/freertos/source/tasks.c ****         /* Allocate an array index for each task.  NOTE!  if
4461:bsp/middlewares/freertos/source/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4462:bsp/middlewares/freertos/source/tasks.c ****          * equate to NULL. */
4463:bsp/middlewares/freertos/source/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4464:bsp/middlewares/freertos/source/tasks.c **** 
4465:bsp/middlewares/freertos/source/tasks.c ****         if( pxTaskStatusArray != NULL )
4466:bsp/middlewares/freertos/source/tasks.c ****         {
4467:bsp/middlewares/freertos/source/tasks.c ****             /* Generate the (binary) data. */
4468:bsp/middlewares/freertos/source/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4469:bsp/middlewares/freertos/source/tasks.c **** 
4470:bsp/middlewares/freertos/source/tasks.c ****             /* Create a human readable table from the binary data. */
4471:bsp/middlewares/freertos/source/tasks.c ****             for( x = 0; x < uxArraySize; x++ )
4472:bsp/middlewares/freertos/source/tasks.c ****             {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 99


4473:bsp/middlewares/freertos/source/tasks.c ****                 switch( pxTaskStatusArray[ x ].eCurrentState )
4474:bsp/middlewares/freertos/source/tasks.c ****                 {
4475:bsp/middlewares/freertos/source/tasks.c ****                     case eRunning:
4476:bsp/middlewares/freertos/source/tasks.c ****                         cStatus = tskRUNNING_CHAR;
4477:bsp/middlewares/freertos/source/tasks.c ****                         break;
4478:bsp/middlewares/freertos/source/tasks.c **** 
4479:bsp/middlewares/freertos/source/tasks.c ****                     case eReady:
4480:bsp/middlewares/freertos/source/tasks.c ****                         cStatus = tskREADY_CHAR;
4481:bsp/middlewares/freertos/source/tasks.c ****                         break;
4482:bsp/middlewares/freertos/source/tasks.c **** 
4483:bsp/middlewares/freertos/source/tasks.c ****                     case eBlocked:
4484:bsp/middlewares/freertos/source/tasks.c ****                         cStatus = tskBLOCKED_CHAR;
4485:bsp/middlewares/freertos/source/tasks.c ****                         break;
4486:bsp/middlewares/freertos/source/tasks.c **** 
4487:bsp/middlewares/freertos/source/tasks.c ****                     case eSuspended:
4488:bsp/middlewares/freertos/source/tasks.c ****                         cStatus = tskSUSPENDED_CHAR;
4489:bsp/middlewares/freertos/source/tasks.c ****                         break;
4490:bsp/middlewares/freertos/source/tasks.c **** 
4491:bsp/middlewares/freertos/source/tasks.c ****                     case eDeleted:
4492:bsp/middlewares/freertos/source/tasks.c ****                         cStatus = tskDELETED_CHAR;
4493:bsp/middlewares/freertos/source/tasks.c ****                         break;
4494:bsp/middlewares/freertos/source/tasks.c **** 
4495:bsp/middlewares/freertos/source/tasks.c ****                     case eInvalid: /* Fall through. */
4496:bsp/middlewares/freertos/source/tasks.c ****                     default:       /* Should not get here, but it is included
4497:bsp/middlewares/freertos/source/tasks.c ****                                     * to prevent static checking errors. */
4498:bsp/middlewares/freertos/source/tasks.c ****                         cStatus = ( char ) 0x00;
4499:bsp/middlewares/freertos/source/tasks.c ****                         break;
4500:bsp/middlewares/freertos/source/tasks.c ****                 }
4501:bsp/middlewares/freertos/source/tasks.c **** 
4502:bsp/middlewares/freertos/source/tasks.c ****                 /* Write the task name to the string, padding with spaces so it
4503:bsp/middlewares/freertos/source/tasks.c ****                  * can be printed in tabular form more easily. */
4504:bsp/middlewares/freertos/source/tasks.c ****                 pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskN
4505:bsp/middlewares/freertos/source/tasks.c **** 
4506:bsp/middlewares/freertos/source/tasks.c ****                 /* Write the rest of the string. */
4507:bsp/middlewares/freertos/source/tasks.c ****                 sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskSta
4508:bsp/middlewares/freertos/source/tasks.c ****                 pcWriteBuffer += strlen( pcWriteBuffer );                                          
4509:bsp/middlewares/freertos/source/tasks.c ****             }
4510:bsp/middlewares/freertos/source/tasks.c **** 
4511:bsp/middlewares/freertos/source/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4512:bsp/middlewares/freertos/source/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4513:bsp/middlewares/freertos/source/tasks.c ****             vPortFree( pxTaskStatusArray );
4514:bsp/middlewares/freertos/source/tasks.c ****         }
4515:bsp/middlewares/freertos/source/tasks.c ****         else
4516:bsp/middlewares/freertos/source/tasks.c ****         {
4517:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4518:bsp/middlewares/freertos/source/tasks.c ****         }
4519:bsp/middlewares/freertos/source/tasks.c ****     }
4520:bsp/middlewares/freertos/source/tasks.c **** 
4521:bsp/middlewares/freertos/source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4522:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
4523:bsp/middlewares/freertos/source/tasks.c **** 
4524:bsp/middlewares/freertos/source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4525:bsp/middlewares/freertos/source/tasks.c **** 
4526:bsp/middlewares/freertos/source/tasks.c ****     void vTaskGetRunTimeStats( char * pcWriteBuffer )
4527:bsp/middlewares/freertos/source/tasks.c ****     {
4528:bsp/middlewares/freertos/source/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4529:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxArraySize, x;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 100


4530:bsp/middlewares/freertos/source/tasks.c ****         uint32_t ulTotalTime, ulStatsAsPercentage;
4531:bsp/middlewares/freertos/source/tasks.c **** 
4532:bsp/middlewares/freertos/source/tasks.c ****         #if ( configUSE_TRACE_FACILITY != 1 )
4533:bsp/middlewares/freertos/source/tasks.c ****             {
4534:bsp/middlewares/freertos/source/tasks.c ****                 #error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vT
4535:bsp/middlewares/freertos/source/tasks.c ****             }
4536:bsp/middlewares/freertos/source/tasks.c ****         #endif
4537:bsp/middlewares/freertos/source/tasks.c **** 
4538:bsp/middlewares/freertos/source/tasks.c ****         /*
4539:bsp/middlewares/freertos/source/tasks.c ****          * PLEASE NOTE:
4540:bsp/middlewares/freertos/source/tasks.c ****          *
4541:bsp/middlewares/freertos/source/tasks.c ****          * This function is provided for convenience only, and is used by many
4542:bsp/middlewares/freertos/source/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4543:bsp/middlewares/freertos/source/tasks.c ****          * scheduler.
4544:bsp/middlewares/freertos/source/tasks.c ****          *
4545:bsp/middlewares/freertos/source/tasks.c ****          * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4546:bsp/middlewares/freertos/source/tasks.c ****          * of the uxTaskGetSystemState() output into a human readable table that
4547:bsp/middlewares/freertos/source/tasks.c ****          * displays the amount of time each task has spent in the Running state
4548:bsp/middlewares/freertos/source/tasks.c ****          * in both absolute and percentage terms.
4549:bsp/middlewares/freertos/source/tasks.c ****          *
4550:bsp/middlewares/freertos/source/tasks.c ****          * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4551:bsp/middlewares/freertos/source/tasks.c ****          * function that might bloat the code size, use a lot of stack, and
4552:bsp/middlewares/freertos/source/tasks.c ****          * provide different results on different platforms.  An alternative,
4553:bsp/middlewares/freertos/source/tasks.c ****          * tiny, third party, and limited functionality implementation of
4554:bsp/middlewares/freertos/source/tasks.c ****          * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4555:bsp/middlewares/freertos/source/tasks.c ****          * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4556:bsp/middlewares/freertos/source/tasks.c ****          * a full snprintf() implementation!).
4557:bsp/middlewares/freertos/source/tasks.c ****          *
4558:bsp/middlewares/freertos/source/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4559:bsp/middlewares/freertos/source/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4560:bsp/middlewares/freertos/source/tasks.c ****          * through a call to vTaskGetRunTimeStats().
4561:bsp/middlewares/freertos/source/tasks.c ****          */
4562:bsp/middlewares/freertos/source/tasks.c **** 
4563:bsp/middlewares/freertos/source/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4564:bsp/middlewares/freertos/source/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4565:bsp/middlewares/freertos/source/tasks.c **** 
4566:bsp/middlewares/freertos/source/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4567:bsp/middlewares/freertos/source/tasks.c ****          * function is executing. */
4568:bsp/middlewares/freertos/source/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4569:bsp/middlewares/freertos/source/tasks.c **** 
4570:bsp/middlewares/freertos/source/tasks.c ****         /* Allocate an array index for each task.  NOTE!  If
4571:bsp/middlewares/freertos/source/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4572:bsp/middlewares/freertos/source/tasks.c ****          * equate to NULL. */
4573:bsp/middlewares/freertos/source/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4574:bsp/middlewares/freertos/source/tasks.c **** 
4575:bsp/middlewares/freertos/source/tasks.c ****         if( pxTaskStatusArray != NULL )
4576:bsp/middlewares/freertos/source/tasks.c ****         {
4577:bsp/middlewares/freertos/source/tasks.c ****             /* Generate the (binary) data. */
4578:bsp/middlewares/freertos/source/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4579:bsp/middlewares/freertos/source/tasks.c **** 
4580:bsp/middlewares/freertos/source/tasks.c ****             /* For percentage calculations. */
4581:bsp/middlewares/freertos/source/tasks.c ****             ulTotalTime /= 100UL;
4582:bsp/middlewares/freertos/source/tasks.c **** 
4583:bsp/middlewares/freertos/source/tasks.c ****             /* Avoid divide by zero errors. */
4584:bsp/middlewares/freertos/source/tasks.c ****             if( ulTotalTime > 0UL )
4585:bsp/middlewares/freertos/source/tasks.c ****             {
4586:bsp/middlewares/freertos/source/tasks.c ****                 /* Create a human readable table from the binary data. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 101


4587:bsp/middlewares/freertos/source/tasks.c ****                 for( x = 0; x < uxArraySize; x++ )
4588:bsp/middlewares/freertos/source/tasks.c ****                 {
4589:bsp/middlewares/freertos/source/tasks.c ****                     /* What percentage of the total run time has the task used?
4590:bsp/middlewares/freertos/source/tasks.c ****                      * This will always be rounded down to the nearest integer.
4591:bsp/middlewares/freertos/source/tasks.c ****                      * ulTotalRunTimeDiv100 has already been divided by 100. */
4592:bsp/middlewares/freertos/source/tasks.c ****                     ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4593:bsp/middlewares/freertos/source/tasks.c **** 
4594:bsp/middlewares/freertos/source/tasks.c ****                     /* Write the task name to the string, padding with
4595:bsp/middlewares/freertos/source/tasks.c ****                      * spaces so it can be printed in tabular form more
4596:bsp/middlewares/freertos/source/tasks.c ****                      * easily. */
4597:bsp/middlewares/freertos/source/tasks.c ****                     pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcT
4598:bsp/middlewares/freertos/source/tasks.c **** 
4599:bsp/middlewares/freertos/source/tasks.c ****                     if( ulStatsAsPercentage > 0UL )
4600:bsp/middlewares/freertos/source/tasks.c ****                     {
4601:bsp/middlewares/freertos/source/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4602:bsp/middlewares/freertos/source/tasks.c ****                             {
4603:bsp/middlewares/freertos/source/tasks.c ****                                 sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x 
4604:bsp/middlewares/freertos/source/tasks.c ****                             }
4605:bsp/middlewares/freertos/source/tasks.c ****                         #else
4606:bsp/middlewares/freertos/source/tasks.c ****                             {
4607:bsp/middlewares/freertos/source/tasks.c ****                                 /* sizeof( int ) == sizeof( long ) so a smaller
4608:bsp/middlewares/freertos/source/tasks.c ****                                  * printf() library can be used. */
4609:bsp/middlewares/freertos/source/tasks.c ****                                 sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTask
4610:bsp/middlewares/freertos/source/tasks.c ****                             }
4611:bsp/middlewares/freertos/source/tasks.c ****                         #endif
4612:bsp/middlewares/freertos/source/tasks.c ****                     }
4613:bsp/middlewares/freertos/source/tasks.c ****                     else
4614:bsp/middlewares/freertos/source/tasks.c ****                     {
4615:bsp/middlewares/freertos/source/tasks.c ****                         /* If the percentage is zero here then the task has
4616:bsp/middlewares/freertos/source/tasks.c ****                          * consumed less than 1% of the total run time. */
4617:bsp/middlewares/freertos/source/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4618:bsp/middlewares/freertos/source/tasks.c ****                             {
4619:bsp/middlewares/freertos/source/tasks.c ****                                 sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ]
4620:bsp/middlewares/freertos/source/tasks.c ****                             }
4621:bsp/middlewares/freertos/source/tasks.c ****                         #else
4622:bsp/middlewares/freertos/source/tasks.c ****                             {
4623:bsp/middlewares/freertos/source/tasks.c ****                                 /* sizeof( int ) == sizeof( long ) so a smaller
4624:bsp/middlewares/freertos/source/tasks.c ****                                  * printf() library can be used. */
4625:bsp/middlewares/freertos/source/tasks.c ****                                 sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTask
4626:bsp/middlewares/freertos/source/tasks.c ****                             }
4627:bsp/middlewares/freertos/source/tasks.c ****                         #endif
4628:bsp/middlewares/freertos/source/tasks.c ****                     }
4629:bsp/middlewares/freertos/source/tasks.c **** 
4630:bsp/middlewares/freertos/source/tasks.c ****                     pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok o
4631:bsp/middlewares/freertos/source/tasks.c ****                 }
4632:bsp/middlewares/freertos/source/tasks.c ****             }
4633:bsp/middlewares/freertos/source/tasks.c ****             else
4634:bsp/middlewares/freertos/source/tasks.c ****             {
4635:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4636:bsp/middlewares/freertos/source/tasks.c ****             }
4637:bsp/middlewares/freertos/source/tasks.c **** 
4638:bsp/middlewares/freertos/source/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4639:bsp/middlewares/freertos/source/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4640:bsp/middlewares/freertos/source/tasks.c ****             vPortFree( pxTaskStatusArray );
4641:bsp/middlewares/freertos/source/tasks.c ****         }
4642:bsp/middlewares/freertos/source/tasks.c ****         else
4643:bsp/middlewares/freertos/source/tasks.c ****         {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 102


4644:bsp/middlewares/freertos/source/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4645:bsp/middlewares/freertos/source/tasks.c ****         }
4646:bsp/middlewares/freertos/source/tasks.c ****     }
4647:bsp/middlewares/freertos/source/tasks.c **** 
4648:bsp/middlewares/freertos/source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4649:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4650:bsp/middlewares/freertos/source/tasks.c **** 
4651:bsp/middlewares/freertos/source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4652:bsp/middlewares/freertos/source/tasks.c **** {
4653:bsp/middlewares/freertos/source/tasks.c ****     TickType_t uxReturn;
4654:bsp/middlewares/freertos/source/tasks.c **** 
4655:bsp/middlewares/freertos/source/tasks.c ****     uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4656:bsp/middlewares/freertos/source/tasks.c **** 
4657:bsp/middlewares/freertos/source/tasks.c ****     /* Reset the event list item to its normal value - so it can be used with
4658:bsp/middlewares/freertos/source/tasks.c ****      * queues and semaphores. */
4659:bsp/middlewares/freertos/source/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITI
4660:bsp/middlewares/freertos/source/tasks.c **** 
4661:bsp/middlewares/freertos/source/tasks.c ****     return uxReturn;
4662:bsp/middlewares/freertos/source/tasks.c **** }
4663:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4664:bsp/middlewares/freertos/source/tasks.c **** 
4665:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4666:bsp/middlewares/freertos/source/tasks.c **** 
4667:bsp/middlewares/freertos/source/tasks.c ****     TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4668:bsp/middlewares/freertos/source/tasks.c ****     {
4669:bsp/middlewares/freertos/source/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
4670:bsp/middlewares/freertos/source/tasks.c ****          * then pxCurrentTCB will be NULL. */
4671:bsp/middlewares/freertos/source/tasks.c ****         if( pxCurrentTCB != NULL )
4672:bsp/middlewares/freertos/source/tasks.c ****         {
4673:bsp/middlewares/freertos/source/tasks.c ****             ( pxCurrentTCB->uxMutexesHeld )++;
4674:bsp/middlewares/freertos/source/tasks.c ****         }
4675:bsp/middlewares/freertos/source/tasks.c **** 
4676:bsp/middlewares/freertos/source/tasks.c ****         return pxCurrentTCB;
4677:bsp/middlewares/freertos/source/tasks.c ****     }
4678:bsp/middlewares/freertos/source/tasks.c **** 
4679:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_MUTEXES */
4680:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4681:bsp/middlewares/freertos/source/tasks.c **** 
4682:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4683:bsp/middlewares/freertos/source/tasks.c **** 
4684:bsp/middlewares/freertos/source/tasks.c ****     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
4685:bsp/middlewares/freertos/source/tasks.c ****                                       BaseType_t xClearCountOnExit,
4686:bsp/middlewares/freertos/source/tasks.c ****                                       TickType_t xTicksToWait )
4687:bsp/middlewares/freertos/source/tasks.c ****     {
4688:bsp/middlewares/freertos/source/tasks.c ****         uint32_t ulReturn;
4689:bsp/middlewares/freertos/source/tasks.c **** 
4690:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4691:bsp/middlewares/freertos/source/tasks.c **** 
4692:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
4693:bsp/middlewares/freertos/source/tasks.c ****         {
4694:bsp/middlewares/freertos/source/tasks.c ****             /* Only block if the notification count is not already non-zero. */
4695:bsp/middlewares/freertos/source/tasks.c ****             if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
4696:bsp/middlewares/freertos/source/tasks.c ****             {
4697:bsp/middlewares/freertos/source/tasks.c ****                 /* Mark this task as waiting for a notification. */
4698:bsp/middlewares/freertos/source/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4699:bsp/middlewares/freertos/source/tasks.c **** 
4700:bsp/middlewares/freertos/source/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 103


4701:bsp/middlewares/freertos/source/tasks.c ****                 {
4702:bsp/middlewares/freertos/source/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4703:bsp/middlewares/freertos/source/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
4704:bsp/middlewares/freertos/source/tasks.c **** 
4705:bsp/middlewares/freertos/source/tasks.c ****                     /* All ports are written to allow a yield in a critical
4706:bsp/middlewares/freertos/source/tasks.c ****                      * section (some will yield immediately, others wait until the
4707:bsp/middlewares/freertos/source/tasks.c ****                      * critical section exits) - but it is not something that
4708:bsp/middlewares/freertos/source/tasks.c ****                      * application code should ever do. */
4709:bsp/middlewares/freertos/source/tasks.c ****                     portYIELD_WITHIN_API();
4710:bsp/middlewares/freertos/source/tasks.c ****                 }
4711:bsp/middlewares/freertos/source/tasks.c ****                 else
4712:bsp/middlewares/freertos/source/tasks.c ****                 {
4713:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4714:bsp/middlewares/freertos/source/tasks.c ****                 }
4715:bsp/middlewares/freertos/source/tasks.c ****             }
4716:bsp/middlewares/freertos/source/tasks.c ****             else
4717:bsp/middlewares/freertos/source/tasks.c ****             {
4718:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4719:bsp/middlewares/freertos/source/tasks.c ****             }
4720:bsp/middlewares/freertos/source/tasks.c ****         }
4721:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
4722:bsp/middlewares/freertos/source/tasks.c **** 
4723:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
4724:bsp/middlewares/freertos/source/tasks.c ****         {
4725:bsp/middlewares/freertos/source/tasks.c ****             traceTASK_NOTIFY_TAKE( uxIndexToWait );
4726:bsp/middlewares/freertos/source/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4727:bsp/middlewares/freertos/source/tasks.c **** 
4728:bsp/middlewares/freertos/source/tasks.c ****             if( ulReturn != 0UL )
4729:bsp/middlewares/freertos/source/tasks.c ****             {
4730:bsp/middlewares/freertos/source/tasks.c ****                 if( xClearCountOnExit != pdFALSE )
4731:bsp/middlewares/freertos/source/tasks.c ****                 {
4732:bsp/middlewares/freertos/source/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
4733:bsp/middlewares/freertos/source/tasks.c ****                 }
4734:bsp/middlewares/freertos/source/tasks.c ****                 else
4735:bsp/middlewares/freertos/source/tasks.c ****                 {
4736:bsp/middlewares/freertos/source/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
4737:bsp/middlewares/freertos/source/tasks.c ****                 }
4738:bsp/middlewares/freertos/source/tasks.c ****             }
4739:bsp/middlewares/freertos/source/tasks.c ****             else
4740:bsp/middlewares/freertos/source/tasks.c ****             {
4741:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4742:bsp/middlewares/freertos/source/tasks.c ****             }
4743:bsp/middlewares/freertos/source/tasks.c **** 
4744:bsp/middlewares/freertos/source/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4745:bsp/middlewares/freertos/source/tasks.c ****         }
4746:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
4747:bsp/middlewares/freertos/source/tasks.c **** 
4748:bsp/middlewares/freertos/source/tasks.c ****         return ulReturn;
4749:bsp/middlewares/freertos/source/tasks.c ****     }
4750:bsp/middlewares/freertos/source/tasks.c **** 
4751:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4752:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4753:bsp/middlewares/freertos/source/tasks.c **** 
4754:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4755:bsp/middlewares/freertos/source/tasks.c **** 
4756:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
4757:bsp/middlewares/freertos/source/tasks.c ****                                        uint32_t ulBitsToClearOnEntry,
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 104


4758:bsp/middlewares/freertos/source/tasks.c ****                                        uint32_t ulBitsToClearOnExit,
4759:bsp/middlewares/freertos/source/tasks.c ****                                        uint32_t * pulNotificationValue,
4760:bsp/middlewares/freertos/source/tasks.c ****                                        TickType_t xTicksToWait )
4761:bsp/middlewares/freertos/source/tasks.c ****     {
4762:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
4763:bsp/middlewares/freertos/source/tasks.c **** 
4764:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4765:bsp/middlewares/freertos/source/tasks.c **** 
4766:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
4767:bsp/middlewares/freertos/source/tasks.c ****         {
4768:bsp/middlewares/freertos/source/tasks.c ****             /* Only block if a notification is not already pending. */
4769:bsp/middlewares/freertos/source/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4770:bsp/middlewares/freertos/source/tasks.c ****             {
4771:bsp/middlewares/freertos/source/tasks.c ****                 /* Clear bits in the task's notification value as bits may get
4772:bsp/middlewares/freertos/source/tasks.c ****                  * set  by the notifying task or interrupt.  This can be used to
4773:bsp/middlewares/freertos/source/tasks.c ****                  * clear the value to zero. */
4774:bsp/middlewares/freertos/source/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
4775:bsp/middlewares/freertos/source/tasks.c **** 
4776:bsp/middlewares/freertos/source/tasks.c ****                 /* Mark this task as waiting for a notification. */
4777:bsp/middlewares/freertos/source/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4778:bsp/middlewares/freertos/source/tasks.c **** 
4779:bsp/middlewares/freertos/source/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4780:bsp/middlewares/freertos/source/tasks.c ****                 {
4781:bsp/middlewares/freertos/source/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4782:bsp/middlewares/freertos/source/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
4783:bsp/middlewares/freertos/source/tasks.c **** 
4784:bsp/middlewares/freertos/source/tasks.c ****                     /* All ports are written to allow a yield in a critical
4785:bsp/middlewares/freertos/source/tasks.c ****                      * section (some will yield immediately, others wait until the
4786:bsp/middlewares/freertos/source/tasks.c ****                      * critical section exits) - but it is not something that
4787:bsp/middlewares/freertos/source/tasks.c ****                      * application code should ever do. */
4788:bsp/middlewares/freertos/source/tasks.c ****                     portYIELD_WITHIN_API();
4789:bsp/middlewares/freertos/source/tasks.c ****                 }
4790:bsp/middlewares/freertos/source/tasks.c ****                 else
4791:bsp/middlewares/freertos/source/tasks.c ****                 {
4792:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4793:bsp/middlewares/freertos/source/tasks.c ****                 }
4794:bsp/middlewares/freertos/source/tasks.c ****             }
4795:bsp/middlewares/freertos/source/tasks.c ****             else
4796:bsp/middlewares/freertos/source/tasks.c ****             {
4797:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4798:bsp/middlewares/freertos/source/tasks.c ****             }
4799:bsp/middlewares/freertos/source/tasks.c ****         }
4800:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
4801:bsp/middlewares/freertos/source/tasks.c **** 
4802:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
4803:bsp/middlewares/freertos/source/tasks.c ****         {
4804:bsp/middlewares/freertos/source/tasks.c ****             traceTASK_NOTIFY_WAIT( uxIndexToWait );
4805:bsp/middlewares/freertos/source/tasks.c **** 
4806:bsp/middlewares/freertos/source/tasks.c ****             if( pulNotificationValue != NULL )
4807:bsp/middlewares/freertos/source/tasks.c ****             {
4808:bsp/middlewares/freertos/source/tasks.c ****                 /* Output the current notification value, which may or may not
4809:bsp/middlewares/freertos/source/tasks.c ****                  * have changed. */
4810:bsp/middlewares/freertos/source/tasks.c ****                 *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4811:bsp/middlewares/freertos/source/tasks.c ****             }
4812:bsp/middlewares/freertos/source/tasks.c **** 
4813:bsp/middlewares/freertos/source/tasks.c ****             /* If ucNotifyValue is set then either the task never entered the
4814:bsp/middlewares/freertos/source/tasks.c ****              * blocked state (because a notification was already pending) or the
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 105


4815:bsp/middlewares/freertos/source/tasks.c ****              * task unblocked because of a notification.  Otherwise the task
4816:bsp/middlewares/freertos/source/tasks.c ****              * unblocked because of a timeout. */
4817:bsp/middlewares/freertos/source/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4818:bsp/middlewares/freertos/source/tasks.c ****             {
4819:bsp/middlewares/freertos/source/tasks.c ****                 /* A notification was not received. */
4820:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdFALSE;
4821:bsp/middlewares/freertos/source/tasks.c ****             }
4822:bsp/middlewares/freertos/source/tasks.c ****             else
4823:bsp/middlewares/freertos/source/tasks.c ****             {
4824:bsp/middlewares/freertos/source/tasks.c ****                 /* A notification was already pending or a notification was
4825:bsp/middlewares/freertos/source/tasks.c ****                  * received while the task was waiting. */
4826:bsp/middlewares/freertos/source/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
4827:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdTRUE;
4828:bsp/middlewares/freertos/source/tasks.c ****             }
4829:bsp/middlewares/freertos/source/tasks.c **** 
4830:bsp/middlewares/freertos/source/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4831:bsp/middlewares/freertos/source/tasks.c ****         }
4832:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
4833:bsp/middlewares/freertos/source/tasks.c **** 
4834:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
4835:bsp/middlewares/freertos/source/tasks.c ****     }
4836:bsp/middlewares/freertos/source/tasks.c **** 
4837:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4838:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4839:bsp/middlewares/freertos/source/tasks.c **** 
4840:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4841:bsp/middlewares/freertos/source/tasks.c **** 
4842:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
4843:bsp/middlewares/freertos/source/tasks.c ****                                    UBaseType_t uxIndexToNotify,
4844:bsp/middlewares/freertos/source/tasks.c ****                                    uint32_t ulValue,
4845:bsp/middlewares/freertos/source/tasks.c ****                                    eNotifyAction eAction,
4846:bsp/middlewares/freertos/source/tasks.c ****                                    uint32_t * pulPreviousNotificationValue )
4847:bsp/middlewares/freertos/source/tasks.c ****     {
4848:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
4849:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = pdPASS;
4850:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
4851:bsp/middlewares/freertos/source/tasks.c **** 
4852:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4853:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
4854:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
4855:bsp/middlewares/freertos/source/tasks.c **** 
4856:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
4857:bsp/middlewares/freertos/source/tasks.c ****         {
4858:bsp/middlewares/freertos/source/tasks.c ****             if( pulPreviousNotificationValue != NULL )
4859:bsp/middlewares/freertos/source/tasks.c ****             {
4860:bsp/middlewares/freertos/source/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
4861:bsp/middlewares/freertos/source/tasks.c ****             }
4862:bsp/middlewares/freertos/source/tasks.c **** 
4863:bsp/middlewares/freertos/source/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
4864:bsp/middlewares/freertos/source/tasks.c **** 
4865:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
4866:bsp/middlewares/freertos/source/tasks.c **** 
4867:bsp/middlewares/freertos/source/tasks.c ****             switch( eAction )
4868:bsp/middlewares/freertos/source/tasks.c ****             {
4869:bsp/middlewares/freertos/source/tasks.c ****                 case eSetBits:
4870:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
4871:bsp/middlewares/freertos/source/tasks.c ****                     break;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 106


4872:bsp/middlewares/freertos/source/tasks.c **** 
4873:bsp/middlewares/freertos/source/tasks.c ****                 case eIncrement:
4874:bsp/middlewares/freertos/source/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
4875:bsp/middlewares/freertos/source/tasks.c ****                     break;
4876:bsp/middlewares/freertos/source/tasks.c **** 
4877:bsp/middlewares/freertos/source/tasks.c ****                 case eSetValueWithOverwrite:
4878:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4879:bsp/middlewares/freertos/source/tasks.c ****                     break;
4880:bsp/middlewares/freertos/source/tasks.c **** 
4881:bsp/middlewares/freertos/source/tasks.c ****                 case eSetValueWithoutOverwrite:
4882:bsp/middlewares/freertos/source/tasks.c **** 
4883:bsp/middlewares/freertos/source/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4884:bsp/middlewares/freertos/source/tasks.c ****                     {
4885:bsp/middlewares/freertos/source/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4886:bsp/middlewares/freertos/source/tasks.c ****                     }
4887:bsp/middlewares/freertos/source/tasks.c ****                     else
4888:bsp/middlewares/freertos/source/tasks.c ****                     {
4889:bsp/middlewares/freertos/source/tasks.c ****                         /* The value could not be written to the task. */
4890:bsp/middlewares/freertos/source/tasks.c ****                         xReturn = pdFAIL;
4891:bsp/middlewares/freertos/source/tasks.c ****                     }
4892:bsp/middlewares/freertos/source/tasks.c **** 
4893:bsp/middlewares/freertos/source/tasks.c ****                     break;
4894:bsp/middlewares/freertos/source/tasks.c **** 
4895:bsp/middlewares/freertos/source/tasks.c ****                 case eNoAction:
4896:bsp/middlewares/freertos/source/tasks.c **** 
4897:bsp/middlewares/freertos/source/tasks.c ****                     /* The task is being notified without its notify value being
4898:bsp/middlewares/freertos/source/tasks.c ****                      * updated. */
4899:bsp/middlewares/freertos/source/tasks.c ****                     break;
4900:bsp/middlewares/freertos/source/tasks.c **** 
4901:bsp/middlewares/freertos/source/tasks.c ****                 default:
4902:bsp/middlewares/freertos/source/tasks.c **** 
4903:bsp/middlewares/freertos/source/tasks.c ****                     /* Should not get here if all enums are handled.
4904:bsp/middlewares/freertos/source/tasks.c ****                      * Artificially force an assert by testing a value the
4905:bsp/middlewares/freertos/source/tasks.c ****                      * compiler can't assume is const. */
4906:bsp/middlewares/freertos/source/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
4907:bsp/middlewares/freertos/source/tasks.c **** 
4908:bsp/middlewares/freertos/source/tasks.c ****                     break;
4909:bsp/middlewares/freertos/source/tasks.c ****             }
4910:bsp/middlewares/freertos/source/tasks.c **** 
4911:bsp/middlewares/freertos/source/tasks.c ****             traceTASK_NOTIFY( uxIndexToNotify );
4912:bsp/middlewares/freertos/source/tasks.c **** 
4913:bsp/middlewares/freertos/source/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
4914:bsp/middlewares/freertos/source/tasks.c ****              * notification then unblock it now. */
4915:bsp/middlewares/freertos/source/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4916:bsp/middlewares/freertos/source/tasks.c ****             {
4917:bsp/middlewares/freertos/source/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4918:bsp/middlewares/freertos/source/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
4919:bsp/middlewares/freertos/source/tasks.c **** 
4920:bsp/middlewares/freertos/source/tasks.c ****                 /* The task should not have been on an event list. */
4921:bsp/middlewares/freertos/source/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4922:bsp/middlewares/freertos/source/tasks.c **** 
4923:bsp/middlewares/freertos/source/tasks.c ****                 #if ( configUSE_TICKLESS_IDLE != 0 )
4924:bsp/middlewares/freertos/source/tasks.c ****                     {
4925:bsp/middlewares/freertos/source/tasks.c ****                         /* If a task is blocked waiting for a notification then
4926:bsp/middlewares/freertos/source/tasks.c ****                          * xNextTaskUnblockTime might be set to the blocked task's time
4927:bsp/middlewares/freertos/source/tasks.c ****                          * out time.  If the task is unblocked for a reason other than
4928:bsp/middlewares/freertos/source/tasks.c ****                          * a timeout xNextTaskUnblockTime is normally left unchanged,
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 107


4929:bsp/middlewares/freertos/source/tasks.c ****                          * because it will automatically get reset to a new value when
4930:bsp/middlewares/freertos/source/tasks.c ****                          * the tick count equals xNextTaskUnblockTime.  However if
4931:bsp/middlewares/freertos/source/tasks.c ****                          * tickless idling is used it might be more important to enter
4932:bsp/middlewares/freertos/source/tasks.c ****                          * sleep mode at the earliest possible time - so reset
4933:bsp/middlewares/freertos/source/tasks.c ****                          * xNextTaskUnblockTime here to ensure it is updated at the
4934:bsp/middlewares/freertos/source/tasks.c ****                          * earliest possible time. */
4935:bsp/middlewares/freertos/source/tasks.c ****                         prvResetNextTaskUnblockTime();
4936:bsp/middlewares/freertos/source/tasks.c ****                     }
4937:bsp/middlewares/freertos/source/tasks.c ****                 #endif
4938:bsp/middlewares/freertos/source/tasks.c **** 
4939:bsp/middlewares/freertos/source/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4940:bsp/middlewares/freertos/source/tasks.c ****                 {
4941:bsp/middlewares/freertos/source/tasks.c ****                     /* The notified task has a priority above the currently
4942:bsp/middlewares/freertos/source/tasks.c ****                      * executing task so a yield is required. */
4943:bsp/middlewares/freertos/source/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
4944:bsp/middlewares/freertos/source/tasks.c ****                 }
4945:bsp/middlewares/freertos/source/tasks.c ****                 else
4946:bsp/middlewares/freertos/source/tasks.c ****                 {
4947:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4948:bsp/middlewares/freertos/source/tasks.c ****                 }
4949:bsp/middlewares/freertos/source/tasks.c ****             }
4950:bsp/middlewares/freertos/source/tasks.c ****             else
4951:bsp/middlewares/freertos/source/tasks.c ****             {
4952:bsp/middlewares/freertos/source/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4953:bsp/middlewares/freertos/source/tasks.c ****             }
4954:bsp/middlewares/freertos/source/tasks.c ****         }
4955:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
4956:bsp/middlewares/freertos/source/tasks.c **** 
4957:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
4958:bsp/middlewares/freertos/source/tasks.c ****     }
4959:bsp/middlewares/freertos/source/tasks.c **** 
4960:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4961:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
4962:bsp/middlewares/freertos/source/tasks.c **** 
4963:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4964:bsp/middlewares/freertos/source/tasks.c **** 
4965:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
4966:bsp/middlewares/freertos/source/tasks.c ****                                           UBaseType_t uxIndexToNotify,
4967:bsp/middlewares/freertos/source/tasks.c ****                                           uint32_t ulValue,
4968:bsp/middlewares/freertos/source/tasks.c ****                                           eNotifyAction eAction,
4969:bsp/middlewares/freertos/source/tasks.c ****                                           uint32_t * pulPreviousNotificationValue,
4970:bsp/middlewares/freertos/source/tasks.c ****                                           BaseType_t * pxHigherPriorityTaskWoken )
4971:bsp/middlewares/freertos/source/tasks.c ****     {
4972:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
4973:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
4974:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = pdPASS;
4975:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
4976:bsp/middlewares/freertos/source/tasks.c **** 
4977:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
4978:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4979:bsp/middlewares/freertos/source/tasks.c **** 
4980:bsp/middlewares/freertos/source/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
4981:bsp/middlewares/freertos/source/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
4982:bsp/middlewares/freertos/source/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
4983:bsp/middlewares/freertos/source/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
4984:bsp/middlewares/freertos/source/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4985:bsp/middlewares/freertos/source/tasks.c ****          * is defined in FreeRTOSConfig.h then
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 108


4986:bsp/middlewares/freertos/source/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4987:bsp/middlewares/freertos/source/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
4988:bsp/middlewares/freertos/source/tasks.c ****          * been assigned a priority above the configured maximum system call
4989:bsp/middlewares/freertos/source/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
4990:bsp/middlewares/freertos/source/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
4991:bsp/middlewares/freertos/source/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
4992:bsp/middlewares/freertos/source/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
4993:bsp/middlewares/freertos/source/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
4994:bsp/middlewares/freertos/source/tasks.c ****          * provided on the following link:
4995:bsp/middlewares/freertos/source/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
4996:bsp/middlewares/freertos/source/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4997:bsp/middlewares/freertos/source/tasks.c **** 
4998:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
4999:bsp/middlewares/freertos/source/tasks.c **** 
5000:bsp/middlewares/freertos/source/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5001:bsp/middlewares/freertos/source/tasks.c ****         {
5002:bsp/middlewares/freertos/source/tasks.c ****             if( pulPreviousNotificationValue != NULL )
5003:bsp/middlewares/freertos/source/tasks.c ****             {
5004:bsp/middlewares/freertos/source/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
5005:bsp/middlewares/freertos/source/tasks.c ****             }
5006:bsp/middlewares/freertos/source/tasks.c **** 
5007:bsp/middlewares/freertos/source/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5008:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5009:bsp/middlewares/freertos/source/tasks.c **** 
5010:bsp/middlewares/freertos/source/tasks.c ****             switch( eAction )
5011:bsp/middlewares/freertos/source/tasks.c ****             {
5012:bsp/middlewares/freertos/source/tasks.c ****                 case eSetBits:
5013:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
5014:bsp/middlewares/freertos/source/tasks.c ****                     break;
5015:bsp/middlewares/freertos/source/tasks.c **** 
5016:bsp/middlewares/freertos/source/tasks.c ****                 case eIncrement:
5017:bsp/middlewares/freertos/source/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5018:bsp/middlewares/freertos/source/tasks.c ****                     break;
5019:bsp/middlewares/freertos/source/tasks.c **** 
5020:bsp/middlewares/freertos/source/tasks.c ****                 case eSetValueWithOverwrite:
5021:bsp/middlewares/freertos/source/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5022:bsp/middlewares/freertos/source/tasks.c ****                     break;
5023:bsp/middlewares/freertos/source/tasks.c **** 
5024:bsp/middlewares/freertos/source/tasks.c ****                 case eSetValueWithoutOverwrite:
5025:bsp/middlewares/freertos/source/tasks.c **** 
5026:bsp/middlewares/freertos/source/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
5027:bsp/middlewares/freertos/source/tasks.c ****                     {
5028:bsp/middlewares/freertos/source/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5029:bsp/middlewares/freertos/source/tasks.c ****                     }
5030:bsp/middlewares/freertos/source/tasks.c ****                     else
5031:bsp/middlewares/freertos/source/tasks.c ****                     {
5032:bsp/middlewares/freertos/source/tasks.c ****                         /* The value could not be written to the task. */
5033:bsp/middlewares/freertos/source/tasks.c ****                         xReturn = pdFAIL;
5034:bsp/middlewares/freertos/source/tasks.c ****                     }
5035:bsp/middlewares/freertos/source/tasks.c **** 
5036:bsp/middlewares/freertos/source/tasks.c ****                     break;
5037:bsp/middlewares/freertos/source/tasks.c **** 
5038:bsp/middlewares/freertos/source/tasks.c ****                 case eNoAction:
5039:bsp/middlewares/freertos/source/tasks.c **** 
5040:bsp/middlewares/freertos/source/tasks.c ****                     /* The task is being notified without its notify value being
5041:bsp/middlewares/freertos/source/tasks.c ****                      * updated. */
5042:bsp/middlewares/freertos/source/tasks.c ****                     break;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 109


5043:bsp/middlewares/freertos/source/tasks.c **** 
5044:bsp/middlewares/freertos/source/tasks.c ****                 default:
5045:bsp/middlewares/freertos/source/tasks.c **** 
5046:bsp/middlewares/freertos/source/tasks.c ****                     /* Should not get here if all enums are handled.
5047:bsp/middlewares/freertos/source/tasks.c ****                      * Artificially force an assert by testing a value the
5048:bsp/middlewares/freertos/source/tasks.c ****                      * compiler can't assume is const. */
5049:bsp/middlewares/freertos/source/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
5050:bsp/middlewares/freertos/source/tasks.c ****                     break;
5051:bsp/middlewares/freertos/source/tasks.c ****             }
5052:bsp/middlewares/freertos/source/tasks.c **** 
5053:bsp/middlewares/freertos/source/tasks.c ****             traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );
5054:bsp/middlewares/freertos/source/tasks.c **** 
5055:bsp/middlewares/freertos/source/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5056:bsp/middlewares/freertos/source/tasks.c ****              * notification then unblock it now. */
5057:bsp/middlewares/freertos/source/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5058:bsp/middlewares/freertos/source/tasks.c ****             {
5059:bsp/middlewares/freertos/source/tasks.c ****                 /* The task should not have been on an event list. */
5060:bsp/middlewares/freertos/source/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5061:bsp/middlewares/freertos/source/tasks.c **** 
5062:bsp/middlewares/freertos/source/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5063:bsp/middlewares/freertos/source/tasks.c ****                 {
5064:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5065:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5066:bsp/middlewares/freertos/source/tasks.c ****                 }
5067:bsp/middlewares/freertos/source/tasks.c ****                 else
5068:bsp/middlewares/freertos/source/tasks.c ****                 {
5069:bsp/middlewares/freertos/source/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5070:bsp/middlewares/freertos/source/tasks.c ****                      * this task pending until the scheduler is resumed. */
5071:bsp/middlewares/freertos/source/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5072:bsp/middlewares/freertos/source/tasks.c ****                 }
5073:bsp/middlewares/freertos/source/tasks.c **** 
5074:bsp/middlewares/freertos/source/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5075:bsp/middlewares/freertos/source/tasks.c ****                 {
5076:bsp/middlewares/freertos/source/tasks.c ****                     /* The notified task has a priority above the currently
5077:bsp/middlewares/freertos/source/tasks.c ****                      * executing task so a yield is required. */
5078:bsp/middlewares/freertos/source/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5079:bsp/middlewares/freertos/source/tasks.c ****                     {
5080:bsp/middlewares/freertos/source/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5081:bsp/middlewares/freertos/source/tasks.c ****                     }
5082:bsp/middlewares/freertos/source/tasks.c **** 
5083:bsp/middlewares/freertos/source/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5084:bsp/middlewares/freertos/source/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter to an ISR
5085:bsp/middlewares/freertos/source/tasks.c ****                      * safe FreeRTOS function. */
5086:bsp/middlewares/freertos/source/tasks.c ****                     xYieldPending = pdTRUE;
5087:bsp/middlewares/freertos/source/tasks.c ****                 }
5088:bsp/middlewares/freertos/source/tasks.c ****                 else
5089:bsp/middlewares/freertos/source/tasks.c ****                 {
5090:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5091:bsp/middlewares/freertos/source/tasks.c ****                 }
5092:bsp/middlewares/freertos/source/tasks.c ****             }
5093:bsp/middlewares/freertos/source/tasks.c ****         }
5094:bsp/middlewares/freertos/source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5095:bsp/middlewares/freertos/source/tasks.c **** 
5096:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
5097:bsp/middlewares/freertos/source/tasks.c ****     }
5098:bsp/middlewares/freertos/source/tasks.c **** 
5099:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 110


5100:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
5101:bsp/middlewares/freertos/source/tasks.c **** 
5102:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5103:bsp/middlewares/freertos/source/tasks.c **** 
5104:bsp/middlewares/freertos/source/tasks.c ****     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
5105:bsp/middlewares/freertos/source/tasks.c ****                                         UBaseType_t uxIndexToNotify,
5106:bsp/middlewares/freertos/source/tasks.c ****                                         BaseType_t * pxHigherPriorityTaskWoken )
5107:bsp/middlewares/freertos/source/tasks.c ****     {
5108:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
5109:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
5110:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
5111:bsp/middlewares/freertos/source/tasks.c **** 
5112:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
5113:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5114:bsp/middlewares/freertos/source/tasks.c **** 
5115:bsp/middlewares/freertos/source/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
5116:bsp/middlewares/freertos/source/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
5117:bsp/middlewares/freertos/source/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
5118:bsp/middlewares/freertos/source/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
5119:bsp/middlewares/freertos/source/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5120:bsp/middlewares/freertos/source/tasks.c ****          * is defined in FreeRTOSConfig.h then
5121:bsp/middlewares/freertos/source/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5122:bsp/middlewares/freertos/source/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
5123:bsp/middlewares/freertos/source/tasks.c ****          * been assigned a priority above the configured maximum system call
5124:bsp/middlewares/freertos/source/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
5125:bsp/middlewares/freertos/source/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
5126:bsp/middlewares/freertos/source/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
5127:bsp/middlewares/freertos/source/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5128:bsp/middlewares/freertos/source/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5129:bsp/middlewares/freertos/source/tasks.c ****          * provided on the following link:
5130:bsp/middlewares/freertos/source/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5131:bsp/middlewares/freertos/source/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5132:bsp/middlewares/freertos/source/tasks.c **** 
5133:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
5134:bsp/middlewares/freertos/source/tasks.c **** 
5135:bsp/middlewares/freertos/source/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5136:bsp/middlewares/freertos/source/tasks.c ****         {
5137:bsp/middlewares/freertos/source/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5138:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5139:bsp/middlewares/freertos/source/tasks.c **** 
5140:bsp/middlewares/freertos/source/tasks.c ****             /* 'Giving' is equivalent to incrementing a count in a counting
5141:bsp/middlewares/freertos/source/tasks.c ****              * semaphore. */
5142:bsp/middlewares/freertos/source/tasks.c ****             ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5143:bsp/middlewares/freertos/source/tasks.c **** 
5144:bsp/middlewares/freertos/source/tasks.c ****             traceTASK_NOTIFY_GIVE_FROM_ISR( uxIndexToNotify );
5145:bsp/middlewares/freertos/source/tasks.c **** 
5146:bsp/middlewares/freertos/source/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5147:bsp/middlewares/freertos/source/tasks.c ****              * notification then unblock it now. */
5148:bsp/middlewares/freertos/source/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5149:bsp/middlewares/freertos/source/tasks.c ****             {
5150:bsp/middlewares/freertos/source/tasks.c ****                 /* The task should not have been on an event list. */
5151:bsp/middlewares/freertos/source/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5152:bsp/middlewares/freertos/source/tasks.c **** 
5153:bsp/middlewares/freertos/source/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5154:bsp/middlewares/freertos/source/tasks.c ****                 {
5155:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5156:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 111


5157:bsp/middlewares/freertos/source/tasks.c ****                 }
5158:bsp/middlewares/freertos/source/tasks.c ****                 else
5159:bsp/middlewares/freertos/source/tasks.c ****                 {
5160:bsp/middlewares/freertos/source/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5161:bsp/middlewares/freertos/source/tasks.c ****                      * this task pending until the scheduler is resumed. */
5162:bsp/middlewares/freertos/source/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5163:bsp/middlewares/freertos/source/tasks.c ****                 }
5164:bsp/middlewares/freertos/source/tasks.c **** 
5165:bsp/middlewares/freertos/source/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5166:bsp/middlewares/freertos/source/tasks.c ****                 {
5167:bsp/middlewares/freertos/source/tasks.c ****                     /* The notified task has a priority above the currently
5168:bsp/middlewares/freertos/source/tasks.c ****                      * executing task so a yield is required. */
5169:bsp/middlewares/freertos/source/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5170:bsp/middlewares/freertos/source/tasks.c ****                     {
5171:bsp/middlewares/freertos/source/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5172:bsp/middlewares/freertos/source/tasks.c ****                     }
5173:bsp/middlewares/freertos/source/tasks.c **** 
5174:bsp/middlewares/freertos/source/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5175:bsp/middlewares/freertos/source/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter in an ISR
5176:bsp/middlewares/freertos/source/tasks.c ****                      * safe FreeRTOS function. */
5177:bsp/middlewares/freertos/source/tasks.c ****                     xYieldPending = pdTRUE;
5178:bsp/middlewares/freertos/source/tasks.c ****                 }
5179:bsp/middlewares/freertos/source/tasks.c ****                 else
5180:bsp/middlewares/freertos/source/tasks.c ****                 {
5181:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5182:bsp/middlewares/freertos/source/tasks.c ****                 }
5183:bsp/middlewares/freertos/source/tasks.c ****             }
5184:bsp/middlewares/freertos/source/tasks.c ****         }
5185:bsp/middlewares/freertos/source/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5186:bsp/middlewares/freertos/source/tasks.c ****     }
5187:bsp/middlewares/freertos/source/tasks.c **** 
5188:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5189:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
5190:bsp/middlewares/freertos/source/tasks.c **** 
5191:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5192:bsp/middlewares/freertos/source/tasks.c **** 
5193:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
5194:bsp/middlewares/freertos/source/tasks.c ****                                              UBaseType_t uxIndexToClear )
5195:bsp/middlewares/freertos/source/tasks.c ****     {
5196:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
5197:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
5198:bsp/middlewares/freertos/source/tasks.c **** 
5199:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5200:bsp/middlewares/freertos/source/tasks.c **** 
5201:bsp/middlewares/freertos/source/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5202:bsp/middlewares/freertos/source/tasks.c ****          * its notification state cleared. */
5203:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5204:bsp/middlewares/freertos/source/tasks.c **** 
5205:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
5206:bsp/middlewares/freertos/source/tasks.c ****         {
5207:bsp/middlewares/freertos/source/tasks.c ****             if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
5208:bsp/middlewares/freertos/source/tasks.c ****             {
5209:bsp/middlewares/freertos/source/tasks.c ****                 pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
5210:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdPASS;
5211:bsp/middlewares/freertos/source/tasks.c ****             }
5212:bsp/middlewares/freertos/source/tasks.c ****             else
5213:bsp/middlewares/freertos/source/tasks.c ****             {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 112


5214:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdFAIL;
5215:bsp/middlewares/freertos/source/tasks.c ****             }
5216:bsp/middlewares/freertos/source/tasks.c ****         }
5217:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
5218:bsp/middlewares/freertos/source/tasks.c **** 
5219:bsp/middlewares/freertos/source/tasks.c ****         return xReturn;
5220:bsp/middlewares/freertos/source/tasks.c ****     }
5221:bsp/middlewares/freertos/source/tasks.c **** 
5222:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5223:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
5224:bsp/middlewares/freertos/source/tasks.c **** 
5225:bsp/middlewares/freertos/source/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5226:bsp/middlewares/freertos/source/tasks.c **** 
5227:bsp/middlewares/freertos/source/tasks.c ****     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
5228:bsp/middlewares/freertos/source/tasks.c ****                                             UBaseType_t uxIndexToClear,
5229:bsp/middlewares/freertos/source/tasks.c ****                                             uint32_t ulBitsToClear )
5230:bsp/middlewares/freertos/source/tasks.c ****     {
5231:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
5232:bsp/middlewares/freertos/source/tasks.c ****         uint32_t ulReturn;
5233:bsp/middlewares/freertos/source/tasks.c **** 
5234:bsp/middlewares/freertos/source/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5235:bsp/middlewares/freertos/source/tasks.c ****          * its notification state cleared. */
5236:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5237:bsp/middlewares/freertos/source/tasks.c **** 
5238:bsp/middlewares/freertos/source/tasks.c ****         taskENTER_CRITICAL();
5239:bsp/middlewares/freertos/source/tasks.c ****         {
5240:bsp/middlewares/freertos/source/tasks.c ****             /* Return the notification as it was before the bits were cleared,
5241:bsp/middlewares/freertos/source/tasks.c ****              * then clear the bit mask. */
5242:bsp/middlewares/freertos/source/tasks.c ****             ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
5243:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
5244:bsp/middlewares/freertos/source/tasks.c ****         }
5245:bsp/middlewares/freertos/source/tasks.c ****         taskEXIT_CRITICAL();
5246:bsp/middlewares/freertos/source/tasks.c **** 
5247:bsp/middlewares/freertos/source/tasks.c ****         return ulReturn;
5248:bsp/middlewares/freertos/source/tasks.c ****     }
5249:bsp/middlewares/freertos/source/tasks.c **** 
5250:bsp/middlewares/freertos/source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5251:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
5252:bsp/middlewares/freertos/source/tasks.c **** 
5253:bsp/middlewares/freertos/source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5254:bsp/middlewares/freertos/source/tasks.c **** 
5255:bsp/middlewares/freertos/source/tasks.c ****     uint32_t ulTaskGetIdleRunTimeCounter( void )
5256:bsp/middlewares/freertos/source/tasks.c ****     {
5257:bsp/middlewares/freertos/source/tasks.c ****         return xIdleTaskHandle->ulRunTimeCounter;
5258:bsp/middlewares/freertos/source/tasks.c ****     }
5259:bsp/middlewares/freertos/source/tasks.c **** 
5260:bsp/middlewares/freertos/source/tasks.c **** #endif
5261:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
5262:bsp/middlewares/freertos/source/tasks.c **** 
5263:bsp/middlewares/freertos/source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
5264:bsp/middlewares/freertos/source/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely )
5265:bsp/middlewares/freertos/source/tasks.c **** {
 757              		.loc 1 5265 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		.loc 1 5265 1 is_stmt 0 view .LVU210
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 113


 762 0000 70B5     		push	{r4, r5, r6, lr}
 763              	.LCFI7:
 764              		.cfi_def_cfa_offset 16
 765              		.cfi_offset 4, -16
 766              		.cfi_offset 5, -12
 767              		.cfi_offset 6, -8
 768              		.cfi_offset 14, -4
 769 0002 0446     		mov	r4, r0
 770 0004 0D46     		mov	r5, r1
5266:bsp/middlewares/freertos/source/tasks.c ****     TickType_t xTimeToWake;
 771              		.loc 1 5266 5 is_stmt 1 view .LVU211
5267:bsp/middlewares/freertos/source/tasks.c ****     const TickType_t xConstTickCount = xTickCount;
 772              		.loc 1 5267 5 view .LVU212
 773              		.loc 1 5267 22 is_stmt 0 view .LVU213
 774 0006 1D4B     		ldr	r3, .L69
 775 0008 1E68     		ldr	r6, [r3]
 776              	.LVL55:
5268:bsp/middlewares/freertos/source/tasks.c **** 
5269:bsp/middlewares/freertos/source/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
5270:bsp/middlewares/freertos/source/tasks.c ****         {
5271:bsp/middlewares/freertos/source/tasks.c ****             /* About to enter a delayed list, so ensure the ucDelayAborted flag is
5272:bsp/middlewares/freertos/source/tasks.c ****              * reset to pdFALSE so it can be detected as having been set to pdTRUE
5273:bsp/middlewares/freertos/source/tasks.c ****              * when the task leaves the Blocked state. */
5274:bsp/middlewares/freertos/source/tasks.c ****             pxCurrentTCB->ucDelayAborted = pdFALSE;
5275:bsp/middlewares/freertos/source/tasks.c ****         }
5276:bsp/middlewares/freertos/source/tasks.c ****     #endif
5277:bsp/middlewares/freertos/source/tasks.c **** 
5278:bsp/middlewares/freertos/source/tasks.c ****     /* Remove the task from the ready list before adding it to the blocked list
5279:bsp/middlewares/freertos/source/tasks.c ****      * as the same list item is used for both lists. */
5280:bsp/middlewares/freertos/source/tasks.c ****     if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 777              		.loc 1 5280 5 is_stmt 1 view .LVU214
 778              		.loc 1 5280 38 is_stmt 0 view .LVU215
 779 000a 1D4B     		ldr	r3, .L69+4
 780 000c 1868     		ldr	r0, [r3]
 781              	.LVL56:
 782              		.loc 1 5280 9 view .LVU216
 783 000e 0430     		adds	r0, r0, #4
 784 0010 FFF7FEFF 		bl	uxListRemove
 785              	.LVL57:
 786              		.loc 1 5280 7 view .LVU217
 787 0014 50B9     		cbnz	r0, .L63
5281:bsp/middlewares/freertos/source/tasks.c ****     {
5282:bsp/middlewares/freertos/source/tasks.c ****         /* The current task must be in a ready list, so there is no need to
5283:bsp/middlewares/freertos/source/tasks.c ****          * check, and the port reset macro can be called directly. */
5284:bsp/middlewares/freertos/source/tasks.c ****         portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCu
 788              		.loc 1 5284 9 is_stmt 1 view .LVU218
 789 0016 1A4B     		ldr	r3, .L69+4
 790 0018 1B68     		ldr	r3, [r3]
 791 001a DA6A     		ldr	r2, [r3, #44]
 792 001c 0123     		movs	r3, #1
 793 001e 03FA02F2 		lsl	r2, r3, r2
 794 0022 1849     		ldr	r1, .L69+8
 795 0024 0B68     		ldr	r3, [r1]
 796 0026 23EA0203 		bic	r3, r3, r2
 797 002a 0B60     		str	r3, [r1]
 798              	.L63:
5285:bsp/middlewares/freertos/source/tasks.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 114


5286:bsp/middlewares/freertos/source/tasks.c ****     else
5287:bsp/middlewares/freertos/source/tasks.c ****     {
5288:bsp/middlewares/freertos/source/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 799              		.loc 1 5288 33 view .LVU219
5289:bsp/middlewares/freertos/source/tasks.c ****     }
5290:bsp/middlewares/freertos/source/tasks.c **** 
5291:bsp/middlewares/freertos/source/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
5292:bsp/middlewares/freertos/source/tasks.c ****         {
5293:bsp/middlewares/freertos/source/tasks.c ****             if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800              		.loc 1 5293 13 view .LVU220
 801              		.loc 1 5293 15 is_stmt 0 view .LVU221
 802 002c B4F1FF3F 		cmp	r4, #-1
 803 0030 0DD0     		beq	.L68
 804              	.L64:
5294:bsp/middlewares/freertos/source/tasks.c ****             {
5295:bsp/middlewares/freertos/source/tasks.c ****                 /* Add the task to the suspended task list instead of a delayed task
5296:bsp/middlewares/freertos/source/tasks.c ****                  * list to ensure it is not woken by a timing event.  It will block
5297:bsp/middlewares/freertos/source/tasks.c ****                  * indefinitely. */
5298:bsp/middlewares/freertos/source/tasks.c ****                 vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5299:bsp/middlewares/freertos/source/tasks.c ****             }
5300:bsp/middlewares/freertos/source/tasks.c ****             else
5301:bsp/middlewares/freertos/source/tasks.c ****             {
5302:bsp/middlewares/freertos/source/tasks.c ****                 /* Calculate the time at which the task should be woken if the event
5303:bsp/middlewares/freertos/source/tasks.c ****                  * does not occur.  This may overflow but this doesn't matter, the
5304:bsp/middlewares/freertos/source/tasks.c ****                  * kernel will manage it correctly. */
5305:bsp/middlewares/freertos/source/tasks.c ****                 xTimeToWake = xConstTickCount + xTicksToWait;
 805              		.loc 1 5305 17 is_stmt 1 view .LVU222
 806              		.loc 1 5305 29 is_stmt 0 view .LVU223
 807 0032 3444     		add	r4, r4, r6
 808              	.LVL58:
5306:bsp/middlewares/freertos/source/tasks.c **** 
5307:bsp/middlewares/freertos/source/tasks.c ****                 /* The list item will be inserted in wake time order. */
5308:bsp/middlewares/freertos/source/tasks.c ****                 listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 809              		.loc 1 5308 17 is_stmt 1 view .LVU224
 810 0034 124B     		ldr	r3, .L69+4
 811 0036 1B68     		ldr	r3, [r3]
 812 0038 5C60     		str	r4, [r3, #4]
5309:bsp/middlewares/freertos/source/tasks.c **** 
5310:bsp/middlewares/freertos/source/tasks.c ****                 if( xTimeToWake < xConstTickCount )
 813              		.loc 1 5310 17 view .LVU225
 814              		.loc 1 5310 19 is_stmt 0 view .LVU226
 815 003a A642     		cmp	r6, r4
 816 003c 10D9     		bls	.L66
5311:bsp/middlewares/freertos/source/tasks.c ****                 {
5312:bsp/middlewares/freertos/source/tasks.c ****                     /* Wake time has overflowed.  Place this item in the overflow
5313:bsp/middlewares/freertos/source/tasks.c ****                      * list. */
5314:bsp/middlewares/freertos/source/tasks.c ****                     vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 817              		.loc 1 5314 21 is_stmt 1 view .LVU227
 818 003e 124B     		ldr	r3, .L69+12
 819 0040 1868     		ldr	r0, [r3]
 820              		.loc 1 5314 76 is_stmt 0 view .LVU228
 821 0042 0F4B     		ldr	r3, .L69+4
 822 0044 1968     		ldr	r1, [r3]
 823              		.loc 1 5314 21 view .LVU229
 824 0046 0431     		adds	r1, r1, #4
 825 0048 FFF7FEFF 		bl	vListInsert
 826              	.LVL59:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 115


 827              	.L62:
5315:bsp/middlewares/freertos/source/tasks.c ****                 }
5316:bsp/middlewares/freertos/source/tasks.c ****                 else
5317:bsp/middlewares/freertos/source/tasks.c ****                 {
5318:bsp/middlewares/freertos/source/tasks.c ****                     /* The wake time has not overflowed, so the current block list
5319:bsp/middlewares/freertos/source/tasks.c ****                      * is used. */
5320:bsp/middlewares/freertos/source/tasks.c ****                     vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5321:bsp/middlewares/freertos/source/tasks.c **** 
5322:bsp/middlewares/freertos/source/tasks.c ****                     /* If the task entering the blocked state was placed at the
5323:bsp/middlewares/freertos/source/tasks.c ****                      * head of the list of blocked tasks then xNextTaskUnblockTime
5324:bsp/middlewares/freertos/source/tasks.c ****                      * needs to be updated too. */
5325:bsp/middlewares/freertos/source/tasks.c ****                     if( xTimeToWake < xNextTaskUnblockTime )
5326:bsp/middlewares/freertos/source/tasks.c ****                     {
5327:bsp/middlewares/freertos/source/tasks.c ****                         xNextTaskUnblockTime = xTimeToWake;
5328:bsp/middlewares/freertos/source/tasks.c ****                     }
5329:bsp/middlewares/freertos/source/tasks.c ****                     else
5330:bsp/middlewares/freertos/source/tasks.c ****                     {
5331:bsp/middlewares/freertos/source/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
5332:bsp/middlewares/freertos/source/tasks.c ****                     }
5333:bsp/middlewares/freertos/source/tasks.c ****                 }
5334:bsp/middlewares/freertos/source/tasks.c ****             }
5335:bsp/middlewares/freertos/source/tasks.c ****         }
5336:bsp/middlewares/freertos/source/tasks.c ****     #else /* INCLUDE_vTaskSuspend */
5337:bsp/middlewares/freertos/source/tasks.c ****         {
5338:bsp/middlewares/freertos/source/tasks.c ****             /* Calculate the time at which the task should be woken if the event
5339:bsp/middlewares/freertos/source/tasks.c ****              * does not occur.  This may overflow but this doesn't matter, the kernel
5340:bsp/middlewares/freertos/source/tasks.c ****              * will manage it correctly. */
5341:bsp/middlewares/freertos/source/tasks.c ****             xTimeToWake = xConstTickCount + xTicksToWait;
5342:bsp/middlewares/freertos/source/tasks.c **** 
5343:bsp/middlewares/freertos/source/tasks.c ****             /* The list item will be inserted in wake time order. */
5344:bsp/middlewares/freertos/source/tasks.c ****             listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5345:bsp/middlewares/freertos/source/tasks.c **** 
5346:bsp/middlewares/freertos/source/tasks.c ****             if( xTimeToWake < xConstTickCount )
5347:bsp/middlewares/freertos/source/tasks.c ****             {
5348:bsp/middlewares/freertos/source/tasks.c ****                 /* Wake time has overflowed.  Place this item in the overflow list. */
5349:bsp/middlewares/freertos/source/tasks.c ****                 vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5350:bsp/middlewares/freertos/source/tasks.c ****             }
5351:bsp/middlewares/freertos/source/tasks.c ****             else
5352:bsp/middlewares/freertos/source/tasks.c ****             {
5353:bsp/middlewares/freertos/source/tasks.c ****                 /* The wake time has not overflowed, so the current block list is used. */
5354:bsp/middlewares/freertos/source/tasks.c ****                 vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5355:bsp/middlewares/freertos/source/tasks.c **** 
5356:bsp/middlewares/freertos/source/tasks.c ****                 /* If the task entering the blocked state was placed at the head of the
5357:bsp/middlewares/freertos/source/tasks.c ****                  * list of blocked tasks then xNextTaskUnblockTime needs to be updated
5358:bsp/middlewares/freertos/source/tasks.c ****                  * too. */
5359:bsp/middlewares/freertos/source/tasks.c ****                 if( xTimeToWake < xNextTaskUnblockTime )
5360:bsp/middlewares/freertos/source/tasks.c ****                 {
5361:bsp/middlewares/freertos/source/tasks.c ****                     xNextTaskUnblockTime = xTimeToWake;
5362:bsp/middlewares/freertos/source/tasks.c ****                 }
5363:bsp/middlewares/freertos/source/tasks.c ****                 else
5364:bsp/middlewares/freertos/source/tasks.c ****                 {
5365:bsp/middlewares/freertos/source/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5366:bsp/middlewares/freertos/source/tasks.c ****                 }
5367:bsp/middlewares/freertos/source/tasks.c ****             }
5368:bsp/middlewares/freertos/source/tasks.c **** 
5369:bsp/middlewares/freertos/source/tasks.c ****             /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5370:bsp/middlewares/freertos/source/tasks.c ****             ( void ) xCanBlockIndefinitely;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 116


5371:bsp/middlewares/freertos/source/tasks.c ****         }
5372:bsp/middlewares/freertos/source/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
5373:bsp/middlewares/freertos/source/tasks.c **** }
 828              		.loc 1 5373 1 view .LVU230
 829 004c 70BD     		pop	{r4, r5, r6, pc}
 830              	.LVL60:
 831              	.L68:
5293:bsp/middlewares/freertos/source/tasks.c ****             {
 832              		.loc 1 5293 51 discriminator 1 view .LVU231
 833 004e 002D     		cmp	r5, #0
 834 0050 EFD0     		beq	.L64
5298:bsp/middlewares/freertos/source/tasks.c ****             }
 835              		.loc 1 5298 17 is_stmt 1 view .LVU232
5298:bsp/middlewares/freertos/source/tasks.c ****             }
 836              		.loc 1 5298 69 is_stmt 0 view .LVU233
 837 0052 0B4B     		ldr	r3, .L69+4
 838 0054 1968     		ldr	r1, [r3]
5298:bsp/middlewares/freertos/source/tasks.c ****             }
 839              		.loc 1 5298 17 view .LVU234
 840 0056 0431     		adds	r1, r1, #4
 841 0058 0C48     		ldr	r0, .L69+16
 842 005a FFF7FEFF 		bl	vListInsertEnd
 843              	.LVL61:
 844 005e F5E7     		b	.L62
 845              	.LVL62:
 846              	.L66:
5320:bsp/middlewares/freertos/source/tasks.c **** 
 847              		.loc 1 5320 21 is_stmt 1 view .LVU235
 848 0060 0B4B     		ldr	r3, .L69+20
 849 0062 1868     		ldr	r0, [r3]
5320:bsp/middlewares/freertos/source/tasks.c **** 
 850              		.loc 1 5320 68 is_stmt 0 view .LVU236
 851 0064 064B     		ldr	r3, .L69+4
 852 0066 1968     		ldr	r1, [r3]
5320:bsp/middlewares/freertos/source/tasks.c **** 
 853              		.loc 1 5320 21 view .LVU237
 854 0068 0431     		adds	r1, r1, #4
 855 006a FFF7FEFF 		bl	vListInsert
 856              	.LVL63:
5325:bsp/middlewares/freertos/source/tasks.c ****                     {
 857              		.loc 1 5325 21 is_stmt 1 view .LVU238
5325:bsp/middlewares/freertos/source/tasks.c ****                     {
 858              		.loc 1 5325 37 is_stmt 0 view .LVU239
 859 006e 094B     		ldr	r3, .L69+24
 860 0070 1B68     		ldr	r3, [r3]
5325:bsp/middlewares/freertos/source/tasks.c ****                     {
 861              		.loc 1 5325 23 view .LVU240
 862 0072 A342     		cmp	r3, r4
 863 0074 EAD9     		bls	.L62
5327:bsp/middlewares/freertos/source/tasks.c ****                     }
 864              		.loc 1 5327 25 is_stmt 1 view .LVU241
5327:bsp/middlewares/freertos/source/tasks.c ****                     }
 865              		.loc 1 5327 46 is_stmt 0 view .LVU242
 866 0076 074B     		ldr	r3, .L69+24
 867 0078 1C60     		str	r4, [r3]
5331:bsp/middlewares/freertos/source/tasks.c ****                     }
 868              		.loc 1 5331 49 is_stmt 1 view .LVU243
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 117


 869              		.loc 1 5373 1 is_stmt 0 view .LVU244
 870 007a E7E7     		b	.L62
 871              	.L70:
 872              		.align	2
 873              	.L69:
 874 007c 00000000 		.word	.LANCHOR15
 875 0080 00000000 		.word	.LANCHOR10
 876 0084 00000000 		.word	.LANCHOR13
 877 0088 00000000 		.word	.LANCHOR8
 878 008c 00000000 		.word	.LANCHOR0
 879 0090 00000000 		.word	.LANCHOR2
 880 0094 00000000 		.word	.LANCHOR3
 881              		.cfi_endproc
 882              	.LFE51:
 884              		.section	.text.xTaskCreate,"ax",%progbits
 885              		.align	1
 886              		.global	xTaskCreate
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 891              	xTaskCreate:
 892              	.LVL64:
 893              	.LFB5:
 732:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxNewTCB;
 894              		.loc 1 732 5 is_stmt 1 view -0
 895              		.cfi_startproc
 896              		@ args = 8, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 732:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxNewTCB;
 898              		.loc 1 732 5 is_stmt 0 view .LVU246
 899 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 900              	.LCFI8:
 901              		.cfi_def_cfa_offset 28
 902              		.cfi_offset 4, -28
 903              		.cfi_offset 5, -24
 904              		.cfi_offset 6, -20
 905              		.cfi_offset 7, -16
 906              		.cfi_offset 8, -12
 907              		.cfi_offset 9, -8
 908              		.cfi_offset 14, -4
 909 0004 85B0     		sub	sp, sp, #20
 910              	.LCFI9:
 911              		.cfi_def_cfa_offset 48
 912 0006 0746     		mov	r7, r0
 913 0008 8846     		mov	r8, r1
 914 000a 1446     		mov	r4, r2
 915 000c 1E46     		mov	r6, r3
 733:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
 916              		.loc 1 733 9 is_stmt 1 view .LVU247
 734:bsp/middlewares/freertos/source/tasks.c **** 
 917              		.loc 1 734 9 view .LVU248
 918              	.LBB116:
 763:bsp/middlewares/freertos/source/tasks.c **** 
 919              		.loc 1 763 17 view .LVU249
 766:bsp/middlewares/freertos/source/tasks.c **** 
 920              		.loc 1 766 17 view .LVU250
 766:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 118


 921              		.loc 1 766 27 is_stmt 0 view .LVU251
 922 000e 9000     		lsls	r0, r2, #2
 923              	.LVL65:
 766:bsp/middlewares/freertos/source/tasks.c **** 
 924              		.loc 1 766 27 view .LVU252
 925 0010 FFF7FEFF 		bl	pvPortMalloc
 926              	.LVL66:
 768:bsp/middlewares/freertos/source/tasks.c ****                 {
 927              		.loc 1 768 17 is_stmt 1 view .LVU253
 768:bsp/middlewares/freertos/source/tasks.c ****                 {
 928              		.loc 1 768 19 is_stmt 0 view .LVU254
 929 0014 F0B1     		cbz	r0, .L75
 930 0016 8146     		mov	r9, r0
 771:bsp/middlewares/freertos/source/tasks.c **** 
 931              		.loc 1 771 21 is_stmt 1 view .LVU255
 771:bsp/middlewares/freertos/source/tasks.c **** 
 932              		.loc 1 771 44 is_stmt 0 view .LVU256
 933 0018 4C20     		movs	r0, #76
 934              	.LVL67:
 771:bsp/middlewares/freertos/source/tasks.c **** 
 935              		.loc 1 771 44 view .LVU257
 936 001a FFF7FEFF 		bl	pvPortMalloc
 937              	.LVL68:
 773:bsp/middlewares/freertos/source/tasks.c ****                     {
 938              		.loc 1 773 21 is_stmt 1 view .LVU258
 773:bsp/middlewares/freertos/source/tasks.c ****                     {
 939              		.loc 1 773 23 is_stmt 0 view .LVU259
 940 001e 0546     		mov	r5, r0
 941 0020 A0B1     		cbz	r0, .L73
 776:bsp/middlewares/freertos/source/tasks.c ****                     }
 942              		.loc 1 776 25 is_stmt 1 view .LVU260
 776:bsp/middlewares/freertos/source/tasks.c ****                     }
 943              		.loc 1 776 43 is_stmt 0 view .LVU261
 944 0022 C0F83090 		str	r9, [r0, #48]
 945              	.LVL69:
 946              	.L74:
 776:bsp/middlewares/freertos/source/tasks.c ****                     }
 947              		.loc 1 776 43 view .LVU262
 948              	.LBE116:
 792:bsp/middlewares/freertos/source/tasks.c ****         {
 949              		.loc 1 792 9 is_stmt 1 view .LVU263
 792:bsp/middlewares/freertos/source/tasks.c ****         {
 950              		.loc 1 792 11 is_stmt 0 view .LVU264
 951 0026 D5B1     		cbz	r5, .L76
 802:bsp/middlewares/freertos/source/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 952              		.loc 1 802 13 is_stmt 1 view .LVU265
 953 0028 0023     		movs	r3, #0
 954 002a 0393     		str	r3, [sp, #12]
 955 002c 0295     		str	r5, [sp, #8]
 956 002e 0D9B     		ldr	r3, [sp, #52]
 957 0030 0193     		str	r3, [sp, #4]
 958 0032 0C9B     		ldr	r3, [sp, #48]
 959 0034 0093     		str	r3, [sp]
 960 0036 3346     		mov	r3, r6
 961 0038 2246     		mov	r2, r4
 962 003a 4146     		mov	r1, r8
 963 003c 3846     		mov	r0, r7
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 119


 964 003e FFF7FEFF 		bl	prvInitialiseNewTask
 965              	.LVL70:
 803:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdPASS;
 966              		.loc 1 803 13 view .LVU266
 967 0042 2846     		mov	r0, r5
 968 0044 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 969              	.LVL71:
 804:bsp/middlewares/freertos/source/tasks.c ****         }
 970              		.loc 1 804 13 view .LVU267
 804:bsp/middlewares/freertos/source/tasks.c ****         }
 971              		.loc 1 804 21 is_stmt 0 view .LVU268
 972 0048 0120     		movs	r0, #1
 973 004a 05E0     		b	.L71
 974              	.LVL72:
 975              	.L73:
 976              	.LBB117:
 782:bsp/middlewares/freertos/source/tasks.c ****                     }
 977              		.loc 1 782 25 is_stmt 1 view .LVU269
 978 004c 4846     		mov	r0, r9
 979              	.LVL73:
 782:bsp/middlewares/freertos/source/tasks.c ****                     }
 980              		.loc 1 782 25 is_stmt 0 view .LVU270
 981 004e FFF7FEFF 		bl	vPortFree
 982              	.LVL74:
 983 0052 E8E7     		b	.L74
 984              	.LVL75:
 985              	.L75:
 782:bsp/middlewares/freertos/source/tasks.c ****                     }
 986              		.loc 1 782 25 view .LVU271
 987              	.LBE117:
 808:bsp/middlewares/freertos/source/tasks.c ****         }
 988              		.loc 1 808 21 view .LVU272
 989 0054 4FF0FF30 		mov	r0, #-1
 990              	.LVL76:
 991              	.L71:
 812:bsp/middlewares/freertos/source/tasks.c **** 
 992              		.loc 1 812 5 view .LVU273
 993 0058 05B0     		add	sp, sp, #20
 994              	.LCFI10:
 995              		.cfi_remember_state
 996              		.cfi_def_cfa_offset 28
 997              		@ sp needed
 998 005a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 999              	.LVL77:
 1000              	.L76:
 1001              	.LCFI11:
 1002              		.cfi_restore_state
 808:bsp/middlewares/freertos/source/tasks.c ****         }
 1003              		.loc 1 808 21 view .LVU274
 1004 005e 4FF0FF30 		mov	r0, #-1
 1005              	.LVL78:
 811:bsp/middlewares/freertos/source/tasks.c ****     }
 1006              		.loc 1 811 9 is_stmt 1 view .LVU275
 811:bsp/middlewares/freertos/source/tasks.c ****     }
 1007              		.loc 1 811 16 is_stmt 0 view .LVU276
 1008 0062 F9E7     		b	.L71
 1009              		.cfi_endproc
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 120


 1010              	.LFE5:
 1012              		.section	.text.vTaskDelete,"ax",%progbits
 1013              		.align	1
 1014              		.global	vTaskDelete
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1019              	vTaskDelete:
 1020              	.LVL79:
 1021              	.LFB8:
1155:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 1022              		.loc 1 1155 5 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
1155:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 1026              		.loc 1 1155 5 is_stmt 0 view .LVU278
 1027 0000 38B5     		push	{r3, r4, r5, lr}
 1028              	.LCFI12:
 1029              		.cfi_def_cfa_offset 16
 1030              		.cfi_offset 3, -16
 1031              		.cfi_offset 4, -12
 1032              		.cfi_offset 5, -8
 1033              		.cfi_offset 14, -4
 1034 0002 0446     		mov	r4, r0
1156:bsp/middlewares/freertos/source/tasks.c **** 
 1035              		.loc 1 1156 9 is_stmt 1 view .LVU279
1158:bsp/middlewares/freertos/source/tasks.c ****         {
 1036              		.loc 1 1158 9 view .LVU280
 1037 0004 FFF7FEFF 		bl	vPortEnterCritical
 1038              	.LVL80:
1162:bsp/middlewares/freertos/source/tasks.c **** 
 1039              		.loc 1 1162 13 view .LVU281
1162:bsp/middlewares/freertos/source/tasks.c **** 
 1040              		.loc 1 1162 21 is_stmt 0 view .LVU282
 1041 0008 002C     		cmp	r4, #0
 1042 000a 33D0     		beq	.L88
 1043              	.LVL81:
 1044              	.L79:
1165:bsp/middlewares/freertos/source/tasks.c ****             {
 1045              		.loc 1 1165 13 is_stmt 1 discriminator 4 view .LVU283
1165:bsp/middlewares/freertos/source/tasks.c ****             {
 1046              		.loc 1 1165 17 is_stmt 0 discriminator 4 view .LVU284
 1047 000c 251D     		adds	r5, r4, #4
 1048 000e 2846     		mov	r0, r5
 1049 0010 FFF7FEFF 		bl	uxListRemove
 1050              	.LVL82:
1165:bsp/middlewares/freertos/source/tasks.c ****             {
 1051              		.loc 1 1165 15 discriminator 4 view .LVU285
 1052 0014 68B9     		cbnz	r0, .L80
1167:bsp/middlewares/freertos/source/tasks.c ****             }
 1053              		.loc 1 1167 17 is_stmt 1 view .LVU286
 1054 0016 E26A     		ldr	r2, [r4, #44]
 1055 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1056 001c 9B00     		lsls	r3, r3, #2
 1057 001e 2749     		ldr	r1, .L91
 1058 0020 CB58     		ldr	r3, [r1, r3]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 121


 1059 0022 33B9     		cbnz	r3, .L80
1167:bsp/middlewares/freertos/source/tasks.c ****             }
 1060              		.loc 1 1167 17 discriminator 1 view .LVU287
 1061 0024 0123     		movs	r3, #1
 1062 0026 9340     		lsls	r3, r3, r2
 1063 0028 2549     		ldr	r1, .L91+4
 1064 002a 0A68     		ldr	r2, [r1]
 1065 002c 22EA0302 		bic	r2, r2, r3
 1066 0030 0A60     		str	r2, [r1]
 1067              	.L80:
1171:bsp/middlewares/freertos/source/tasks.c ****             }
 1068              		.loc 1 1171 41 view .LVU288
1175:bsp/middlewares/freertos/source/tasks.c ****             {
 1069              		.loc 1 1175 13 view .LVU289
1175:bsp/middlewares/freertos/source/tasks.c ****             {
 1070              		.loc 1 1175 17 is_stmt 0 view .LVU290
 1071 0032 A36A     		ldr	r3, [r4, #40]
1175:bsp/middlewares/freertos/source/tasks.c ****             {
 1072              		.loc 1 1175 15 view .LVU291
 1073 0034 1BB1     		cbz	r3, .L81
1177:bsp/middlewares/freertos/source/tasks.c ****             }
 1074              		.loc 1 1177 17 is_stmt 1 view .LVU292
1177:bsp/middlewares/freertos/source/tasks.c ****             }
 1075              		.loc 1 1177 26 is_stmt 0 view .LVU293
 1076 0036 04F11800 		add	r0, r4, #24
 1077 003a FFF7FEFF 		bl	uxListRemove
 1078              	.LVL83:
 1079              	.L81:
1181:bsp/middlewares/freertos/source/tasks.c ****             }
 1080              		.loc 1 1181 41 is_stmt 1 view .LVU294
1188:bsp/middlewares/freertos/source/tasks.c **** 
 1081              		.loc 1 1188 13 view .LVU295
1188:bsp/middlewares/freertos/source/tasks.c **** 
 1082              		.loc 1 1188 25 is_stmt 0 view .LVU296
 1083 003e 214A     		ldr	r2, .L91+8
 1084 0040 1368     		ldr	r3, [r2]
 1085 0042 0133     		adds	r3, r3, #1
 1086 0044 1360     		str	r3, [r2]
1190:bsp/middlewares/freertos/source/tasks.c ****             {
 1087              		.loc 1 1190 13 is_stmt 1 view .LVU297
1190:bsp/middlewares/freertos/source/tasks.c ****             {
 1088              		.loc 1 1190 23 is_stmt 0 view .LVU298
 1089 0046 204B     		ldr	r3, .L91+12
 1090 0048 1B68     		ldr	r3, [r3]
1190:bsp/middlewares/freertos/source/tasks.c ****             {
 1091              		.loc 1 1190 15 view .LVU299
 1092 004a A342     		cmp	r3, r4
 1093 004c 15D0     		beq	.L89
1217:bsp/middlewares/freertos/source/tasks.c ****                 traceTASK_DELETE( pxTCB );
 1094              		.loc 1 1217 17 is_stmt 1 view .LVU300
 1095 004e 1F4A     		ldr	r2, .L91+16
 1096 0050 1368     		ldr	r3, [r2]
 1097 0052 013B     		subs	r3, r3, #1
 1098 0054 1360     		str	r3, [r2]
1218:bsp/middlewares/freertos/source/tasks.c ****                 prvDeleteTCB( pxTCB );
 1099              		.loc 1 1218 42 view .LVU301
1219:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 122


 1100              		.loc 1 1219 17 view .LVU302
 1101 0056 2046     		mov	r0, r4
 1102 0058 FFF7FEFF 		bl	prvDeleteTCB
 1103              	.LVL84:
1223:bsp/middlewares/freertos/source/tasks.c ****             }
 1104              		.loc 1 1223 17 view .LVU303
 1105 005c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1106              	.LVL85:
 1107              	.L83:
1226:bsp/middlewares/freertos/source/tasks.c **** 
 1108              		.loc 1 1226 9 view .LVU304
 1109 0060 FFF7FEFF 		bl	vPortExitCritical
 1110              	.LVL86:
1230:bsp/middlewares/freertos/source/tasks.c ****         {
 1111              		.loc 1 1230 9 view .LVU305
1230:bsp/middlewares/freertos/source/tasks.c ****         {
 1112              		.loc 1 1230 31 is_stmt 0 view .LVU306
 1113 0064 1A4B     		ldr	r3, .L91+20
 1114 0066 1B68     		ldr	r3, [r3]
1230:bsp/middlewares/freertos/source/tasks.c ****         {
 1115              		.loc 1 1230 11 view .LVU307
 1116 0068 1BB1     		cbz	r3, .L78
1232:bsp/middlewares/freertos/source/tasks.c ****             {
 1117              		.loc 1 1232 13 is_stmt 1 view .LVU308
1232:bsp/middlewares/freertos/source/tasks.c ****             {
 1118              		.loc 1 1232 23 is_stmt 0 view .LVU309
 1119 006a 174B     		ldr	r3, .L91+12
 1120 006c 1B68     		ldr	r3, [r3]
1232:bsp/middlewares/freertos/source/tasks.c ****             {
 1121              		.loc 1 1232 15 view .LVU310
 1122 006e A342     		cmp	r3, r4
 1123 0070 0CD0     		beq	.L90
 1124              	.L78:
1242:bsp/middlewares/freertos/source/tasks.c **** 
 1125              		.loc 1 1242 5 view .LVU311
 1126 0072 38BD     		pop	{r3, r4, r5, pc}
 1127              	.LVL87:
 1128              	.L88:
1162:bsp/middlewares/freertos/source/tasks.c **** 
 1129              		.loc 1 1162 21 discriminator 1 view .LVU312
 1130 0074 144B     		ldr	r3, .L91+12
 1131 0076 1C68     		ldr	r4, [r3]
 1132              	.LVL88:
1162:bsp/middlewares/freertos/source/tasks.c **** 
 1133              		.loc 1 1162 21 discriminator 1 view .LVU313
 1134 0078 C8E7     		b	.L79
 1135              	.LVL89:
 1136              	.L89:
1197:bsp/middlewares/freertos/source/tasks.c **** 
 1137              		.loc 1 1197 17 is_stmt 1 view .LVU314
 1138 007a 2946     		mov	r1, r5
 1139 007c 1548     		ldr	r0, .L91+24
 1140 007e FFF7FEFF 		bl	vListInsertEnd
 1141              	.LVL90:
1202:bsp/middlewares/freertos/source/tasks.c **** 
 1142              		.loc 1 1202 17 view .LVU315
 1143 0082 154A     		ldr	r2, .L91+28
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 123


 1144 0084 1368     		ldr	r3, [r2]
 1145 0086 0133     		adds	r3, r3, #1
 1146 0088 1360     		str	r3, [r2]
1206:bsp/middlewares/freertos/source/tasks.c **** 
 1147              		.loc 1 1206 42 view .LVU316
1213:bsp/middlewares/freertos/source/tasks.c ****             }
 1148              		.loc 1 1213 66 view .LVU317
 1149 008a E9E7     		b	.L83
 1150              	.L90:
1234:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 1151              		.loc 1 1234 17 view .LVU318
 1152 008c 134B     		ldr	r3, .L91+32
 1153 008e 1B68     		ldr	r3, [r3]
 1154 0090 43B1     		cbz	r3, .L85
1234:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 1155              		.loc 1 1234 17 view .LVU319
 1156              	.LBB118:
 1157              	.LBI118:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1158              		.loc 2 193 34 view .LVU320
 1159              	.LBB119:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1160              		.loc 2 195 9 view .LVU321
 1161              		.loc 2 197 9 view .LVU322
 1162              		.syntax unified
 1163              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1164 0092 4FF01003 			mov r3, #16												
 1165 0096 83F31188 		msr basepri, r3											
 1166 009a BFF36F8F 		isb														
 1167 009e BFF34F8F 		dsb														
 1168              	
 1169              	@ 0 "" 2
 1170              	.LVL91:
 1171              		.thumb
 1172              		.syntax unified
 1173              	.L86:
 1174              		.loc 2 197 9 is_stmt 0 view .LVU323
 1175              	.LBE119:
 1176              	.LBE118:
1234:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 1177              		.loc 1 1234 17 is_stmt 1 discriminator 1 view .LVU324
1234:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 1178              		.loc 1 1234 17 discriminator 1 view .LVU325
1234:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 1179              		.loc 1 1234 17 discriminator 1 view .LVU326
 1180 00a2 FEE7     		b	.L86
 1181              	.L85:
1234:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 1182              		.loc 1 1234 58 discriminator 2 view .LVU327
1235:bsp/middlewares/freertos/source/tasks.c ****             }
 1183              		.loc 1 1235 17 discriminator 2 view .LVU328
 1184 00a4 4FF0E023 		mov	r3, #-536813568
 1185 00a8 4FF08052 		mov	r2, #268435456
 1186 00ac C3F8042D 		str	r2, [r3, #3332]
1235:bsp/middlewares/freertos/source/tasks.c ****             }
 1187              		.loc 1 1235 17 discriminator 2 view .LVU329
 1188              		.syntax unified
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 124


 1189              	@ 1235 "bsp/middlewares/freertos/source/tasks.c" 1
 1190 00b0 BFF34F8F 		dsb
 1191              	@ 0 "" 2
1235:bsp/middlewares/freertos/source/tasks.c ****             }
 1192              		.loc 1 1235 17 discriminator 2 view .LVU330
 1193              	@ 1235 "bsp/middlewares/freertos/source/tasks.c" 1
 1194 00b4 BFF36F8F 		isb
 1195              	@ 0 "" 2
1235:bsp/middlewares/freertos/source/tasks.c ****             }
 1196              		.loc 1 1235 39 discriminator 2 view .LVU331
1239:bsp/middlewares/freertos/source/tasks.c ****             }
 1197              		.loc 1 1239 41 discriminator 2 view .LVU332
1242:bsp/middlewares/freertos/source/tasks.c **** 
 1198              		.loc 1 1242 5 is_stmt 0 discriminator 2 view .LVU333
 1199              		.thumb
 1200              		.syntax unified
 1201 00b8 DBE7     		b	.L78
 1202              	.L92:
 1203 00ba 00BF     		.align	2
 1204              	.L91:
 1205 00bc 00000000 		.word	.LANCHOR4
 1206 00c0 00000000 		.word	.LANCHOR13
 1207 00c4 00000000 		.word	.LANCHOR12
 1208 00c8 00000000 		.word	.LANCHOR10
 1209 00cc 00000000 		.word	.LANCHOR9
 1210 00d0 00000000 		.word	.LANCHOR11
 1211 00d4 00000000 		.word	.LANCHOR7
 1212 00d8 00000000 		.word	.LANCHOR14
 1213 00dc 00000000 		.word	.LANCHOR16
 1214              		.cfi_endproc
 1215              	.LFE8:
 1217              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1218              		.align	1
 1219              		.global	uxTaskPriorityGet
 1220              		.syntax unified
 1221              		.thumb
 1222              		.thumb_func
 1224              	uxTaskPriorityGet:
 1225              	.LVL92:
 1226              	.LFB11:
1479:bsp/middlewares/freertos/source/tasks.c ****         TCB_t const * pxTCB;
 1227              		.loc 1 1479 5 is_stmt 1 view -0
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 0
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
1479:bsp/middlewares/freertos/source/tasks.c ****         TCB_t const * pxTCB;
 1231              		.loc 1 1479 5 is_stmt 0 view .LVU335
 1232 0000 10B5     		push	{r4, lr}
 1233              	.LCFI13:
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 4, -8
 1236              		.cfi_offset 14, -4
 1237 0002 0446     		mov	r4, r0
1480:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxReturn;
 1238              		.loc 1 1480 9 is_stmt 1 view .LVU336
1481:bsp/middlewares/freertos/source/tasks.c **** 
 1239              		.loc 1 1481 9 view .LVU337
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 125


1483:bsp/middlewares/freertos/source/tasks.c ****         {
 1240              		.loc 1 1483 9 view .LVU338
 1241 0004 FFF7FEFF 		bl	vPortEnterCritical
 1242              	.LVL93:
1487:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1243              		.loc 1 1487 13 view .LVU339
1487:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1244              		.loc 1 1487 21 is_stmt 0 view .LVU340
 1245 0008 24B1     		cbz	r4, .L96
 1246              	.LVL94:
 1247              	.L94:
1488:bsp/middlewares/freertos/source/tasks.c ****         }
 1248              		.loc 1 1488 13 is_stmt 1 discriminator 4 view .LVU341
1488:bsp/middlewares/freertos/source/tasks.c ****         }
 1249              		.loc 1 1488 22 is_stmt 0 discriminator 4 view .LVU342
 1250 000a E46A     		ldr	r4, [r4, #44]
 1251              	.LVL95:
1490:bsp/middlewares/freertos/source/tasks.c **** 
 1252              		.loc 1 1490 9 is_stmt 1 discriminator 4 view .LVU343
 1253 000c FFF7FEFF 		bl	vPortExitCritical
 1254              	.LVL96:
1492:bsp/middlewares/freertos/source/tasks.c ****     }
 1255              		.loc 1 1492 9 discriminator 4 view .LVU344
1493:bsp/middlewares/freertos/source/tasks.c **** 
 1256              		.loc 1 1493 5 is_stmt 0 discriminator 4 view .LVU345
 1257 0010 2046     		mov	r0, r4
 1258 0012 10BD     		pop	{r4, pc}
 1259              	.LVL97:
 1260              	.L96:
1487:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1261              		.loc 1 1487 21 discriminator 1 view .LVU346
 1262 0014 014B     		ldr	r3, .L97
 1263 0016 1C68     		ldr	r4, [r3]
 1264              	.LVL98:
1487:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1265              		.loc 1 1487 21 discriminator 1 view .LVU347
 1266 0018 F7E7     		b	.L94
 1267              	.L98:
 1268 001a 00BF     		.align	2
 1269              	.L97:
 1270 001c 00000000 		.word	.LANCHOR10
 1271              		.cfi_endproc
 1272              	.LFE11:
 1274              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1275              		.align	1
 1276              		.global	uxTaskPriorityGetFromISR
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1281              	uxTaskPriorityGetFromISR:
 1282              	.LVL99:
 1283              	.LFB12:
1501:bsp/middlewares/freertos/source/tasks.c ****         TCB_t const * pxTCB;
 1284              		.loc 1 1501 5 is_stmt 1 view -0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 126


1501:bsp/middlewares/freertos/source/tasks.c ****         TCB_t const * pxTCB;
 1288              		.loc 1 1501 5 is_stmt 0 view .LVU349
 1289 0000 10B5     		push	{r4, lr}
 1290              	.LCFI14:
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 4, -8
 1293              		.cfi_offset 14, -4
 1294 0002 0446     		mov	r4, r0
1502:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
 1295              		.loc 1 1502 9 is_stmt 1 view .LVU350
1503:bsp/middlewares/freertos/source/tasks.c **** 
 1296              		.loc 1 1503 9 view .LVU351
1521:bsp/middlewares/freertos/source/tasks.c **** 
 1297              		.loc 1 1521 9 view .LVU352
 1298 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1299              	.LVL100:
1523:bsp/middlewares/freertos/source/tasks.c ****         {
 1300              		.loc 1 1523 9 view .LVU353
 1301              	.LBB120:
 1302              	.LBI120:
 198:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 199:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 200:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 201:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 202:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 203:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         );
 205:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 206:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 208:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 209:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1303              		.loc 2 209 38 view .LVU354
 1304              	.LBB121:
 210:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 211:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1305              		.loc 2 211 9 view .LVU355
 212:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 213:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1306              		.loc 2 213 9 view .LVU356
 1307              		.syntax unified
 1308              	@ 213 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1309 0008 EFF31183 			mrs r3, basepri											
 1310 000c 4FF01002 		mov r2, #16												
 1311 0010 82F31188 		msr basepri, r2											
 1312 0014 BFF36F8F 		isb														
 1313 0018 BFF34F8F 		dsb														
 1314              	
 1315              	@ 0 "" 2
 1316              	.LVL101:
 214:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 215:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 216:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 217:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 218:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 219:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 220:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 127


 221:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         );
 222:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 223:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 224:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 225:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 1317              		.loc 2 225 9 view .LVU357
 1318              		.loc 2 225 9 is_stmt 0 view .LVU358
 1319              		.thumb
 1320              		.syntax unified
 1321              	.LBE121:
 1322              	.LBE120:
1527:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1323              		.loc 1 1527 13 is_stmt 1 view .LVU359
1527:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1324              		.loc 1 1527 21 is_stmt 0 view .LVU360
 1325 001c 1CB1     		cbz	r4, .L102
 1326              	.LVL102:
 1327              	.L100:
1528:bsp/middlewares/freertos/source/tasks.c ****         }
 1328              		.loc 1 1528 13 is_stmt 1 discriminator 4 view .LVU361
1528:bsp/middlewares/freertos/source/tasks.c ****         }
 1329              		.loc 1 1528 22 is_stmt 0 discriminator 4 view .LVU362
 1330 001e E06A     		ldr	r0, [r4, #44]
 1331              	.LVL103:
1530:bsp/middlewares/freertos/source/tasks.c **** 
 1332              		.loc 1 1530 9 is_stmt 1 discriminator 4 view .LVU363
 1333              	.LBB122:
 1334              	.LBI122:
 226:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 227:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 228:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 229:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1335              		.loc 2 229 34 discriminator 4 view .LVU364
 1336              	.LBB123:
 230:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 231:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1337              		.loc 2 231 9 discriminator 4 view .LVU365
 1338              		.syntax unified
 1339              	@ 231 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1340 0020 83F31188 			msr basepri, r3	
 1341              	@ 0 "" 2
 1342              	.LVL104:
 1343              		.loc 2 231 9 is_stmt 0 discriminator 4 view .LVU366
 1344              		.thumb
 1345              		.syntax unified
 1346              	.LBE123:
 1347              	.LBE122:
1532:bsp/middlewares/freertos/source/tasks.c ****     }
 1348              		.loc 1 1532 9 is_stmt 1 discriminator 4 view .LVU367
1533:bsp/middlewares/freertos/source/tasks.c **** 
 1349              		.loc 1 1533 5 is_stmt 0 discriminator 4 view .LVU368
 1350 0024 10BD     		pop	{r4, pc}
 1351              	.LVL105:
 1352              	.L102:
1527:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1353              		.loc 1 1527 21 discriminator 1 view .LVU369
 1354 0026 014A     		ldr	r2, .L103
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 128


 1355 0028 1468     		ldr	r4, [r2]
 1356              	.LVL106:
1527:bsp/middlewares/freertos/source/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1357              		.loc 1 1527 21 discriminator 1 view .LVU370
 1358 002a F8E7     		b	.L100
 1359              	.L104:
 1360              		.align	2
 1361              	.L103:
 1362 002c 00000000 		.word	.LANCHOR10
 1363              		.cfi_endproc
 1364              	.LFE12:
 1366              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1367              		.align	1
 1368              		.global	vTaskPrioritySet
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1373              	vTaskPrioritySet:
 1374              	.LVL107:
 1375              	.LFB13:
1542:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 1376              		.loc 1 1542 5 is_stmt 1 view -0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
1542:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 1380              		.loc 1 1542 5 is_stmt 0 view .LVU372
 1381 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1382              	.LCFI15:
 1383              		.cfi_def_cfa_offset 24
 1384              		.cfi_offset 3, -24
 1385              		.cfi_offset 4, -20
 1386              		.cfi_offset 5, -16
 1387              		.cfi_offset 6, -12
 1388              		.cfi_offset 7, -8
 1389              		.cfi_offset 14, -4
1543:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1390              		.loc 1 1543 9 is_stmt 1 view .LVU373
1544:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 1391              		.loc 1 1544 9 view .LVU374
1545:bsp/middlewares/freertos/source/tasks.c **** 
 1392              		.loc 1 1545 9 view .LVU375
 1393              	.LVL108:
1547:bsp/middlewares/freertos/source/tasks.c **** 
 1394              		.loc 1 1547 9 view .LVU376
 1395 0002 1F29     		cmp	r1, #31
 1396 0004 08D9     		bls	.L106
1547:bsp/middlewares/freertos/source/tasks.c **** 
 1397              		.loc 1 1547 9 view .LVU377
 1398              	.LBB124:
 1399              	.LBI124:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1400              		.loc 2 193 34 view .LVU378
 1401              	.LBB125:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1402              		.loc 2 195 9 view .LVU379
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 129


 1403              		.loc 2 197 9 view .LVU380
 1404              		.syntax unified
 1405              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1406 0006 4FF01003 			mov r3, #16												
 1407 000a 83F31188 		msr basepri, r3											
 1408 000e BFF36F8F 		isb														
 1409 0012 BFF34F8F 		dsb														
 1410              	
 1411              	@ 0 "" 2
 1412              	.LVL109:
 1413              		.thumb
 1414              		.syntax unified
 1415              	.L107:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1416              		.loc 2 197 9 is_stmt 0 view .LVU381
 1417              	.LBE125:
 1418              	.LBE124:
1547:bsp/middlewares/freertos/source/tasks.c **** 
 1419              		.loc 1 1547 9 is_stmt 1 discriminator 1 view .LVU382
1547:bsp/middlewares/freertos/source/tasks.c **** 
 1420              		.loc 1 1547 9 discriminator 1 view .LVU383
1547:bsp/middlewares/freertos/source/tasks.c **** 
 1421              		.loc 1 1547 9 discriminator 1 view .LVU384
 1422 0016 FEE7     		b	.L107
 1423              	.L106:
 1424 0018 0546     		mov	r5, r0
 1425 001a 0C46     		mov	r4, r1
1547:bsp/middlewares/freertos/source/tasks.c **** 
 1426              		.loc 1 1547 65 view .LVU385
1550:bsp/middlewares/freertos/source/tasks.c ****         {
 1427              		.loc 1 1550 9 view .LVU386
 1428              	.LVL110:
1556:bsp/middlewares/freertos/source/tasks.c ****         }
 1429              		.loc 1 1556 37 view .LVU387
1559:bsp/middlewares/freertos/source/tasks.c ****         {
 1430              		.loc 1 1559 9 view .LVU388
 1431 001c FFF7FEFF 		bl	vPortEnterCritical
 1432              	.LVL111:
1563:bsp/middlewares/freertos/source/tasks.c **** 
 1433              		.loc 1 1563 13 view .LVU389
1563:bsp/middlewares/freertos/source/tasks.c **** 
 1434              		.loc 1 1563 21 is_stmt 0 view .LVU390
 1435 0020 75B1     		cbz	r5, .L119
 1436              	.LVL112:
 1437              	.L108:
1565:bsp/middlewares/freertos/source/tasks.c **** 
 1438              		.loc 1 1565 59 is_stmt 1 discriminator 4 view .LVU391
1573:bsp/middlewares/freertos/source/tasks.c ****                 }
 1439              		.loc 1 1573 21 discriminator 4 view .LVU392
1573:bsp/middlewares/freertos/source/tasks.c ****                 }
 1440              		.loc 1 1573 43 is_stmt 0 discriminator 4 view .LVU393
 1441 0022 EE6A     		ldr	r6, [r5, #44]
 1442              	.LVL113:
1577:bsp/middlewares/freertos/source/tasks.c ****             {
 1443              		.loc 1 1577 13 is_stmt 1 discriminator 4 view .LVU394
1577:bsp/middlewares/freertos/source/tasks.c ****             {
 1444              		.loc 1 1577 15 is_stmt 0 discriminator 4 view .LVU395
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 130


 1445 0024 B442     		cmp	r4, r6
 1446 0026 2DD0     		beq	.L109
1581:bsp/middlewares/freertos/source/tasks.c ****                 {
 1447              		.loc 1 1581 17 is_stmt 1 view .LVU396
1581:bsp/middlewares/freertos/source/tasks.c ****                 {
 1448              		.loc 1 1581 19 is_stmt 0 view .LVU397
 1449 0028 0DD9     		bls	.L110
1583:bsp/middlewares/freertos/source/tasks.c ****                     {
 1450              		.loc 1 1583 21 is_stmt 1 view .LVU398
1583:bsp/middlewares/freertos/source/tasks.c ****                     {
 1451              		.loc 1 1583 31 is_stmt 0 view .LVU399
 1452 002a 294B     		ldr	r3, .L121
 1453 002c 1B68     		ldr	r3, [r3]
1583:bsp/middlewares/freertos/source/tasks.c ****                     {
 1454              		.loc 1 1583 23 view .LVU400
 1455 002e AB42     		cmp	r3, r5
 1456 0030 2BD0     		beq	.L115
1588:bsp/middlewares/freertos/source/tasks.c ****                         {
 1457              		.loc 1 1588 25 is_stmt 1 view .LVU401
1588:bsp/middlewares/freertos/source/tasks.c ****                         {
 1458              		.loc 1 1588 58 is_stmt 0 view .LVU402
 1459 0032 274B     		ldr	r3, .L121
 1460 0034 1B68     		ldr	r3, [r3]
 1461 0036 DB6A     		ldr	r3, [r3, #44]
1588:bsp/middlewares/freertos/source/tasks.c ****                         {
 1462              		.loc 1 1588 27 view .LVU403
 1463 0038 A342     		cmp	r3, r4
 1464 003a 28D9     		bls	.L116
1545:bsp/middlewares/freertos/source/tasks.c **** 
 1465              		.loc 1 1545 20 view .LVU404
 1466 003c 0027     		movs	r7, #0
 1467 003e 07E0     		b	.L111
 1468              	.LVL114:
 1469              	.L119:
1563:bsp/middlewares/freertos/source/tasks.c **** 
 1470              		.loc 1 1563 21 discriminator 1 view .LVU405
 1471 0040 234B     		ldr	r3, .L121
 1472 0042 1D68     		ldr	r5, [r3]
 1473              	.LVL115:
1563:bsp/middlewares/freertos/source/tasks.c **** 
 1474              		.loc 1 1563 21 discriminator 1 view .LVU406
 1475 0044 EDE7     		b	.L108
 1476              	.LVL116:
 1477              	.L110:
1604:bsp/middlewares/freertos/source/tasks.c ****                 {
 1478              		.loc 1 1604 22 is_stmt 1 view .LVU407
1604:bsp/middlewares/freertos/source/tasks.c ****                 {
 1479              		.loc 1 1604 32 is_stmt 0 view .LVU408
 1480 0046 224B     		ldr	r3, .L121
 1481 0048 1B68     		ldr	r3, [r3]
1604:bsp/middlewares/freertos/source/tasks.c ****                 {
 1482              		.loc 1 1604 24 view .LVU409
 1483 004a AB42     		cmp	r3, r5
 1484 004c 21D0     		beq	.L117
1545:bsp/middlewares/freertos/source/tasks.c **** 
 1485              		.loc 1 1545 20 view .LVU410
 1486 004e 0027     		movs	r7, #0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 131


 1487              	.L111:
 1488              	.LVL117:
1616:bsp/middlewares/freertos/source/tasks.c **** 
 1489              		.loc 1 1616 17 is_stmt 1 view .LVU411
1621:bsp/middlewares/freertos/source/tasks.c **** 
 1490              		.loc 1 1621 17 view .LVU412
1641:bsp/middlewares/freertos/source/tasks.c ****                     }
 1491              		.loc 1 1641 25 view .LVU413
1641:bsp/middlewares/freertos/source/tasks.c ****                     }
 1492              		.loc 1 1641 43 is_stmt 0 view .LVU414
 1493 0050 EC62     		str	r4, [r5, #44]
1647:bsp/middlewares/freertos/source/tasks.c ****                 {
 1494              		.loc 1 1647 17 is_stmt 1 view .LVU415
1647:bsp/middlewares/freertos/source/tasks.c ****                 {
 1495              		.loc 1 1647 23 is_stmt 0 view .LVU416
 1496 0052 AB69     		ldr	r3, [r5, #24]
1647:bsp/middlewares/freertos/source/tasks.c ****                 {
 1497              		.loc 1 1647 19 view .LVU417
 1498 0054 002B     		cmp	r3, #0
 1499 0056 02DB     		blt	.L112
1649:bsp/middlewares/freertos/source/tasks.c ****                 }
 1500              		.loc 1 1649 21 is_stmt 1 view .LVU418
 1501 0058 C4F12004 		rsb	r4, r4, #32
 1502              	.LVL118:
1649:bsp/middlewares/freertos/source/tasks.c ****                 }
 1503              		.loc 1 1649 21 is_stmt 0 view .LVU419
 1504 005c AC61     		str	r4, [r5, #24]
 1505              	.L112:
1653:bsp/middlewares/freertos/source/tasks.c ****                 }
 1506              		.loc 1 1653 45 is_stmt 1 view .LVU420
1660:bsp/middlewares/freertos/source/tasks.c ****                 {
 1507              		.loc 1 1660 17 view .LVU421
1660:bsp/middlewares/freertos/source/tasks.c ****                 {
 1508              		.loc 1 1660 21 is_stmt 0 view .LVU422
 1509 005e 6969     		ldr	r1, [r5, #20]
 1510 0060 06EB8602 		add	r2, r6, r6, lsl #2
 1511 0064 1B4B     		ldr	r3, .L121+4
 1512 0066 03EB8203 		add	r3, r3, r2, lsl #2
1660:bsp/middlewares/freertos/source/tasks.c ****                 {
 1513              		.loc 1 1660 19 view .LVU423
 1514 006a 9942     		cmp	r1, r3
 1515 006c 13D0     		beq	.L120
 1516              	.LVL119:
 1517              	.L113:
1681:bsp/middlewares/freertos/source/tasks.c ****                 }
 1518              		.loc 1 1681 45 is_stmt 1 view .LVU424
1684:bsp/middlewares/freertos/source/tasks.c ****                 {
 1519              		.loc 1 1684 17 view .LVU425
1684:bsp/middlewares/freertos/source/tasks.c ****                 {
 1520              		.loc 1 1684 19 is_stmt 0 view .LVU426
 1521 006e 4FB1     		cbz	r7, .L109
1686:bsp/middlewares/freertos/source/tasks.c ****                 }
 1522              		.loc 1 1686 21 is_stmt 1 view .LVU427
 1523 0070 4FF0E023 		mov	r3, #-536813568
 1524 0074 4FF08052 		mov	r2, #268435456
 1525 0078 C3F8042D 		str	r2, [r3, #3332]
1686:bsp/middlewares/freertos/source/tasks.c ****                 }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 132


 1526              		.loc 1 1686 21 view .LVU428
 1527              		.syntax unified
 1528              	@ 1686 "bsp/middlewares/freertos/source/tasks.c" 1
 1529 007c BFF34F8F 		dsb
 1530              	@ 0 "" 2
1686:bsp/middlewares/freertos/source/tasks.c ****                 }
 1531              		.loc 1 1686 21 view .LVU429
 1532              	@ 1686 "bsp/middlewares/freertos/source/tasks.c" 1
 1533 0080 BFF36F8F 		isb
 1534              	@ 0 "" 2
1686:bsp/middlewares/freertos/source/tasks.c ****                 }
 1535              		.loc 1 1686 52 view .LVU430
 1536              	.LVL120:
 1537              		.thumb
 1538              		.syntax unified
 1539              	.L109:
1690:bsp/middlewares/freertos/source/tasks.c ****                 }
 1540              		.loc 1 1690 45 view .LVU431
1695:bsp/middlewares/freertos/source/tasks.c ****             }
 1541              		.loc 1 1695 17 view .LVU432
1698:bsp/middlewares/freertos/source/tasks.c ****     }
 1542              		.loc 1 1698 9 view .LVU433
 1543 0084 FFF7FEFF 		bl	vPortExitCritical
 1544              	.LVL121:
1699:bsp/middlewares/freertos/source/tasks.c **** 
 1545              		.loc 1 1699 5 is_stmt 0 view .LVU434
 1546 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1547              	.LVL122:
 1548              	.L115:
1545:bsp/middlewares/freertos/source/tasks.c **** 
 1549              		.loc 1 1545 20 view .LVU435
 1550 008a 0027     		movs	r7, #0
 1551 008c E0E7     		b	.L111
 1552              	.L116:
1590:bsp/middlewares/freertos/source/tasks.c ****                         }
 1553              		.loc 1 1590 44 view .LVU436
 1554 008e 0127     		movs	r7, #1
 1555 0090 DEE7     		b	.L111
 1556              	.L117:
1609:bsp/middlewares/freertos/source/tasks.c ****                 }
 1557              		.loc 1 1609 36 view .LVU437
 1558 0092 0127     		movs	r7, #1
 1559 0094 DCE7     		b	.L111
 1560              	.LVL123:
 1561              	.L120:
1665:bsp/middlewares/freertos/source/tasks.c ****                     {
 1562              		.loc 1 1665 21 is_stmt 1 view .LVU438
1665:bsp/middlewares/freertos/source/tasks.c ****                     {
 1563              		.loc 1 1665 25 is_stmt 0 view .LVU439
 1564 0096 2C1D     		adds	r4, r5, #4
 1565 0098 2046     		mov	r0, r4
 1566 009a FFF7FEFF 		bl	uxListRemove
 1567              	.LVL124:
1665:bsp/middlewares/freertos/source/tasks.c ****                     {
 1568              		.loc 1 1665 23 view .LVU440
 1569 009e 38B9     		cbnz	r0, .L114
1670:bsp/middlewares/freertos/source/tasks.c ****                     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 133


 1570              		.loc 1 1670 25 is_stmt 1 view .LVU441
 1571 00a0 0123     		movs	r3, #1
 1572 00a2 03FA06F6 		lsl	r6, r3, r6
 1573              	.LVL125:
1670:bsp/middlewares/freertos/source/tasks.c ****                     }
 1574              		.loc 1 1670 25 is_stmt 0 view .LVU442
 1575 00a6 0C4A     		ldr	r2, .L121+8
 1576 00a8 1368     		ldr	r3, [r2]
 1577 00aa 23EA0603 		bic	r3, r3, r6
 1578 00ae 1360     		str	r3, [r2]
 1579              	.L114:
1674:bsp/middlewares/freertos/source/tasks.c ****                     }
 1580              		.loc 1 1674 49 is_stmt 1 view .LVU443
1677:bsp/middlewares/freertos/source/tasks.c ****                 }
 1581              		.loc 1 1677 21 view .LVU444
1677:bsp/middlewares/freertos/source/tasks.c ****                 }
 1582              		.loc 1 1677 21 view .LVU445
 1583 00b0 E86A     		ldr	r0, [r5, #44]
 1584 00b2 0123     		movs	r3, #1
 1585 00b4 8340     		lsls	r3, r3, r0
 1586 00b6 084A     		ldr	r2, .L121+8
 1587 00b8 1168     		ldr	r1, [r2]
 1588 00ba 0B43     		orrs	r3, r3, r1
 1589 00bc 1360     		str	r3, [r2]
1677:bsp/middlewares/freertos/source/tasks.c ****                 }
 1590              		.loc 1 1677 21 view .LVU446
 1591 00be 00EB8000 		add	r0, r0, r0, lsl #2
 1592 00c2 2146     		mov	r1, r4
 1593 00c4 034B     		ldr	r3, .L121+4
 1594 00c6 03EB8000 		add	r0, r3, r0, lsl #2
 1595 00ca FFF7FEFF 		bl	vListInsertEnd
 1596              	.LVL126:
1677:bsp/middlewares/freertos/source/tasks.c ****                 }
 1597              		.loc 1 1677 51 view .LVU447
 1598 00ce CEE7     		b	.L113
 1599              	.L122:
 1600              		.align	2
 1601              	.L121:
 1602 00d0 00000000 		.word	.LANCHOR10
 1603 00d4 00000000 		.word	.LANCHOR4
 1604 00d8 00000000 		.word	.LANCHOR13
 1605              		.cfi_endproc
 1606              	.LFE13:
 1608              		.section	.text.vTaskResume,"ax",%progbits
 1609              		.align	1
 1610              		.global	vTaskResume
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1615              	vTaskResume:
 1616              	.LVL127:
 1617              	.LFB16:
1859:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1618              		.loc 1 1859 5 view -0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 134


1859:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1622              		.loc 1 1859 5 is_stmt 0 view .LVU449
 1623 0000 38B5     		push	{r3, r4, r5, lr}
 1624              	.LCFI16:
 1625              		.cfi_def_cfa_offset 16
 1626              		.cfi_offset 3, -16
 1627              		.cfi_offset 4, -12
 1628              		.cfi_offset 5, -8
 1629              		.cfi_offset 14, -4
1860:bsp/middlewares/freertos/source/tasks.c **** 
 1630              		.loc 1 1860 9 is_stmt 1 view .LVU450
 1631              	.LVL128:
1863:bsp/middlewares/freertos/source/tasks.c **** 
 1632              		.loc 1 1863 9 view .LVU451
 1633 0002 68B1     		cbz	r0, .L129
 1634 0004 0446     		mov	r4, r0
1863:bsp/middlewares/freertos/source/tasks.c **** 
 1635              		.loc 1 1863 38 discriminator 2 view .LVU452
1867:bsp/middlewares/freertos/source/tasks.c ****         {
 1636              		.loc 1 1867 9 discriminator 2 view .LVU453
1867:bsp/middlewares/freertos/source/tasks.c ****         {
 1637              		.loc 1 1867 21 is_stmt 0 discriminator 2 view .LVU454
 1638 0006 1D4B     		ldr	r3, .L131
 1639 0008 1B68     		ldr	r3, [r3]
1867:bsp/middlewares/freertos/source/tasks.c ****         {
 1640              		.loc 1 1867 11 discriminator 2 view .LVU455
 1641 000a 8342     		cmp	r3, r0
 1642 000c 07D0     		beq	.L123
1869:bsp/middlewares/freertos/source/tasks.c ****             {
 1643              		.loc 1 1869 13 is_stmt 1 view .LVU456
 1644 000e FFF7FEFF 		bl	vPortEnterCritical
 1645              	.LVL129:
1871:bsp/middlewares/freertos/source/tasks.c ****                 {
 1646              		.loc 1 1871 17 view .LVU457
1871:bsp/middlewares/freertos/source/tasks.c ****                 {
 1647              		.loc 1 1871 21 is_stmt 0 view .LVU458
 1648 0012 2046     		mov	r0, r4
 1649 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1650              	.LVL130:
1871:bsp/middlewares/freertos/source/tasks.c ****                 {
 1651              		.loc 1 1871 19 view .LVU459
 1652 0018 58B9     		cbnz	r0, .L130
 1653              	.L127:
1895:bsp/middlewares/freertos/source/tasks.c ****                 }
 1654              		.loc 1 1895 45 is_stmt 1 view .LVU460
1898:bsp/middlewares/freertos/source/tasks.c ****         }
 1655              		.loc 1 1898 13 view .LVU461
 1656 001a FFF7FEFF 		bl	vPortExitCritical
 1657              	.LVL131:
1902:bsp/middlewares/freertos/source/tasks.c ****         }
 1658              		.loc 1 1902 37 view .LVU462
 1659              	.L123:
1904:bsp/middlewares/freertos/source/tasks.c **** 
 1660              		.loc 1 1904 5 is_stmt 0 view .LVU463
 1661 001e 38BD     		pop	{r3, r4, r5, pc}
 1662              	.LVL132:
 1663              	.L129:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 135


1863:bsp/middlewares/freertos/source/tasks.c **** 
 1664              		.loc 1 1863 9 is_stmt 1 view .LVU464
 1665              	.LBB126:
 1666              	.LBI126:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1667              		.loc 2 193 34 view .LVU465
 1668              	.LBB127:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1669              		.loc 2 195 9 view .LVU466
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1670              		.loc 2 197 9 view .LVU467
 1671              		.syntax unified
 1672              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1673 0020 4FF01003 			mov r3, #16												
 1674 0024 83F31188 		msr basepri, r3											
 1675 0028 BFF36F8F 		isb														
 1676 002c BFF34F8F 		dsb														
 1677              	
 1678              	@ 0 "" 2
 1679              	.LVL133:
 1680              		.thumb
 1681              		.syntax unified
 1682              	.L125:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1683              		.loc 2 197 9 is_stmt 0 view .LVU468
 1684              	.LBE127:
 1685              	.LBE126:
1863:bsp/middlewares/freertos/source/tasks.c **** 
 1686              		.loc 1 1863 9 is_stmt 1 discriminator 1 view .LVU469
1863:bsp/middlewares/freertos/source/tasks.c **** 
 1687              		.loc 1 1863 9 discriminator 1 view .LVU470
1863:bsp/middlewares/freertos/source/tasks.c **** 
 1688              		.loc 1 1863 9 discriminator 1 view .LVU471
 1689 0030 FEE7     		b	.L125
 1690              	.LVL134:
 1691              	.L130:
1873:bsp/middlewares/freertos/source/tasks.c **** 
 1692              		.loc 1 1873 46 view .LVU472
1877:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1693              		.loc 1 1877 21 view .LVU473
1877:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1694              		.loc 1 1877 30 is_stmt 0 view .LVU474
 1695 0032 251D     		adds	r5, r4, #4
 1696 0034 2846     		mov	r0, r5
 1697 0036 FFF7FEFF 		bl	uxListRemove
 1698              	.LVL135:
1878:bsp/middlewares/freertos/source/tasks.c **** 
 1699              		.loc 1 1878 21 is_stmt 1 view .LVU475
1878:bsp/middlewares/freertos/source/tasks.c **** 
 1700              		.loc 1 1878 21 view .LVU476
 1701 003a E06A     		ldr	r0, [r4, #44]
 1702 003c 0123     		movs	r3, #1
 1703 003e 8340     		lsls	r3, r3, r0
 1704 0040 0F4A     		ldr	r2, .L131+4
 1705 0042 1168     		ldr	r1, [r2]
 1706 0044 0B43     		orrs	r3, r3, r1
 1707 0046 1360     		str	r3, [r2]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 136


1878:bsp/middlewares/freertos/source/tasks.c **** 
 1708              		.loc 1 1878 21 view .LVU477
 1709 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1710 004c 2946     		mov	r1, r5
 1711 004e 0D4B     		ldr	r3, .L131+8
 1712 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1713 0054 FFF7FEFF 		bl	vListInsertEnd
 1714              	.LVL136:
1878:bsp/middlewares/freertos/source/tasks.c **** 
 1715              		.loc 1 1878 51 view .LVU478
1881:bsp/middlewares/freertos/source/tasks.c ****                     {
 1716              		.loc 1 1881 21 view .LVU479
1881:bsp/middlewares/freertos/source/tasks.c ****                     {
 1717              		.loc 1 1881 30 is_stmt 0 view .LVU480
 1718 0058 E26A     		ldr	r2, [r4, #44]
1881:bsp/middlewares/freertos/source/tasks.c ****                     {
 1719              		.loc 1 1881 58 view .LVU481
 1720 005a 084B     		ldr	r3, .L131
 1721 005c 1B68     		ldr	r3, [r3]
 1722 005e DB6A     		ldr	r3, [r3, #44]
1881:bsp/middlewares/freertos/source/tasks.c ****                     {
 1723              		.loc 1 1881 23 view .LVU482
 1724 0060 9A42     		cmp	r2, r3
 1725 0062 DAD3     		bcc	.L127
1886:bsp/middlewares/freertos/source/tasks.c ****                     }
 1726              		.loc 1 1886 25 is_stmt 1 view .LVU483
 1727 0064 4FF0E023 		mov	r3, #-536813568
 1728 0068 4FF08052 		mov	r2, #268435456
 1729 006c C3F8042D 		str	r2, [r3, #3332]
1886:bsp/middlewares/freertos/source/tasks.c ****                     }
 1730              		.loc 1 1886 25 view .LVU484
 1731              		.syntax unified
 1732              	@ 1886 "bsp/middlewares/freertos/source/tasks.c" 1
 1733 0070 BFF34F8F 		dsb
 1734              	@ 0 "" 2
1886:bsp/middlewares/freertos/source/tasks.c ****                     }
 1735              		.loc 1 1886 25 view .LVU485
 1736              	@ 1886 "bsp/middlewares/freertos/source/tasks.c" 1
 1737 0074 BFF36F8F 		isb
 1738              	@ 0 "" 2
1886:bsp/middlewares/freertos/source/tasks.c ****                     }
 1739              		.loc 1 1886 56 view .LVU486
 1740              		.thumb
 1741              		.syntax unified
 1742 0078 CFE7     		b	.L127
 1743              	.L132:
 1744 007a 00BF     		.align	2
 1745              	.L131:
 1746 007c 00000000 		.word	.LANCHOR10
 1747 0080 00000000 		.word	.LANCHOR13
 1748 0084 00000000 		.word	.LANCHOR4
 1749              		.cfi_endproc
 1750              	.LFE16:
 1752              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1753              		.align	1
 1754              		.global	xTaskResumeFromISR
 1755              		.syntax unified
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 137


 1756              		.thumb
 1757              		.thumb_func
 1759              	xTaskResumeFromISR:
 1760              	.LVL137:
 1761              	.LFB17:
1913:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 1762              		.loc 1 1913 5 view -0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
1913:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 1766              		.loc 1 1913 5 is_stmt 0 view .LVU488
 1767 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1768              	.LCFI17:
 1769              		.cfi_def_cfa_offset 24
 1770              		.cfi_offset 3, -24
 1771              		.cfi_offset 4, -20
 1772              		.cfi_offset 5, -16
 1773              		.cfi_offset 6, -12
 1774              		.cfi_offset 7, -8
 1775              		.cfi_offset 14, -4
1914:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1776              		.loc 1 1914 9 is_stmt 1 view .LVU489
 1777              	.LVL138:
1915:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 1778              		.loc 1 1915 9 view .LVU490
1916:bsp/middlewares/freertos/source/tasks.c **** 
 1779              		.loc 1 1916 9 view .LVU491
1918:bsp/middlewares/freertos/source/tasks.c **** 
 1780              		.loc 1 1918 9 view .LVU492
 1781 0002 0028     		cmp	r0, #0
 1782 0004 34D0     		beq	.L141
 1783 0006 0446     		mov	r4, r0
1918:bsp/middlewares/freertos/source/tasks.c **** 
 1784              		.loc 1 1918 38 discriminator 2 view .LVU493
1936:bsp/middlewares/freertos/source/tasks.c **** 
 1785              		.loc 1 1936 9 discriminator 2 view .LVU494
 1786 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1787              	.LVL139:
1938:bsp/middlewares/freertos/source/tasks.c ****         {
 1788              		.loc 1 1938 9 discriminator 2 view .LVU495
 1789              	.LBB128:
 1790              	.LBI128:
 209:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1791              		.loc 2 209 38 discriminator 2 view .LVU496
 1792              	.LBB129:
 211:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1793              		.loc 2 211 9 discriminator 2 view .LVU497
 213:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1794              		.loc 2 213 9 discriminator 2 view .LVU498
 1795              		.syntax unified
 1796              	@ 213 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1797 000c EFF31186 			mrs r6, basepri											
 1798 0010 4FF01003 		mov r3, #16												
 1799 0014 83F31188 		msr basepri, r3											
 1800 0018 BFF36F8F 		isb														
 1801 001c BFF34F8F 		dsb														
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 138


 1802              	
 1803              	@ 0 "" 2
 1804              	.LVL140:
 225:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 1805              		.loc 2 225 9 discriminator 2 view .LVU499
 225:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 1806              		.loc 2 225 9 is_stmt 0 discriminator 2 view .LVU500
 1807              		.thumb
 1808              		.syntax unified
 1809              	.LBE129:
 1810              	.LBE128:
1940:bsp/middlewares/freertos/source/tasks.c ****             {
 1811              		.loc 1 1940 13 is_stmt 1 discriminator 2 view .LVU501
1940:bsp/middlewares/freertos/source/tasks.c ****             {
 1812              		.loc 1 1940 17 is_stmt 0 discriminator 2 view .LVU502
 1813 0020 2046     		mov	r0, r4
 1814 0022 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1815              	.LVL141:
1940:bsp/middlewares/freertos/source/tasks.c ****             {
 1816              		.loc 1 1940 15 discriminator 2 view .LVU503
 1817 0026 0546     		mov	r5, r0
 1818 0028 F0B1     		cbz	r0, .L136
1942:bsp/middlewares/freertos/source/tasks.c **** 
 1819              		.loc 1 1942 51 is_stmt 1 view .LVU504
1945:bsp/middlewares/freertos/source/tasks.c ****                 {
 1820              		.loc 1 1945 17 view .LVU505
1945:bsp/middlewares/freertos/source/tasks.c ****                 {
 1821              		.loc 1 1945 42 is_stmt 0 view .LVU506
 1822 002a 1A4B     		ldr	r3, .L142
 1823 002c 1B68     		ldr	r3, [r3]
1945:bsp/middlewares/freertos/source/tasks.c ****                 {
 1824              		.loc 1 1945 19 view .LVU507
 1825 002e 53BB     		cbnz	r3, .L137
1949:bsp/middlewares/freertos/source/tasks.c ****                     {
 1826              		.loc 1 1949 21 is_stmt 1 view .LVU508
1949:bsp/middlewares/freertos/source/tasks.c ****                     {
 1827              		.loc 1 1949 30 is_stmt 0 view .LVU509
 1828 0030 E26A     		ldr	r2, [r4, #44]
1949:bsp/middlewares/freertos/source/tasks.c ****                     {
 1829              		.loc 1 1949 58 view .LVU510
 1830 0032 194B     		ldr	r3, .L142+4
 1831 0034 1B68     		ldr	r3, [r3]
 1832 0036 DB6A     		ldr	r3, [r3, #44]
1949:bsp/middlewares/freertos/source/tasks.c ****                     {
 1833              		.loc 1 1949 23 view .LVU511
 1834 0038 9A42     		cmp	r2, r3
 1835 003a 22D3     		bcc	.L139
1951:bsp/middlewares/freertos/source/tasks.c **** 
 1836              		.loc 1 1951 25 is_stmt 1 view .LVU512
 1837              	.LVL142:
1956:bsp/middlewares/freertos/source/tasks.c ****                     }
 1838              		.loc 1 1956 25 view .LVU513
1956:bsp/middlewares/freertos/source/tasks.c ****                     }
 1839              		.loc 1 1956 39 is_stmt 0 view .LVU514
 1840 003c 0125     		movs	r5, #1
 1841 003e 174B     		ldr	r3, .L142+8
 1842 0040 1D60     		str	r5, [r3]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 139


 1843              	.LVL143:
 1844              	.L138:
1960:bsp/middlewares/freertos/source/tasks.c ****                     }
 1845              		.loc 1 1960 49 is_stmt 1 view .LVU515
1963:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1846              		.loc 1 1963 21 view .LVU516
1963:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 1847              		.loc 1 1963 30 is_stmt 0 view .LVU517
 1848 0042 271D     		adds	r7, r4, #4
 1849 0044 3846     		mov	r0, r7
 1850 0046 FFF7FEFF 		bl	uxListRemove
 1851              	.LVL144:
1964:bsp/middlewares/freertos/source/tasks.c ****                 }
 1852              		.loc 1 1964 21 is_stmt 1 view .LVU518
1964:bsp/middlewares/freertos/source/tasks.c ****                 }
 1853              		.loc 1 1964 21 view .LVU519
 1854 004a E06A     		ldr	r0, [r4, #44]
 1855 004c 0123     		movs	r3, #1
 1856 004e 8340     		lsls	r3, r3, r0
 1857 0050 134A     		ldr	r2, .L142+12
 1858 0052 1168     		ldr	r1, [r2]
 1859 0054 0B43     		orrs	r3, r3, r1
 1860 0056 1360     		str	r3, [r2]
1964:bsp/middlewares/freertos/source/tasks.c ****                 }
 1861              		.loc 1 1964 21 view .LVU520
 1862 0058 00EB8000 		add	r0, r0, r0, lsl #2
 1863 005c 3946     		mov	r1, r7
 1864 005e 114B     		ldr	r3, .L142+16
 1865 0060 03EB8000 		add	r0, r3, r0, lsl #2
 1866 0064 FFF7FEFF 		bl	vListInsertEnd
 1867              	.LVL145:
1964:bsp/middlewares/freertos/source/tasks.c ****                 }
 1868              		.loc 1 1964 51 view .LVU521
 1869              	.L136:
1976:bsp/middlewares/freertos/source/tasks.c ****             }
 1870              		.loc 1 1976 41 view .LVU522
1979:bsp/middlewares/freertos/source/tasks.c **** 
 1871              		.loc 1 1979 9 view .LVU523
 1872              	.LBB130:
 1873              	.LBI130:
 229:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1874              		.loc 2 229 34 view .LVU524
 1875              	.LBB131:
 1876              		.loc 2 231 9 view .LVU525
 1877              		.syntax unified
 1878              	@ 231 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1879 0068 86F31188 			msr basepri, r6	
 1880              	@ 0 "" 2
 1881              	.LVL146:
 1882              		.loc 2 231 9 is_stmt 0 view .LVU526
 1883              		.thumb
 1884              		.syntax unified
 1885              	.LBE131:
 1886              	.LBE130:
1981:bsp/middlewares/freertos/source/tasks.c ****     }
 1887              		.loc 1 1981 9 is_stmt 1 view .LVU527
1982:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 140


 1888              		.loc 1 1982 5 is_stmt 0 view .LVU528
 1889 006c 2846     		mov	r0, r5
 1890 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1891              	.LVL147:
 1892              	.L141:
1918:bsp/middlewares/freertos/source/tasks.c **** 
 1893              		.loc 1 1918 9 is_stmt 1 view .LVU529
 1894              	.LBB132:
 1895              	.LBI132:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1896              		.loc 2 193 34 view .LVU530
 1897              	.LBB133:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1898              		.loc 2 195 9 view .LVU531
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1899              		.loc 2 197 9 view .LVU532
 1900              		.syntax unified
 1901              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1902 0070 4FF01003 			mov r3, #16												
 1903 0074 83F31188 		msr basepri, r3											
 1904 0078 BFF36F8F 		isb														
 1905 007c BFF34F8F 		dsb														
 1906              	
 1907              	@ 0 "" 2
 1908              	.LVL148:
 1909              		.thumb
 1910              		.syntax unified
 1911              	.L135:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1912              		.loc 2 197 9 is_stmt 0 view .LVU533
 1913              	.LBE133:
 1914              	.LBE132:
1918:bsp/middlewares/freertos/source/tasks.c **** 
 1915              		.loc 1 1918 9 is_stmt 1 discriminator 1 view .LVU534
1918:bsp/middlewares/freertos/source/tasks.c **** 
 1916              		.loc 1 1918 9 discriminator 1 view .LVU535
1918:bsp/middlewares/freertos/source/tasks.c **** 
 1917              		.loc 1 1918 9 discriminator 1 view .LVU536
 1918 0080 FEE7     		b	.L135
 1919              	.LVL149:
 1920              	.L139:
1914:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1921              		.loc 1 1914 20 is_stmt 0 view .LVU537
 1922 0082 0025     		movs	r5, #0
 1923 0084 DDE7     		b	.L138
 1924              	.L137:
1971:bsp/middlewares/freertos/source/tasks.c ****                 }
 1925              		.loc 1 1971 21 is_stmt 1 view .LVU538
 1926 0086 04F11801 		add	r1, r4, #24
 1927 008a 0748     		ldr	r0, .L142+20
 1928 008c FFF7FEFF 		bl	vListInsertEnd
 1929              	.LVL150:
1914:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1930              		.loc 1 1914 20 is_stmt 0 view .LVU539
 1931 0090 0025     		movs	r5, #0
 1932 0092 E9E7     		b	.L136
 1933              	.L143:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 141


 1934              		.align	2
 1935              	.L142:
 1936 0094 00000000 		.word	.LANCHOR16
 1937 0098 00000000 		.word	.LANCHOR10
 1938 009c 00000000 		.word	.LANCHOR17
 1939 00a0 00000000 		.word	.LANCHOR13
 1940 00a4 00000000 		.word	.LANCHOR4
 1941 00a8 00000000 		.word	.LANCHOR1
 1942              		.cfi_endproc
 1943              	.LFE17:
 1945              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 1946              		.align	2
 1947              	.LC0:
 1948 0000 49444C45 		.ascii	"IDLE\000"
 1948      00
 1949              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1950              		.align	1
 1951              		.global	vTaskStartScheduler
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1956              	vTaskStartScheduler:
 1957              	.LFB18:
1988:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xReturn;
 1958              		.loc 1 1988 1 is_stmt 1 view -0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
 1962 0000 00B5     		push	{lr}
 1963              	.LCFI18:
 1964              		.cfi_def_cfa_offset 4
 1965              		.cfi_offset 14, -4
 1966 0002 83B0     		sub	sp, sp, #12
 1967              	.LCFI19:
 1968              		.cfi_def_cfa_offset 16
1989:bsp/middlewares/freertos/source/tasks.c **** 
 1969              		.loc 1 1989 5 view .LVU541
2021:bsp/middlewares/freertos/source/tasks.c ****                                    configIDLE_TASK_NAME,
 1970              		.loc 1 2021 13 view .LVU542
2021:bsp/middlewares/freertos/source/tasks.c ****                                    configIDLE_TASK_NAME,
 1971              		.loc 1 2021 23 is_stmt 0 view .LVU543
 1972 0004 184B     		ldr	r3, .L151
 1973 0006 0193     		str	r3, [sp, #4]
 1974 0008 0023     		movs	r3, #0
 1975 000a 0093     		str	r3, [sp]
 1976 000c 8022     		movs	r2, #128
 1977 000e 1749     		ldr	r1, .L151+4
 1978 0010 1748     		ldr	r0, .L151+8
 1979 0012 FFF7FEFF 		bl	xTaskCreate
 1980              	.LVL151:
2043:bsp/middlewares/freertos/source/tasks.c ****     {
 1981              		.loc 1 2043 5 is_stmt 1 view .LVU544
2043:bsp/middlewares/freertos/source/tasks.c ****     {
 1982              		.loc 1 2043 7 is_stmt 0 view .LVU545
 1983 0016 0128     		cmp	r0, #1
 1984 0018 07D0     		beq	.L149
2102:bsp/middlewares/freertos/source/tasks.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 142


 1985              		.loc 1 2102 9 is_stmt 1 view .LVU546
 1986 001a B0F1FF3F 		cmp	r0, #-1
 1987 001e 19D0     		beq	.L150
 1988              	.LVL152:
 1989              	.L146:
2102:bsp/middlewares/freertos/source/tasks.c ****     }
 1990              		.loc 1 2102 73 discriminator 2 view .LVU547
2107:bsp/middlewares/freertos/source/tasks.c **** 
 1991              		.loc 1 2107 5 discriminator 2 view .LVU548
2111:bsp/middlewares/freertos/source/tasks.c **** }
 1992              		.loc 1 2111 5 discriminator 2 view .LVU549
 1993 0020 144B     		ldr	r3, .L151+12
 1994 0022 1B68     		ldr	r3, [r3]
2112:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 1995              		.loc 1 2112 1 is_stmt 0 discriminator 2 view .LVU550
 1996 0024 03B0     		add	sp, sp, #12
 1997              	.LCFI20:
 1998              		.cfi_remember_state
 1999              		.cfi_def_cfa_offset 4
 2000              		@ sp needed
 2001 0026 5DF804FB 		ldr	pc, [sp], #4
 2002              	.LVL153:
 2003              	.L149:
 2004              	.LCFI21:
 2005              		.cfi_restore_state
2059:bsp/middlewares/freertos/source/tasks.c **** 
 2006              		.loc 1 2059 9 is_stmt 1 view .LVU551
 2007              	.LBB134:
 2008              	.LBI134:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2009              		.loc 2 193 34 view .LVU552
 2010              	.LBB135:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2011              		.loc 2 195 9 view .LVU553
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2012              		.loc 2 197 9 view .LVU554
 2013              		.syntax unified
 2014              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2015 002a 4FF01003 			mov r3, #16												
 2016 002e 83F31188 		msr basepri, r3											
 2017 0032 BFF36F8F 		isb														
 2018 0036 BFF34F8F 		dsb														
 2019              	
 2020              	@ 0 "" 2
 2021              		.thumb
 2022              		.syntax unified
 2023              	.LBE135:
 2024              	.LBE134:
2071:bsp/middlewares/freertos/source/tasks.c ****         xSchedulerRunning = pdTRUE;
 2025              		.loc 1 2071 9 view .LVU555
2071:bsp/middlewares/freertos/source/tasks.c ****         xSchedulerRunning = pdTRUE;
 2026              		.loc 1 2071 30 is_stmt 0 view .LVU556
 2027 003a 0F4B     		ldr	r3, .L151+16
 2028 003c 4FF0FF32 		mov	r2, #-1
 2029 0040 1A60     		str	r2, [r3]
2072:bsp/middlewares/freertos/source/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2030              		.loc 1 2072 9 is_stmt 1 view .LVU557
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 143


2072:bsp/middlewares/freertos/source/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2031              		.loc 1 2072 27 is_stmt 0 view .LVU558
 2032 0042 0E4B     		ldr	r3, .L151+20
 2033 0044 0122     		movs	r2, #1
 2034 0046 1A60     		str	r2, [r3]
2073:bsp/middlewares/freertos/source/tasks.c **** 
 2035              		.loc 1 2073 9 is_stmt 1 view .LVU559
2073:bsp/middlewares/freertos/source/tasks.c **** 
 2036              		.loc 1 2073 20 is_stmt 0 view .LVU560
 2037 0048 0D4B     		ldr	r3, .L151+24
 2038 004a 0022     		movs	r2, #0
 2039 004c 1A60     		str	r2, [r3]
2081:bsp/middlewares/freertos/source/tasks.c **** 
 2040              		.loc 1 2081 49 is_stmt 1 view .LVU561
2083:bsp/middlewares/freertos/source/tasks.c **** 
 2041              		.loc 1 2083 32 view .LVU562
2087:bsp/middlewares/freertos/source/tasks.c ****         {
 2042              		.loc 1 2087 9 view .LVU563
2087:bsp/middlewares/freertos/source/tasks.c ****         {
 2043              		.loc 1 2087 13 is_stmt 0 view .LVU564
 2044 004e FFF7FEFF 		bl	xPortStartScheduler
 2045              	.LVL154:
2087:bsp/middlewares/freertos/source/tasks.c ****         {
 2046              		.loc 1 2087 13 view .LVU565
 2047 0052 E5E7     		b	.L146
 2048              	.LVL155:
 2049              	.L150:
2102:bsp/middlewares/freertos/source/tasks.c ****     }
 2050              		.loc 1 2102 9 is_stmt 1 view .LVU566
 2051              	.LBB136:
 2052              	.LBI136:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2053              		.loc 2 193 34 view .LVU567
 2054              	.LBB137:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2055              		.loc 2 195 9 view .LVU568
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2056              		.loc 2 197 9 view .LVU569
 2057              		.syntax unified
 2058              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2059 0054 4FF01003 			mov r3, #16												
 2060 0058 83F31188 		msr basepri, r3											
 2061 005c BFF36F8F 		isb														
 2062 0060 BFF34F8F 		dsb														
 2063              	
 2064              	@ 0 "" 2
 2065              	.LVL156:
 2066              		.thumb
 2067              		.syntax unified
 2068              	.L147:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2069              		.loc 2 197 9 is_stmt 0 view .LVU570
 2070              	.LBE137:
 2071              	.LBE136:
2102:bsp/middlewares/freertos/source/tasks.c ****     }
 2072              		.loc 1 2102 9 is_stmt 1 discriminator 2 view .LVU571
2102:bsp/middlewares/freertos/source/tasks.c ****     }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 144


 2073              		.loc 1 2102 9 discriminator 2 view .LVU572
2102:bsp/middlewares/freertos/source/tasks.c ****     }
 2074              		.loc 1 2102 9 discriminator 2 view .LVU573
 2075 0064 FEE7     		b	.L147
 2076              	.L152:
 2077 0066 00BF     		.align	2
 2078              	.L151:
 2079 0068 00000000 		.word	.LANCHOR18
 2080 006c 00000000 		.word	.LC0
 2081 0070 00000000 		.word	prvIdleTask
 2082 0074 00000000 		.word	.LANCHOR19
 2083 0078 00000000 		.word	.LANCHOR3
 2084 007c 00000000 		.word	.LANCHOR11
 2085 0080 00000000 		.word	.LANCHOR15
 2086              		.cfi_endproc
 2087              	.LFE18:
 2089              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2090              		.align	1
 2091              		.global	vTaskEndScheduler
 2092              		.syntax unified
 2093              		.thumb
 2094              		.thumb_func
 2096              	vTaskEndScheduler:
 2097              	.LFB19:
2116:bsp/middlewares/freertos/source/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
 2098              		.loc 1 2116 1 view -0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102 0000 08B5     		push	{r3, lr}
 2103              	.LCFI22:
 2104              		.cfi_def_cfa_offset 8
 2105              		.cfi_offset 3, -8
 2106              		.cfi_offset 14, -4
2120:bsp/middlewares/freertos/source/tasks.c ****     xSchedulerRunning = pdFALSE;
 2107              		.loc 1 2120 5 view .LVU575
 2108              	.LBB138:
 2109              	.LBI138:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2110              		.loc 2 193 34 view .LVU576
 2111              	.LBB139:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2112              		.loc 2 195 9 view .LVU577
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2113              		.loc 2 197 9 view .LVU578
 2114              		.syntax unified
 2115              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2116 0002 4FF01003 			mov r3, #16												
 2117 0006 83F31188 		msr basepri, r3											
 2118 000a BFF36F8F 		isb														
 2119 000e BFF34F8F 		dsb														
 2120              	
 2121              	@ 0 "" 2
 2122              		.thumb
 2123              		.syntax unified
 2124              	.LBE139:
 2125              	.LBE138:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 145


2121:bsp/middlewares/freertos/source/tasks.c ****     vPortEndScheduler();
 2126              		.loc 1 2121 5 view .LVU579
2121:bsp/middlewares/freertos/source/tasks.c ****     vPortEndScheduler();
 2127              		.loc 1 2121 23 is_stmt 0 view .LVU580
 2128 0012 034B     		ldr	r3, .L155
 2129 0014 0022     		movs	r2, #0
 2130 0016 1A60     		str	r2, [r3]
2122:bsp/middlewares/freertos/source/tasks.c **** }
 2131              		.loc 1 2122 5 is_stmt 1 view .LVU581
 2132 0018 FFF7FEFF 		bl	vPortEndScheduler
 2133              	.LVL157:
2123:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
 2134              		.loc 1 2123 1 is_stmt 0 view .LVU582
 2135 001c 08BD     		pop	{r3, pc}
 2136              	.L156:
 2137 001e 00BF     		.align	2
 2138              	.L155:
 2139 0020 00000000 		.word	.LANCHOR11
 2140              		.cfi_endproc
 2141              	.LFE19:
 2143              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2144              		.align	1
 2145              		.global	vTaskSuspendAll
 2146              		.syntax unified
 2147              		.thumb
 2148              		.thumb_func
 2150              	vTaskSuspendAll:
 2151              	.LFB20:
2127:bsp/middlewares/freertos/source/tasks.c ****     /* A critical section is not required as the variable is of type
 2152              		.loc 1 2127 1 is_stmt 1 view -0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              		@ link register save eliminated.
2135:bsp/middlewares/freertos/source/tasks.c **** 
 2157              		.loc 1 2135 27 view .LVU584
2139:bsp/middlewares/freertos/source/tasks.c **** 
 2158              		.loc 1 2139 5 view .LVU585
 2159 0000 024A     		ldr	r2, .L158
 2160 0002 1368     		ldr	r3, [r2]
 2161 0004 0133     		adds	r3, r3, #1
 2162 0006 1360     		str	r3, [r2]
2143:bsp/middlewares/freertos/source/tasks.c **** }
 2163              		.loc 1 2143 5 view .LVU586
2144:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
 2164              		.loc 1 2144 1 is_stmt 0 view .LVU587
 2165 0008 7047     		bx	lr
 2166              	.L159:
 2167 000a 00BF     		.align	2
 2168              	.L158:
 2169 000c 00000000 		.word	.LANCHOR16
 2170              		.cfi_endproc
 2171              	.LFE20:
 2173              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2174              		.align	1
 2175              		.global	xTaskGetTickCount
 2176              		.syntax unified
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 146


 2177              		.thumb
 2178              		.thumb_func
 2180              	xTaskGetTickCount:
 2181              	.LFB22:
2322:bsp/middlewares/freertos/source/tasks.c ****     TickType_t xTicks;
 2182              		.loc 1 2322 1 is_stmt 1 view -0
 2183              		.cfi_startproc
 2184              		@ args = 0, pretend = 0, frame = 0
 2185              		@ frame_needed = 0, uses_anonymous_args = 0
 2186              		@ link register save eliminated.
2323:bsp/middlewares/freertos/source/tasks.c **** 
 2187              		.loc 1 2323 5 view .LVU589
2326:bsp/middlewares/freertos/source/tasks.c ****     {
 2188              		.loc 1 2326 35 view .LVU590
2328:bsp/middlewares/freertos/source/tasks.c ****     }
 2189              		.loc 1 2328 9 view .LVU591
2328:bsp/middlewares/freertos/source/tasks.c ****     }
 2190              		.loc 1 2328 16 is_stmt 0 view .LVU592
 2191 0000 014B     		ldr	r3, .L161
 2192 0002 1868     		ldr	r0, [r3]
 2193              	.LVL158:
2330:bsp/middlewares/freertos/source/tasks.c **** 
 2194              		.loc 1 2330 34 is_stmt 1 view .LVU593
2332:bsp/middlewares/freertos/source/tasks.c **** }
 2195              		.loc 1 2332 5 view .LVU594
2333:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 2196              		.loc 1 2333 1 is_stmt 0 view .LVU595
 2197 0004 7047     		bx	lr
 2198              	.L162:
 2199 0006 00BF     		.align	2
 2200              	.L161:
 2201 0008 00000000 		.word	.LANCHOR15
 2202              		.cfi_endproc
 2203              	.LFE22:
 2205              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2206              		.align	1
 2207              		.global	xTaskGetTickCountFromISR
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2212              	xTaskGetTickCountFromISR:
 2213              	.LFB23:
2337:bsp/middlewares/freertos/source/tasks.c ****     TickType_t xReturn;
 2214              		.loc 1 2337 1 is_stmt 1 view -0
 2215              		.cfi_startproc
 2216              		@ args = 0, pretend = 0, frame = 0
 2217              		@ frame_needed = 0, uses_anonymous_args = 0
 2218 0000 08B5     		push	{r3, lr}
 2219              	.LCFI23:
 2220              		.cfi_def_cfa_offset 8
 2221              		.cfi_offset 3, -8
 2222              		.cfi_offset 14, -4
2338:bsp/middlewares/freertos/source/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
 2223              		.loc 1 2338 5 view .LVU597
2339:bsp/middlewares/freertos/source/tasks.c **** 
 2224              		.loc 1 2339 5 view .LVU598
2355:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 147


 2225              		.loc 1 2355 5 view .LVU599
 2226 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2227              	.LVL159:
2357:bsp/middlewares/freertos/source/tasks.c ****     {
 2228              		.loc 1 2357 5 view .LVU600
2359:bsp/middlewares/freertos/source/tasks.c ****     }
 2229              		.loc 1 2359 9 view .LVU601
2359:bsp/middlewares/freertos/source/tasks.c ****     }
 2230              		.loc 1 2359 17 is_stmt 0 view .LVU602
 2231 0006 014B     		ldr	r3, .L165
 2232 0008 1868     		ldr	r0, [r3]
 2233              	.LVL160:
2361:bsp/middlewares/freertos/source/tasks.c **** 
 2234              		.loc 1 2361 5 is_stmt 1 view .LVU603
2363:bsp/middlewares/freertos/source/tasks.c **** }
 2235              		.loc 1 2363 5 view .LVU604
2364:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 2236              		.loc 1 2364 1 is_stmt 0 view .LVU605
 2237 000a 08BD     		pop	{r3, pc}
 2238              	.L166:
 2239              		.align	2
 2240              	.L165:
 2241 000c 00000000 		.word	.LANCHOR15
 2242              		.cfi_endproc
 2243              	.LFE23:
 2245              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2246              		.align	1
 2247              		.global	uxTaskGetNumberOfTasks
 2248              		.syntax unified
 2249              		.thumb
 2250              		.thumb_func
 2252              	uxTaskGetNumberOfTasks:
 2253              	.LFB24:
2368:bsp/middlewares/freertos/source/tasks.c ****     /* A critical section is not required because the variables are of type
 2254              		.loc 1 2368 1 is_stmt 1 view -0
 2255              		.cfi_startproc
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 0, uses_anonymous_args = 0
 2258              		@ link register save eliminated.
2371:bsp/middlewares/freertos/source/tasks.c **** }
 2259              		.loc 1 2371 5 view .LVU607
2371:bsp/middlewares/freertos/source/tasks.c **** }
 2260              		.loc 1 2371 12 is_stmt 0 view .LVU608
 2261 0000 014B     		ldr	r3, .L168
 2262 0002 1868     		ldr	r0, [r3]
2372:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 2263              		.loc 1 2372 1 view .LVU609
 2264 0004 7047     		bx	lr
 2265              	.L169:
 2266 0006 00BF     		.align	2
 2267              	.L168:
 2268 0008 00000000 		.word	.LANCHOR9
 2269              		.cfi_endproc
 2270              	.LFE24:
 2272              		.section	.text.pcTaskGetName,"ax",%progbits
 2273              		.align	1
 2274              		.global	pcTaskGetName
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 148


 2275              		.syntax unified
 2276              		.thumb
 2277              		.thumb_func
 2279              	pcTaskGetName:
 2280              	.LVL161:
 2281              	.LFB25:
2376:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxTCB;
 2282              		.loc 1 2376 1 is_stmt 1 view -0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 0
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 2286              		@ link register save eliminated.
2377:bsp/middlewares/freertos/source/tasks.c **** 
 2287              		.loc 1 2377 5 view .LVU611
2381:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTCB );
 2288              		.loc 1 2381 5 view .LVU612
2381:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTCB );
 2289              		.loc 1 2381 13 is_stmt 0 view .LVU613
 2290 0000 0346     		mov	r3, r0
 2291 0002 18B1     		cbz	r0, .L174
 2292              	.LVL162:
 2293              	.L171:
2382:bsp/middlewares/freertos/source/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2294              		.loc 1 2382 5 is_stmt 1 discriminator 4 view .LVU614
 2295 0004 2BB1     		cbz	r3, .L175
2382:bsp/middlewares/freertos/source/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2296              		.loc 1 2382 26 discriminator 2 view .LVU615
2383:bsp/middlewares/freertos/source/tasks.c **** }
 2297              		.loc 1 2383 5 discriminator 2 view .LVU616
2384:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 2298              		.loc 1 2384 1 is_stmt 0 discriminator 2 view .LVU617
 2299 0006 03F13400 		add	r0, r3, #52
 2300 000a 7047     		bx	lr
 2301              	.LVL163:
 2302              	.L174:
2381:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTCB );
 2303              		.loc 1 2381 13 discriminator 1 view .LVU618
 2304 000c 054B     		ldr	r3, .L176
 2305 000e 1B68     		ldr	r3, [r3]
 2306              	.LVL164:
2381:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTCB );
 2307              		.loc 1 2381 13 discriminator 1 view .LVU619
 2308 0010 F8E7     		b	.L171
 2309              	.LVL165:
 2310              	.L175:
2382:bsp/middlewares/freertos/source/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2311              		.loc 1 2382 5 is_stmt 1 view .LVU620
 2312              	.LBB140:
 2313              	.LBI140:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2314              		.loc 2 193 34 view .LVU621
 2315              	.LBB141:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2316              		.loc 2 195 9 view .LVU622
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2317              		.loc 2 197 9 view .LVU623
 2318              		.syntax unified
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 149


 2319              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2320 0012 4FF01003 			mov r3, #16												
 2321 0016 83F31188 		msr basepri, r3											
 2322 001a BFF36F8F 		isb														
 2323 001e BFF34F8F 		dsb														
 2324              	
 2325              	@ 0 "" 2
 2326              	.LVL166:
 2327              		.thumb
 2328              		.syntax unified
 2329              	.L173:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2330              		.loc 2 197 9 is_stmt 0 view .LVU624
 2331              	.LBE141:
 2332              	.LBE140:
2382:bsp/middlewares/freertos/source/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2333              		.loc 1 2382 5 is_stmt 1 discriminator 1 view .LVU625
2382:bsp/middlewares/freertos/source/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2334              		.loc 1 2382 5 discriminator 1 view .LVU626
2382:bsp/middlewares/freertos/source/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2335              		.loc 1 2382 5 discriminator 1 view .LVU627
 2336 0022 FEE7     		b	.L173
 2337              	.L177:
 2338              		.align	2
 2339              	.L176:
 2340 0024 00000000 		.word	.LANCHOR10
 2341              		.cfi_endproc
 2342              	.LFE25:
 2344              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2345              		.align	1
 2346              		.global	xTaskIncrementTick
 2347              		.syntax unified
 2348              		.thumb
 2349              		.thumb_func
 2351              	xTaskIncrementTick:
 2352              	.LFB27:
2726:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxTCB;
 2353              		.loc 1 2726 1 view -0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 0
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2358              	.LCFI24:
 2359              		.cfi_def_cfa_offset 24
 2360              		.cfi_offset 3, -24
 2361              		.cfi_offset 4, -20
 2362              		.cfi_offset 5, -16
 2363              		.cfi_offset 6, -12
 2364              		.cfi_offset 7, -8
 2365              		.cfi_offset 14, -4
2727:bsp/middlewares/freertos/source/tasks.c ****     TickType_t xItemValue;
 2366              		.loc 1 2727 5 view .LVU629
2728:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
 2367              		.loc 1 2728 5 view .LVU630
2729:bsp/middlewares/freertos/source/tasks.c **** 
 2368              		.loc 1 2729 5 view .LVU631
 2369              	.LVL167:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 150


2734:bsp/middlewares/freertos/source/tasks.c **** 
 2370              		.loc 1 2734 43 view .LVU632
2736:bsp/middlewares/freertos/source/tasks.c ****     {
 2371              		.loc 1 2736 5 view .LVU633
2736:bsp/middlewares/freertos/source/tasks.c ****     {
 2372              		.loc 1 2736 30 is_stmt 0 view .LVU634
 2373 0002 3A4B     		ldr	r3, .L199
 2374 0004 1B68     		ldr	r3, [r3]
2736:bsp/middlewares/freertos/source/tasks.c ****     {
 2375              		.loc 1 2736 7 view .LVU635
 2376 0006 002B     		cmp	r3, #0
 2377 0008 69D1     		bne	.L179
 2378              	.LBB142:
2740:bsp/middlewares/freertos/source/tasks.c **** 
 2379              		.loc 1 2740 9 is_stmt 1 view .LVU636
2740:bsp/middlewares/freertos/source/tasks.c **** 
 2380              		.loc 1 2740 55 is_stmt 0 view .LVU637
 2381 000a 394B     		ldr	r3, .L199+4
 2382 000c 1D68     		ldr	r5, [r3]
2740:bsp/middlewares/freertos/source/tasks.c **** 
 2383              		.loc 1 2740 26 view .LVU638
 2384 000e 0135     		adds	r5, r5, #1
 2385              	.LVL168:
2744:bsp/middlewares/freertos/source/tasks.c **** 
 2386              		.loc 1 2744 9 is_stmt 1 view .LVU639
2744:bsp/middlewares/freertos/source/tasks.c **** 
 2387              		.loc 1 2744 20 is_stmt 0 view .LVU640
 2388 0010 1D60     		str	r5, [r3]
2746:bsp/middlewares/freertos/source/tasks.c ****         {
 2389              		.loc 1 2746 9 is_stmt 1 view .LVU641
2746:bsp/middlewares/freertos/source/tasks.c ****         {
 2390              		.loc 1 2746 11 is_stmt 0 view .LVU642
 2391 0012 C5B9     		cbnz	r5, .L180
 2392              	.LBB143:
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2393              		.loc 1 2748 13 is_stmt 1 view .LVU643
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2394              		.loc 1 2748 13 view .LVU644
 2395 0014 374B     		ldr	r3, .L199+8
 2396 0016 1B68     		ldr	r3, [r3]
 2397 0018 1B68     		ldr	r3, [r3]
 2398 001a 43B1     		cbz	r3, .L181
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2399              		.loc 1 2748 13 view .LVU645
 2400              	.LBB144:
 2401              	.LBI144:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2402              		.loc 2 193 34 view .LVU646
 2403              	.LBB145:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2404              		.loc 2 195 9 view .LVU647
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2405              		.loc 2 197 9 view .LVU648
 2406              		.syntax unified
 2407              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2408 001c 4FF01003 			mov r3, #16												
 2409 0020 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 151


 2410 0024 BFF36F8F 		isb														
 2411 0028 BFF34F8F 		dsb														
 2412              	
 2413              	@ 0 "" 2
 2414              	.LVL169:
 2415              		.thumb
 2416              		.syntax unified
 2417              	.L182:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2418              		.loc 2 197 9 is_stmt 0 view .LVU649
 2419              	.LBE145:
 2420              	.LBE144:
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2421              		.loc 1 2748 13 is_stmt 1 discriminator 1 view .LVU650
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2422              		.loc 1 2748 13 discriminator 1 view .LVU651
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2423              		.loc 1 2748 13 discriminator 1 view .LVU652
 2424 002c FEE7     		b	.L182
 2425              	.L181:
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2426              		.loc 1 2748 13 discriminator 2 view .LVU653
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2427              		.loc 1 2748 13 discriminator 2 view .LVU654
 2428 002e 314A     		ldr	r2, .L199+8
 2429 0030 1168     		ldr	r1, [r2]
 2430              	.LVL170:
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2431              		.loc 1 2748 13 discriminator 2 view .LVU655
 2432 0032 314B     		ldr	r3, .L199+12
 2433 0034 1868     		ldr	r0, [r3]
 2434 0036 1060     		str	r0, [r2]
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2435              		.loc 1 2748 13 discriminator 2 view .LVU656
 2436 0038 1960     		str	r1, [r3]
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2437              		.loc 1 2748 13 discriminator 2 view .LVU657
 2438 003a 304A     		ldr	r2, .L199+16
 2439 003c 1368     		ldr	r3, [r2]
 2440 003e 0133     		adds	r3, r3, #1
 2441 0040 1360     		str	r3, [r2]
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2442              		.loc 1 2748 13 discriminator 2 view .LVU658
 2443 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2444              	.LVL171:
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2445              		.loc 1 2748 13 is_stmt 0 discriminator 2 view .LVU659
 2446              	.LBE143:
2748:bsp/middlewares/freertos/source/tasks.c ****         }
 2447              		.loc 1 2748 39 is_stmt 1 discriminator 2 view .LVU660
 2448              	.L180:
2752:bsp/middlewares/freertos/source/tasks.c ****         }
 2449              		.loc 1 2752 37 view .LVU661
2759:bsp/middlewares/freertos/source/tasks.c ****         {
 2450              		.loc 1 2759 9 view .LVU662
2759:bsp/middlewares/freertos/source/tasks.c ****         {
 2451              		.loc 1 2759 29 is_stmt 0 view .LVU663
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 152


 2452 0046 2E4B     		ldr	r3, .L199+20
 2453 0048 1B68     		ldr	r3, [r3]
2759:bsp/middlewares/freertos/source/tasks.c ****         {
 2454              		.loc 1 2759 11 view .LVU664
 2455 004a AB42     		cmp	r3, r5
 2456 004c 3DD9     		bls	.L192
 2457              	.LBE142:
2729:bsp/middlewares/freertos/source/tasks.c **** 
 2458              		.loc 1 2729 16 view .LVU665
 2459 004e 0027     		movs	r7, #0
 2460              	.LVL172:
 2461              	.L184:
 2462              	.LBB146:
2842:bsp/middlewares/freertos/source/tasks.c ****                 {
 2463              		.loc 1 2842 17 is_stmt 1 view .LVU666
2842:bsp/middlewares/freertos/source/tasks.c ****                 {
 2464              		.loc 1 2842 21 is_stmt 0 view .LVU667
 2465 0050 2C4B     		ldr	r3, .L199+24
 2466 0052 1B68     		ldr	r3, [r3]
 2467 0054 DB6A     		ldr	r3, [r3, #44]
 2468 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2469 005a 9A00     		lsls	r2, r3, #2
 2470 005c 2A4B     		ldr	r3, .L199+28
 2471 005e 9B58     		ldr	r3, [r3, r2]
2842:bsp/middlewares/freertos/source/tasks.c ****                 {
 2472              		.loc 1 2842 19 view .LVU668
 2473 0060 012B     		cmp	r3, #1
 2474 0062 00D9     		bls	.L190
2844:bsp/middlewares/freertos/source/tasks.c ****                 }
 2475              		.loc 1 2844 37 view .LVU669
 2476 0064 0127     		movs	r7, #1
 2477              	.LVL173:
 2478              	.L190:
2848:bsp/middlewares/freertos/source/tasks.c ****                 }
 2479              		.loc 1 2848 45 is_stmt 1 view .LVU670
2870:bsp/middlewares/freertos/source/tasks.c ****                 {
 2480              		.loc 1 2870 17 view .LVU671
2870:bsp/middlewares/freertos/source/tasks.c ****                 {
 2481              		.loc 1 2870 35 is_stmt 0 view .LVU672
 2482 0066 294B     		ldr	r3, .L199+32
 2483 0068 1B68     		ldr	r3, [r3]
2870:bsp/middlewares/freertos/source/tasks.c ****                 {
 2484              		.loc 1 2870 19 view .LVU673
 2485 006a 002B     		cmp	r3, #0
 2486 006c 3CD0     		beq	.L178
2872:bsp/middlewares/freertos/source/tasks.c ****                 }
 2487              		.loc 1 2872 37 view .LVU674
 2488 006e 0127     		movs	r7, #1
 2489              	.LVL174:
2872:bsp/middlewares/freertos/source/tasks.c ****                 }
 2490              		.loc 1 2872 37 view .LVU675
 2491              	.LBE146:
2894:bsp/middlewares/freertos/source/tasks.c **** }
 2492              		.loc 1 2894 5 is_stmt 1 view .LVU676
2894:bsp/middlewares/freertos/source/tasks.c **** }
 2493              		.loc 1 2894 12 is_stmt 0 view .LVU677
 2494 0070 3AE0     		b	.L178
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 153


 2495              	.LVL175:
 2496              	.L193:
 2497              	.LBB147:
2825:bsp/middlewares/freertos/source/tasks.c ****                             }
 2498              		.loc 1 2825 49 view .LVU678
 2499 0072 0127     		movs	r7, #1
 2500              	.LVL176:
 2501              	.L183:
2761:bsp/middlewares/freertos/source/tasks.c ****             {
 2502              		.loc 1 2761 13 is_stmt 1 view .LVU679
2763:bsp/middlewares/freertos/source/tasks.c ****                 {
 2503              		.loc 1 2763 17 view .LVU680
2763:bsp/middlewares/freertos/source/tasks.c ****                 {
 2504              		.loc 1 2763 21 is_stmt 0 view .LVU681
 2505 0074 1F4B     		ldr	r3, .L199+8
 2506 0076 1B68     		ldr	r3, [r3]
 2507 0078 1B68     		ldr	r3, [r3]
2763:bsp/middlewares/freertos/source/tasks.c ****                 {
 2508              		.loc 1 2763 19 view .LVU682
 2509 007a 43B3     		cbz	r3, .L197
2779:bsp/middlewares/freertos/source/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2510              		.loc 1 2779 21 is_stmt 1 view .LVU683
2779:bsp/middlewares/freertos/source/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2511              		.loc 1 2779 29 is_stmt 0 view .LVU684
 2512 007c 1D4B     		ldr	r3, .L199+8
 2513 007e 1B68     		ldr	r3, [r3]
 2514 0080 DB68     		ldr	r3, [r3, #12]
2779:bsp/middlewares/freertos/source/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2515              		.loc 1 2779 27 view .LVU685
 2516 0082 DC68     		ldr	r4, [r3, #12]
 2517              	.LVL177:
2780:bsp/middlewares/freertos/source/tasks.c **** 
 2518              		.loc 1 2780 21 is_stmt 1 view .LVU686
2780:bsp/middlewares/freertos/source/tasks.c **** 
 2519              		.loc 1 2780 32 is_stmt 0 view .LVU687
 2520 0084 6368     		ldr	r3, [r4, #4]
 2521              	.LVL178:
2782:bsp/middlewares/freertos/source/tasks.c ****                     {
 2522              		.loc 1 2782 21 is_stmt 1 view .LVU688
2782:bsp/middlewares/freertos/source/tasks.c ****                     {
 2523              		.loc 1 2782 23 is_stmt 0 view .LVU689
 2524 0086 9D42     		cmp	r5, r3
 2525 0088 26D3     		bcc	.L198
2794:bsp/middlewares/freertos/source/tasks.c ****                     }
 2526              		.loc 1 2794 49 is_stmt 1 view .LVU690
2798:bsp/middlewares/freertos/source/tasks.c **** 
 2527              		.loc 1 2798 21 view .LVU691
2798:bsp/middlewares/freertos/source/tasks.c **** 
 2528              		.loc 1 2798 30 is_stmt 0 view .LVU692
 2529 008a 261D     		adds	r6, r4, #4
 2530 008c 3046     		mov	r0, r6
 2531 008e FFF7FEFF 		bl	uxListRemove
 2532              	.LVL179:
2802:bsp/middlewares/freertos/source/tasks.c ****                     {
 2533              		.loc 1 2802 21 is_stmt 1 view .LVU693
2802:bsp/middlewares/freertos/source/tasks.c ****                     {
 2534              		.loc 1 2802 25 is_stmt 0 view .LVU694
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 154


 2535 0092 A36A     		ldr	r3, [r4, #40]
2802:bsp/middlewares/freertos/source/tasks.c ****                     {
 2536              		.loc 1 2802 23 view .LVU695
 2537 0094 1BB1     		cbz	r3, .L187
2804:bsp/middlewares/freertos/source/tasks.c ****                     }
 2538              		.loc 1 2804 25 is_stmt 1 view .LVU696
2804:bsp/middlewares/freertos/source/tasks.c ****                     }
 2539              		.loc 1 2804 34 is_stmt 0 view .LVU697
 2540 0096 04F11800 		add	r0, r4, #24
 2541 009a FFF7FEFF 		bl	uxListRemove
 2542              	.LVL180:
 2543              	.L187:
2808:bsp/middlewares/freertos/source/tasks.c ****                     }
 2544              		.loc 1 2808 49 is_stmt 1 view .LVU698
2813:bsp/middlewares/freertos/source/tasks.c **** 
 2545              		.loc 1 2813 21 view .LVU699
2813:bsp/middlewares/freertos/source/tasks.c **** 
 2546              		.loc 1 2813 21 view .LVU700
 2547 009e E36A     		ldr	r3, [r4, #44]
 2548 00a0 0122     		movs	r2, #1
 2549 00a2 9A40     		lsls	r2, r2, r3
 2550 00a4 1A49     		ldr	r1, .L199+36
 2551 00a6 0868     		ldr	r0, [r1]
 2552 00a8 0243     		orrs	r2, r2, r0
 2553 00aa 0A60     		str	r2, [r1]
2813:bsp/middlewares/freertos/source/tasks.c **** 
 2554              		.loc 1 2813 21 view .LVU701
 2555 00ac 03EB8303 		add	r3, r3, r3, lsl #2
 2556 00b0 9A00     		lsls	r2, r3, #2
 2557 00b2 3146     		mov	r1, r6
 2558 00b4 1448     		ldr	r0, .L199+28
 2559 00b6 1044     		add	r0, r0, r2
 2560 00b8 FFF7FEFF 		bl	vListInsertEnd
 2561              	.LVL181:
2813:bsp/middlewares/freertos/source/tasks.c **** 
 2562              		.loc 1 2813 51 view .LVU702
2823:bsp/middlewares/freertos/source/tasks.c ****                             {
 2563              		.loc 1 2823 29 view .LVU703
2823:bsp/middlewares/freertos/source/tasks.c ****                             {
 2564              		.loc 1 2823 38 is_stmt 0 view .LVU704
 2565 00bc E26A     		ldr	r2, [r4, #44]
2823:bsp/middlewares/freertos/source/tasks.c ****                             {
 2566              		.loc 1 2823 66 view .LVU705
 2567 00be 114B     		ldr	r3, .L199+24
 2568 00c0 1B68     		ldr	r3, [r3]
 2569 00c2 DB6A     		ldr	r3, [r3, #44]
2823:bsp/middlewares/freertos/source/tasks.c ****                             {
 2570              		.loc 1 2823 31 view .LVU706
 2571 00c4 9A42     		cmp	r2, r3
 2572 00c6 D4D2     		bcs	.L193
 2573 00c8 D4E7     		b	.L183
 2574              	.LVL182:
 2575              	.L192:
2823:bsp/middlewares/freertos/source/tasks.c ****                             {
 2576              		.loc 1 2823 31 view .LVU707
 2577              	.LBE147:
2729:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 155


 2578              		.loc 1 2729 16 view .LVU708
 2579 00ca 0027     		movs	r7, #0
 2580 00cc D2E7     		b	.L183
 2581              	.LVL183:
 2582              	.L197:
 2583              	.LBB148:
2770:bsp/middlewares/freertos/source/tasks.c ****                     break;
 2584              		.loc 1 2770 21 is_stmt 1 view .LVU709
2770:bsp/middlewares/freertos/source/tasks.c ****                     break;
 2585              		.loc 1 2770 42 is_stmt 0 view .LVU710
 2586 00ce 0C4B     		ldr	r3, .L199+20
 2587 00d0 4FF0FF32 		mov	r2, #-1
 2588 00d4 1A60     		str	r2, [r3]
2771:bsp/middlewares/freertos/source/tasks.c ****                 }
 2589              		.loc 1 2771 21 is_stmt 1 view .LVU711
 2590 00d6 BBE7     		b	.L184
 2591              	.LVL184:
 2592              	.L198:
2789:bsp/middlewares/freertos/source/tasks.c ****                         break; /*lint !e9011 Code structure here is deedmed easier to understand wi
 2593              		.loc 1 2789 25 view .LVU712
2789:bsp/middlewares/freertos/source/tasks.c ****                         break; /*lint !e9011 Code structure here is deedmed easier to understand wi
 2594              		.loc 1 2789 46 is_stmt 0 view .LVU713
 2595 00d8 094A     		ldr	r2, .L199+20
 2596 00da 1360     		str	r3, [r2]
2790:bsp/middlewares/freertos/source/tasks.c ****                     }
 2597              		.loc 1 2790 25 is_stmt 1 view .LVU714
 2598 00dc B8E7     		b	.L184
 2599              	.LVL185:
 2600              	.L179:
2790:bsp/middlewares/freertos/source/tasks.c ****                     }
 2601              		.loc 1 2790 25 is_stmt 0 view .LVU715
 2602              	.LBE148:
2883:bsp/middlewares/freertos/source/tasks.c **** 
 2603              		.loc 1 2883 9 is_stmt 1 view .LVU716
 2604 00de 0D4A     		ldr	r2, .L199+40
 2605 00e0 1368     		ldr	r3, [r2]
 2606 00e2 0133     		adds	r3, r3, #1
 2607 00e4 1360     		str	r3, [r2]
2729:bsp/middlewares/freertos/source/tasks.c **** 
 2608              		.loc 1 2729 16 is_stmt 0 view .LVU717
 2609 00e6 0027     		movs	r7, #0
 2610              	.LVL186:
 2611              	.L178:
2895:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 2612              		.loc 1 2895 1 view .LVU718
 2613 00e8 3846     		mov	r0, r7
 2614 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2615              	.L200:
 2616              		.align	2
 2617              	.L199:
 2618 00ec 00000000 		.word	.LANCHOR16
 2619 00f0 00000000 		.word	.LANCHOR15
 2620 00f4 00000000 		.word	.LANCHOR2
 2621 00f8 00000000 		.word	.LANCHOR8
 2622 00fc 00000000 		.word	.LANCHOR20
 2623 0100 00000000 		.word	.LANCHOR3
 2624 0104 00000000 		.word	.LANCHOR10
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 156


 2625 0108 00000000 		.word	.LANCHOR4
 2626 010c 00000000 		.word	.LANCHOR17
 2627 0110 00000000 		.word	.LANCHOR13
 2628 0114 00000000 		.word	.LANCHOR21
 2629              		.cfi_endproc
 2630              	.LFE27:
 2632              		.section	.text.xTaskResumeAll,"ax",%progbits
 2633              		.align	1
 2634              		.global	xTaskResumeAll
 2635              		.syntax unified
 2636              		.thumb
 2637              		.thumb_func
 2639              	xTaskResumeAll:
 2640              	.LFB21:
2211:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxTCB = NULL;
 2641              		.loc 1 2211 1 is_stmt 1 view -0
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 0
 2644              		@ frame_needed = 0, uses_anonymous_args = 0
 2645 0000 38B5     		push	{r3, r4, r5, lr}
 2646              	.LCFI25:
 2647              		.cfi_def_cfa_offset 16
 2648              		.cfi_offset 3, -16
 2649              		.cfi_offset 4, -12
 2650              		.cfi_offset 5, -8
 2651              		.cfi_offset 14, -4
2212:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 2652              		.loc 1 2212 5 view .LVU720
 2653              	.LVL187:
2213:bsp/middlewares/freertos/source/tasks.c **** 
 2654              		.loc 1 2213 5 view .LVU721
2217:bsp/middlewares/freertos/source/tasks.c **** 
 2655              		.loc 1 2217 5 view .LVU722
 2656 0002 354B     		ldr	r3, .L217
 2657 0004 1B68     		ldr	r3, [r3]
 2658 0006 43B9     		cbnz	r3, .L202
2217:bsp/middlewares/freertos/source/tasks.c **** 
 2659              		.loc 1 2217 5 view .LVU723
 2660              	.LBB149:
 2661              	.LBI149:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2662              		.loc 2 193 34 view .LVU724
 2663              	.LBB150:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2664              		.loc 2 195 9 view .LVU725
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2665              		.loc 2 197 9 view .LVU726
 2666              		.syntax unified
 2667              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2668 0008 4FF01003 			mov r3, #16												
 2669 000c 83F31188 		msr basepri, r3											
 2670 0010 BFF36F8F 		isb														
 2671 0014 BFF34F8F 		dsb														
 2672              	
 2673              	@ 0 "" 2
 2674              	.LVL188:
 2675              		.thumb
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 157


 2676              		.syntax unified
 2677              	.L203:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2678              		.loc 2 197 9 is_stmt 0 view .LVU727
 2679              	.LBE150:
 2680              	.LBE149:
2217:bsp/middlewares/freertos/source/tasks.c **** 
 2681              		.loc 1 2217 5 is_stmt 1 discriminator 1 view .LVU728
2217:bsp/middlewares/freertos/source/tasks.c **** 
 2682              		.loc 1 2217 5 discriminator 1 view .LVU729
2217:bsp/middlewares/freertos/source/tasks.c **** 
 2683              		.loc 1 2217 5 discriminator 1 view .LVU730
 2684 0018 FEE7     		b	.L203
 2685              	.L202:
2217:bsp/middlewares/freertos/source/tasks.c **** 
 2686              		.loc 1 2217 41 discriminator 2 view .LVU731
2224:bsp/middlewares/freertos/source/tasks.c ****     {
 2687              		.loc 1 2224 5 discriminator 2 view .LVU732
 2688 001a FFF7FEFF 		bl	vPortEnterCritical
 2689              	.LVL189:
2226:bsp/middlewares/freertos/source/tasks.c **** 
 2690              		.loc 1 2226 9 discriminator 2 view .LVU733
 2691 001e 2E4B     		ldr	r3, .L217
 2692 0020 1A68     		ldr	r2, [r3]
 2693 0022 013A     		subs	r2, r2, #1
 2694 0024 1A60     		str	r2, [r3]
2228:bsp/middlewares/freertos/source/tasks.c ****         {
 2695              		.loc 1 2228 9 discriminator 2 view .LVU734
2228:bsp/middlewares/freertos/source/tasks.c ****         {
 2696              		.loc 1 2228 34 is_stmt 0 discriminator 2 view .LVU735
 2697 0026 1B68     		ldr	r3, [r3]
2228:bsp/middlewares/freertos/source/tasks.c ****         {
 2698              		.loc 1 2228 11 discriminator 2 view .LVU736
 2699 0028 002B     		cmp	r3, #0
 2700 002a 4FD1     		bne	.L212
2230:bsp/middlewares/freertos/source/tasks.c ****             {
 2701              		.loc 1 2230 13 is_stmt 1 view .LVU737
2230:bsp/middlewares/freertos/source/tasks.c ****             {
 2702              		.loc 1 2230 40 is_stmt 0 view .LVU738
 2703 002c 2B4B     		ldr	r3, .L217+4
 2704 002e 1B68     		ldr	r3, [r3]
2230:bsp/middlewares/freertos/source/tasks.c ****             {
 2705              		.loc 1 2230 15 view .LVU739
 2706 0030 0BB9     		cbnz	r3, .L213
2213:bsp/middlewares/freertos/source/tasks.c **** 
 2707              		.loc 1 2213 16 view .LVU740
 2708 0032 0024     		movs	r4, #0
 2709 0034 4BE0     		b	.L204
 2710              	.L213:
2212:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 2711              		.loc 1 2212 13 view .LVU741
 2712 0036 0024     		movs	r4, #0
 2713              	.LVL190:
 2714              	.L205:
2249:bsp/middlewares/freertos/source/tasks.c ****                     }
 2715              		.loc 1 2249 49 is_stmt 1 view .LVU742
2234:bsp/middlewares/freertos/source/tasks.c ****                 {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 158


 2716              		.loc 1 2234 22 view .LVU743
2234:bsp/middlewares/freertos/source/tasks.c ****                 {
 2717              		.loc 1 2234 24 is_stmt 0 view .LVU744
 2718 0038 294B     		ldr	r3, .L217+8
 2719 003a 1B68     		ldr	r3, [r3]
2234:bsp/middlewares/freertos/source/tasks.c ****                 {
 2720              		.loc 1 2234 22 view .LVU745
 2721 003c 1BB3     		cbz	r3, .L215
2236:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2722              		.loc 1 2236 21 is_stmt 1 view .LVU746
2236:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2723              		.loc 1 2236 29 is_stmt 0 view .LVU747
 2724 003e 284B     		ldr	r3, .L217+8
 2725 0040 DB68     		ldr	r3, [r3, #12]
2236:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2726              		.loc 1 2236 27 view .LVU748
 2727 0042 DC68     		ldr	r4, [r3, #12]
 2728              	.LVL191:
2237:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2729              		.loc 1 2237 21 is_stmt 1 view .LVU749
2237:bsp/middlewares/freertos/source/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2730              		.loc 1 2237 30 is_stmt 0 view .LVU750
 2731 0044 04F11800 		add	r0, r4, #24
 2732 0048 FFF7FEFF 		bl	uxListRemove
 2733              	.LVL192:
2238:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2734              		.loc 1 2238 21 is_stmt 1 view .LVU751
2238:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2735              		.loc 1 2238 30 is_stmt 0 view .LVU752
 2736 004c 251D     		adds	r5, r4, #4
 2737 004e 2846     		mov	r0, r5
 2738 0050 FFF7FEFF 		bl	uxListRemove
 2739              	.LVL193:
2239:bsp/middlewares/freertos/source/tasks.c **** 
 2740              		.loc 1 2239 21 is_stmt 1 view .LVU753
2239:bsp/middlewares/freertos/source/tasks.c **** 
 2741              		.loc 1 2239 21 view .LVU754
 2742 0054 E06A     		ldr	r0, [r4, #44]
 2743 0056 0123     		movs	r3, #1
 2744 0058 8340     		lsls	r3, r3, r0
 2745 005a 224A     		ldr	r2, .L217+12
 2746 005c 1168     		ldr	r1, [r2]
 2747 005e 0B43     		orrs	r3, r3, r1
 2748 0060 1360     		str	r3, [r2]
2239:bsp/middlewares/freertos/source/tasks.c **** 
 2749              		.loc 1 2239 21 view .LVU755
 2750 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2751 0066 2946     		mov	r1, r5
 2752 0068 1F4B     		ldr	r3, .L217+16
 2753 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2754 006e FFF7FEFF 		bl	vListInsertEnd
 2755              	.LVL194:
2239:bsp/middlewares/freertos/source/tasks.c **** 
 2756              		.loc 1 2239 51 view .LVU756
2243:bsp/middlewares/freertos/source/tasks.c ****                     {
 2757              		.loc 1 2243 21 view .LVU757
2243:bsp/middlewares/freertos/source/tasks.c ****                     {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 159


 2758              		.loc 1 2243 30 is_stmt 0 view .LVU758
 2759 0072 E26A     		ldr	r2, [r4, #44]
2243:bsp/middlewares/freertos/source/tasks.c ****                     {
 2760              		.loc 1 2243 58 view .LVU759
 2761 0074 1D4B     		ldr	r3, .L217+20
 2762 0076 1B68     		ldr	r3, [r3]
 2763 0078 DB6A     		ldr	r3, [r3, #44]
2243:bsp/middlewares/freertos/source/tasks.c ****                     {
 2764              		.loc 1 2243 23 view .LVU760
 2765 007a 9A42     		cmp	r2, r3
 2766 007c DCD3     		bcc	.L205
2245:bsp/middlewares/freertos/source/tasks.c ****                     }
 2767              		.loc 1 2245 25 is_stmt 1 view .LVU761
2245:bsp/middlewares/freertos/source/tasks.c ****                     }
 2768              		.loc 1 2245 39 is_stmt 0 view .LVU762
 2769 007e 1C4B     		ldr	r3, .L217+24
 2770 0080 0122     		movs	r2, #1
 2771 0082 1A60     		str	r2, [r3]
 2772 0084 D8E7     		b	.L205
 2773              	.L215:
2253:bsp/middlewares/freertos/source/tasks.c ****                 {
 2774              		.loc 1 2253 17 is_stmt 1 view .LVU763
2253:bsp/middlewares/freertos/source/tasks.c ****                 {
 2775              		.loc 1 2253 19 is_stmt 0 view .LVU764
 2776 0086 0CB1     		cbz	r4, .L208
2261:bsp/middlewares/freertos/source/tasks.c ****                 }
 2777              		.loc 1 2261 21 is_stmt 1 view .LVU765
 2778 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2779              	.LVL195:
 2780              	.L208:
 2781              	.LBB151:
2269:bsp/middlewares/freertos/source/tasks.c **** 
 2782              		.loc 1 2269 21 view .LVU766
2269:bsp/middlewares/freertos/source/tasks.c **** 
 2783              		.loc 1 2269 32 is_stmt 0 view .LVU767
 2784 008c 194B     		ldr	r3, .L217+28
 2785 008e 1C68     		ldr	r4, [r3]
 2786              	.LVL196:
2271:bsp/middlewares/freertos/source/tasks.c ****                     {
 2787              		.loc 1 2271 21 is_stmt 1 view .LVU768
2271:bsp/middlewares/freertos/source/tasks.c ****                     {
 2788              		.loc 1 2271 23 is_stmt 0 view .LVU769
 2789 0090 84B9     		cbnz	r4, .L211
 2790              	.L209:
2291:bsp/middlewares/freertos/source/tasks.c ****                     }
 2791              		.loc 1 2291 49 is_stmt 1 view .LVU770
 2792              	.LBE151:
2295:bsp/middlewares/freertos/source/tasks.c ****                 {
 2793              		.loc 1 2295 17 view .LVU771
2295:bsp/middlewares/freertos/source/tasks.c ****                 {
 2794              		.loc 1 2295 35 is_stmt 0 view .LVU772
 2795 0092 174B     		ldr	r3, .L217+24
 2796 0094 1C68     		ldr	r4, [r3]
 2797              	.LVL197:
2295:bsp/middlewares/freertos/source/tasks.c ****                 {
 2798              		.loc 1 2295 19 view .LVU773
 2799 0096 D4B1     		cbz	r4, .L204
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 160


2299:bsp/middlewares/freertos/source/tasks.c ****                         }
 2800              		.loc 1 2299 29 is_stmt 1 view .LVU774
 2801              	.LVL198:
2302:bsp/middlewares/freertos/source/tasks.c ****                 }
 2802              		.loc 1 2302 21 view .LVU775
 2803 0098 4FF0E023 		mov	r3, #-536813568
 2804 009c 4FF08052 		mov	r2, #268435456
 2805 00a0 C3F8042D 		str	r2, [r3, #3332]
2302:bsp/middlewares/freertos/source/tasks.c ****                 }
 2806              		.loc 1 2302 21 view .LVU776
 2807              		.syntax unified
 2808              	@ 2302 "bsp/middlewares/freertos/source/tasks.c" 1
 2809 00a4 BFF34F8F 		dsb
 2810              	@ 0 "" 2
2302:bsp/middlewares/freertos/source/tasks.c ****                 }
 2811              		.loc 1 2302 21 view .LVU777
 2812              	@ 2302 "bsp/middlewares/freertos/source/tasks.c" 1
 2813 00a8 BFF36F8F 		isb
 2814              	@ 0 "" 2
2302:bsp/middlewares/freertos/source/tasks.c ****                 }
 2815              		.loc 1 2302 52 view .LVU778
2299:bsp/middlewares/freertos/source/tasks.c ****                         }
 2816              		.loc 1 2299 45 is_stmt 0 view .LVU779
 2817              		.thumb
 2818              		.syntax unified
 2819 00ac 0124     		movs	r4, #1
 2820 00ae 0EE0     		b	.L204
 2821              	.LVL199:
 2822              	.L210:
 2823              	.LBB152:
2281:bsp/middlewares/freertos/source/tasks.c ****                             }
 2824              		.loc 1 2281 57 is_stmt 1 view .LVU780
2284:bsp/middlewares/freertos/source/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
 2825              		.loc 1 2284 29 view .LVU781
2285:bsp/middlewares/freertos/source/tasks.c **** 
 2826              		.loc 1 2285 32 view .LVU782
2285:bsp/middlewares/freertos/source/tasks.c **** 
 2827              		.loc 1 2285 25 is_stmt 0 view .LVU783
 2828 00b0 013C     		subs	r4, r4, #1
 2829              	.LVL200:
2285:bsp/middlewares/freertos/source/tasks.c **** 
 2830              		.loc 1 2285 25 view .LVU784
 2831 00b2 07D0     		beq	.L216
 2832              	.L211:
2273:bsp/middlewares/freertos/source/tasks.c ****                         {
 2833              		.loc 1 2273 25 is_stmt 1 view .LVU785
2275:bsp/middlewares/freertos/source/tasks.c ****                             {
 2834              		.loc 1 2275 29 view .LVU786
2275:bsp/middlewares/freertos/source/tasks.c ****                             {
 2835              		.loc 1 2275 33 is_stmt 0 view .LVU787
 2836 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 2837              	.LVL201:
2275:bsp/middlewares/freertos/source/tasks.c ****                             {
 2838              		.loc 1 2275 31 view .LVU788
 2839 00b8 0028     		cmp	r0, #0
 2840 00ba F9D0     		beq	.L210
2277:bsp/middlewares/freertos/source/tasks.c ****                             }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 161


 2841              		.loc 1 2277 33 is_stmt 1 view .LVU789
2277:bsp/middlewares/freertos/source/tasks.c ****                             }
 2842              		.loc 1 2277 47 is_stmt 0 view .LVU790
 2843 00bc 0C4B     		ldr	r3, .L217+24
 2844 00be 0122     		movs	r2, #1
 2845 00c0 1A60     		str	r2, [r3]
 2846 00c2 F5E7     		b	.L210
 2847              	.L216:
2287:bsp/middlewares/freertos/source/tasks.c ****                     }
 2848              		.loc 1 2287 25 is_stmt 1 view .LVU791
2287:bsp/middlewares/freertos/source/tasks.c ****                     }
 2849              		.loc 1 2287 38 is_stmt 0 view .LVU792
 2850 00c4 0B4B     		ldr	r3, .L217+28
 2851 00c6 0022     		movs	r2, #0
 2852 00c8 1A60     		str	r2, [r3]
 2853 00ca E2E7     		b	.L209
 2854              	.LVL202:
 2855              	.L212:
2287:bsp/middlewares/freertos/source/tasks.c ****                     }
 2856              		.loc 1 2287 38 view .LVU793
 2857              	.LBE152:
2213:bsp/middlewares/freertos/source/tasks.c **** 
 2858              		.loc 1 2213 16 view .LVU794
 2859 00cc 0024     		movs	r4, #0
 2860              	.LVL203:
 2861              	.L204:
2312:bsp/middlewares/freertos/source/tasks.c ****         }
 2862              		.loc 1 2312 37 is_stmt 1 view .LVU795
2315:bsp/middlewares/freertos/source/tasks.c **** 
 2863              		.loc 1 2315 5 view .LVU796
 2864 00ce FFF7FEFF 		bl	vPortExitCritical
 2865              	.LVL204:
2317:bsp/middlewares/freertos/source/tasks.c **** }
 2866              		.loc 1 2317 5 view .LVU797
2318:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 2867              		.loc 1 2318 1 is_stmt 0 view .LVU798
 2868 00d2 2046     		mov	r0, r4
 2869 00d4 38BD     		pop	{r3, r4, r5, pc}
 2870              	.LVL205:
 2871              	.L218:
2318:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 2872              		.loc 1 2318 1 view .LVU799
 2873 00d6 00BF     		.align	2
 2874              	.L217:
 2875 00d8 00000000 		.word	.LANCHOR16
 2876 00dc 00000000 		.word	.LANCHOR9
 2877 00e0 00000000 		.word	.LANCHOR1
 2878 00e4 00000000 		.word	.LANCHOR13
 2879 00e8 00000000 		.word	.LANCHOR4
 2880 00ec 00000000 		.word	.LANCHOR10
 2881 00f0 00000000 		.word	.LANCHOR17
 2882 00f4 00000000 		.word	.LANCHOR21
 2883              		.cfi_endproc
 2884              	.LFE21:
 2886              		.section	.text.xTaskDelayUntil,"ax",%progbits
 2887              		.align	1
 2888              		.global	xTaskDelayUntil
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 162


 2889              		.syntax unified
 2890              		.thumb
 2891              		.thumb_func
 2893              	xTaskDelayUntil:
 2894              	.LVL206:
 2895              	.LFB9:
1251:bsp/middlewares/freertos/source/tasks.c ****         TickType_t xTimeToWake;
 2896              		.loc 1 1251 5 is_stmt 1 view -0
 2897              		.cfi_startproc
 2898              		@ args = 0, pretend = 0, frame = 0
 2899              		@ frame_needed = 0, uses_anonymous_args = 0
1251:bsp/middlewares/freertos/source/tasks.c ****         TickType_t xTimeToWake;
 2900              		.loc 1 1251 5 is_stmt 0 view .LVU801
 2901 0000 38B5     		push	{r3, r4, r5, lr}
 2902              	.LCFI26:
 2903              		.cfi_def_cfa_offset 16
 2904              		.cfi_offset 3, -16
 2905              		.cfi_offset 4, -12
 2906              		.cfi_offset 5, -8
 2907              		.cfi_offset 14, -4
1252:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 2908              		.loc 1 1252 9 is_stmt 1 view .LVU802
1253:bsp/middlewares/freertos/source/tasks.c **** 
 2909              		.loc 1 1253 9 view .LVU803
 2910              	.LVL207:
1255:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 2911              		.loc 1 1255 9 view .LVU804
 2912 0002 58B1     		cbz	r0, .L235
 2913 0004 0C46     		mov	r4, r1
 2914 0006 0546     		mov	r5, r0
1255:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 2915              		.loc 1 1255 43 discriminator 2 view .LVU805
1256:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 2916              		.loc 1 1256 9 discriminator 2 view .LVU806
 2917 0008 89B9     		cbnz	r1, .L222
1256:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 2918              		.loc 1 1256 9 view .LVU807
 2919              	.LBB153:
 2920              	.LBI153:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2921              		.loc 2 193 34 view .LVU808
 2922              	.LBB154:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2923              		.loc 2 195 9 view .LVU809
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2924              		.loc 2 197 9 view .LVU810
 2925              		.syntax unified
 2926              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2927 000a 4FF01003 			mov r3, #16												
 2928 000e 83F31188 		msr basepri, r3											
 2929 0012 BFF36F8F 		isb														
 2930 0016 BFF34F8F 		dsb														
 2931              	
 2932              	@ 0 "" 2
 2933              	.LVL208:
 2934              		.thumb
 2935              		.syntax unified
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 163


 2936              	.L223:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2937              		.loc 2 197 9 is_stmt 0 view .LVU811
 2938              	.LBE154:
 2939              	.LBE153:
1256:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 2940              		.loc 1 1256 9 is_stmt 1 discriminator 2 view .LVU812
1256:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 2941              		.loc 1 1256 9 discriminator 2 view .LVU813
1256:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 2942              		.loc 1 1256 9 discriminator 2 view .LVU814
 2943 001a FEE7     		b	.L223
 2944              	.L235:
1255:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 2945              		.loc 1 1255 9 view .LVU815
 2946              	.LBB155:
 2947              	.LBI155:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2948              		.loc 2 193 34 view .LVU816
 2949              	.LBB156:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2950              		.loc 2 195 9 view .LVU817
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2951              		.loc 2 197 9 view .LVU818
 2952              		.syntax unified
 2953              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2954 001c 4FF01003 			mov r3, #16												
 2955 0020 83F31188 		msr basepri, r3											
 2956 0024 BFF36F8F 		isb														
 2957 0028 BFF34F8F 		dsb														
 2958              	
 2959              	@ 0 "" 2
 2960              	.LVL209:
 2961              		.thumb
 2962              		.syntax unified
 2963              	.L221:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2964              		.loc 2 197 9 is_stmt 0 view .LVU819
 2965              	.LBE156:
 2966              	.LBE155:
1255:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 2967              		.loc 1 1255 9 is_stmt 1 discriminator 1 view .LVU820
1255:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 2968              		.loc 1 1255 9 discriminator 1 view .LVU821
1255:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 2969              		.loc 1 1255 9 discriminator 1 view .LVU822
 2970 002c FEE7     		b	.L221
 2971              	.L222:
1256:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 2972              		.loc 1 1256 48 discriminator 2 view .LVU823
1257:bsp/middlewares/freertos/source/tasks.c **** 
 2973              		.loc 1 1257 9 discriminator 2 view .LVU824
 2974 002e 1E4B     		ldr	r3, .L236
 2975 0030 1B68     		ldr	r3, [r3]
 2976 0032 43B1     		cbz	r3, .L224
1257:bsp/middlewares/freertos/source/tasks.c **** 
 2977              		.loc 1 1257 9 view .LVU825
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 164


 2978              	.LBB157:
 2979              	.LBI157:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2980              		.loc 2 193 34 view .LVU826
 2981              	.LBB158:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2982              		.loc 2 195 9 view .LVU827
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2983              		.loc 2 197 9 view .LVU828
 2984              		.syntax unified
 2985              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2986 0034 4FF01003 			mov r3, #16												
 2987 0038 83F31188 		msr basepri, r3											
 2988 003c BFF36F8F 		isb														
 2989 0040 BFF34F8F 		dsb														
 2990              	
 2991              	@ 0 "" 2
 2992              	.LVL210:
 2993              		.thumb
 2994              		.syntax unified
 2995              	.L225:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2996              		.loc 2 197 9 is_stmt 0 view .LVU829
 2997              	.LBE158:
 2998              	.LBE157:
1257:bsp/middlewares/freertos/source/tasks.c **** 
 2999              		.loc 1 1257 9 is_stmt 1 discriminator 3 view .LVU830
1257:bsp/middlewares/freertos/source/tasks.c **** 
 3000              		.loc 1 1257 9 discriminator 3 view .LVU831
1257:bsp/middlewares/freertos/source/tasks.c **** 
 3001              		.loc 1 1257 9 discriminator 3 view .LVU832
 3002 0044 FEE7     		b	.L225
 3003              	.L224:
1257:bsp/middlewares/freertos/source/tasks.c **** 
 3004              		.loc 1 1257 50 discriminator 2 view .LVU833
1259:bsp/middlewares/freertos/source/tasks.c ****         {
 3005              		.loc 1 1259 9 discriminator 2 view .LVU834
 3006 0046 FFF7FEFF 		bl	vTaskSuspendAll
 3007              	.LVL211:
 3008              	.LBB159:
1263:bsp/middlewares/freertos/source/tasks.c **** 
 3009              		.loc 1 1263 13 discriminator 2 view .LVU835
1263:bsp/middlewares/freertos/source/tasks.c **** 
 3010              		.loc 1 1263 30 is_stmt 0 discriminator 2 view .LVU836
 3011 004a 184B     		ldr	r3, .L236+4
 3012 004c 1868     		ldr	r0, [r3]
 3013              	.LVL212:
1266:bsp/middlewares/freertos/source/tasks.c **** 
 3014              		.loc 1 1266 13 is_stmt 1 discriminator 2 view .LVU837
1266:bsp/middlewares/freertos/source/tasks.c **** 
 3015              		.loc 1 1266 27 is_stmt 0 discriminator 2 view .LVU838
 3016 004e 2B68     		ldr	r3, [r5]
1266:bsp/middlewares/freertos/source/tasks.c **** 
 3017              		.loc 1 1266 25 discriminator 2 view .LVU839
 3018 0050 1C44     		add	r4, r4, r3
 3019              	.LVL213:
1268:bsp/middlewares/freertos/source/tasks.c ****             {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 165


 3020              		.loc 1 1268 13 is_stmt 1 discriminator 2 view .LVU840
1268:bsp/middlewares/freertos/source/tasks.c ****             {
 3021              		.loc 1 1268 15 is_stmt 0 discriminator 2 view .LVU841
 3022 0052 8342     		cmp	r3, r0
 3023 0054 0BD9     		bls	.L226
1275:bsp/middlewares/freertos/source/tasks.c ****                 {
 3024              		.loc 1 1275 17 is_stmt 1 view .LVU842
1275:bsp/middlewares/freertos/source/tasks.c ****                 {
 3025              		.loc 1 1275 19 is_stmt 0 view .LVU843
 3026 0056 A342     		cmp	r3, r4
 3027 0058 02D8     		bhi	.L227
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3028              		.loc 1 1300 13 is_stmt 1 view .LVU844
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3029              		.loc 1 1300 33 is_stmt 0 view .LVU845
 3030 005a 2C60     		str	r4, [r5]
1302:bsp/middlewares/freertos/source/tasks.c ****             {
 3031              		.loc 1 1302 13 is_stmt 1 view .LVU846
 3032              	.LBE159:
1253:bsp/middlewares/freertos/source/tasks.c **** 
 3033              		.loc 1 1253 37 is_stmt 0 view .LVU847
 3034 005c 0024     		movs	r4, #0
 3035              	.LVL214:
1253:bsp/middlewares/freertos/source/tasks.c **** 
 3036              		.loc 1 1253 37 view .LVU848
 3037 005e 10E0     		b	.L228
 3038              	.LVL215:
 3039              	.L227:
 3040              	.LBB160:
1275:bsp/middlewares/freertos/source/tasks.c ****                 {
 3041              		.loc 1 1275 59 discriminator 1 view .LVU849
 3042 0060 A042     		cmp	r0, r4
 3043 0062 02D3     		bcc	.L229
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3044              		.loc 1 1300 13 is_stmt 1 view .LVU850
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3045              		.loc 1 1300 33 is_stmt 0 view .LVU851
 3046 0064 2C60     		str	r4, [r5]
1302:bsp/middlewares/freertos/source/tasks.c ****             {
 3047              		.loc 1 1302 13 is_stmt 1 view .LVU852
 3048              	.LBE160:
1253:bsp/middlewares/freertos/source/tasks.c **** 
 3049              		.loc 1 1253 37 is_stmt 0 view .LVU853
 3050 0066 0024     		movs	r4, #0
 3051              	.LVL216:
1253:bsp/middlewares/freertos/source/tasks.c **** 
 3052              		.loc 1 1253 37 view .LVU854
 3053 0068 0BE0     		b	.L228
 3054              	.LVL217:
 3055              	.L229:
 3056              	.LBB161:
1277:bsp/middlewares/freertos/source/tasks.c ****                 }
 3057              		.loc 1 1277 21 is_stmt 1 view .LVU855
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3058              		.loc 1 1300 13 view .LVU856
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3059              		.loc 1 1300 33 is_stmt 0 view .LVU857
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 166


 3060 006a 2C60     		str	r4, [r5]
1302:bsp/middlewares/freertos/source/tasks.c ****             {
 3061              		.loc 1 1302 13 is_stmt 1 view .LVU858
 3062 006c 04E0     		b	.L230
 3063              	.LVL218:
 3064              	.L226:
1289:bsp/middlewares/freertos/source/tasks.c ****                 {
 3065              		.loc 1 1289 17 view .LVU859
1289:bsp/middlewares/freertos/source/tasks.c ****                 {
 3066              		.loc 1 1289 19 is_stmt 0 view .LVU860
 3067 006e A342     		cmp	r3, r4
 3068 0070 01D8     		bhi	.L231
1289:bsp/middlewares/freertos/source/tasks.c ****                 {
 3069              		.loc 1 1289 59 discriminator 1 view .LVU861
 3070 0072 A042     		cmp	r0, r4
 3071 0074 14D2     		bcs	.L232
 3072              	.L231:
1291:bsp/middlewares/freertos/source/tasks.c ****                 }
 3073              		.loc 1 1291 21 is_stmt 1 view .LVU862
 3074              	.LVL219:
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3075              		.loc 1 1300 13 view .LVU863
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3076              		.loc 1 1300 33 is_stmt 0 view .LVU864
 3077 0076 2C60     		str	r4, [r5]
1302:bsp/middlewares/freertos/source/tasks.c ****             {
 3078              		.loc 1 1302 13 is_stmt 1 view .LVU865
 3079              	.L230:
1304:bsp/middlewares/freertos/source/tasks.c **** 
 3080              		.loc 1 1304 53 view .LVU866
1308:bsp/middlewares/freertos/source/tasks.c ****             }
 3081              		.loc 1 1308 17 view .LVU867
 3082 0078 0021     		movs	r1, #0
 3083 007a 201A     		subs	r0, r4, r0
 3084              	.LVL220:
1308:bsp/middlewares/freertos/source/tasks.c ****             }
 3085              		.loc 1 1308 17 is_stmt 0 view .LVU868
 3086 007c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3087              	.LVL221:
 3088 0080 0124     		movs	r4, #1
 3089              	.LVL222:
 3090              	.L228:
1312:bsp/middlewares/freertos/source/tasks.c ****             }
 3091              		.loc 1 1312 41 is_stmt 1 view .LVU869
 3092              	.LBE161:
1315:bsp/middlewares/freertos/source/tasks.c **** 
 3093              		.loc 1 1315 9 view .LVU870
1315:bsp/middlewares/freertos/source/tasks.c **** 
 3094              		.loc 1 1315 27 is_stmt 0 view .LVU871
 3095 0082 FFF7FEFF 		bl	xTaskResumeAll
 3096              	.LVL223:
1319:bsp/middlewares/freertos/source/tasks.c ****         {
 3097              		.loc 1 1319 9 is_stmt 1 view .LVU872
1319:bsp/middlewares/freertos/source/tasks.c ****         {
 3098              		.loc 1 1319 11 is_stmt 0 view .LVU873
 3099 0086 48B9     		cbnz	r0, .L219
1321:bsp/middlewares/freertos/source/tasks.c ****         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 167


 3100              		.loc 1 1321 13 is_stmt 1 view .LVU874
 3101 0088 4FF0E023 		mov	r3, #-536813568
 3102 008c 4FF08052 		mov	r2, #268435456
 3103 0090 C3F8042D 		str	r2, [r3, #3332]
1321:bsp/middlewares/freertos/source/tasks.c ****         }
 3104              		.loc 1 1321 13 view .LVU875
 3105              		.syntax unified
 3106              	@ 1321 "bsp/middlewares/freertos/source/tasks.c" 1
 3107 0094 BFF34F8F 		dsb
 3108              	@ 0 "" 2
1321:bsp/middlewares/freertos/source/tasks.c ****         }
 3109              		.loc 1 1321 13 view .LVU876
 3110              	@ 1321 "bsp/middlewares/freertos/source/tasks.c" 1
 3111 0098 BFF36F8F 		isb
 3112              	@ 0 "" 2
1321:bsp/middlewares/freertos/source/tasks.c ****         }
 3113              		.loc 1 1321 35 view .LVU877
1325:bsp/middlewares/freertos/source/tasks.c ****         }
 3114              		.loc 1 1325 37 view .LVU878
1328:bsp/middlewares/freertos/source/tasks.c ****     }
 3115              		.loc 1 1328 9 view .LVU879
 3116              		.thumb
 3117              		.syntax unified
 3118              	.L219:
1329:bsp/middlewares/freertos/source/tasks.c **** 
 3119              		.loc 1 1329 5 is_stmt 0 view .LVU880
 3120 009c 2046     		mov	r0, r4
 3121              	.LVL224:
1329:bsp/middlewares/freertos/source/tasks.c **** 
 3122              		.loc 1 1329 5 view .LVU881
 3123 009e 38BD     		pop	{r3, r4, r5, pc}
 3124              	.LVL225:
 3125              	.L232:
 3126              	.LBB162:
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3127              		.loc 1 1300 13 is_stmt 1 view .LVU882
1300:bsp/middlewares/freertos/source/tasks.c **** 
 3128              		.loc 1 1300 33 is_stmt 0 view .LVU883
 3129 00a0 2C60     		str	r4, [r5]
1302:bsp/middlewares/freertos/source/tasks.c ****             {
 3130              		.loc 1 1302 13 is_stmt 1 view .LVU884
 3131              	.LBE162:
1253:bsp/middlewares/freertos/source/tasks.c **** 
 3132              		.loc 1 1253 37 is_stmt 0 view .LVU885
 3133 00a2 0024     		movs	r4, #0
 3134              	.LVL226:
1253:bsp/middlewares/freertos/source/tasks.c **** 
 3135              		.loc 1 1253 37 view .LVU886
 3136 00a4 EDE7     		b	.L228
 3137              	.L237:
 3138 00a6 00BF     		.align	2
 3139              	.L236:
 3140 00a8 00000000 		.word	.LANCHOR16
 3141 00ac 00000000 		.word	.LANCHOR15
 3142              		.cfi_endproc
 3143              	.LFE9:
 3145              		.section	.text.vTaskDelay,"ax",%progbits
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 168


 3146              		.align	1
 3147              		.global	vTaskDelay
 3148              		.syntax unified
 3149              		.thumb
 3150              		.thumb_func
 3152              	vTaskDelay:
 3153              	.LVL227:
 3154              	.LFB10:
1337:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 3155              		.loc 1 1337 5 is_stmt 1 view -0
 3156              		.cfi_startproc
 3157              		@ args = 0, pretend = 0, frame = 0
 3158              		@ frame_needed = 0, uses_anonymous_args = 0
1337:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 3159              		.loc 1 1337 5 is_stmt 0 view .LVU888
 3160 0000 10B5     		push	{r4, lr}
 3161              	.LCFI27:
 3162              		.cfi_def_cfa_offset 8
 3163              		.cfi_offset 4, -8
 3164              		.cfi_offset 14, -4
1338:bsp/middlewares/freertos/source/tasks.c **** 
 3165              		.loc 1 1338 9 is_stmt 1 view .LVU889
 3166              	.LVL228:
1341:bsp/middlewares/freertos/source/tasks.c ****         {
 3167              		.loc 1 1341 9 view .LVU890
1341:bsp/middlewares/freertos/source/tasks.c ****         {
 3168              		.loc 1 1341 11 is_stmt 0 view .LVU891
 3169 0002 A8B1     		cbz	r0, .L239
 3170 0004 0446     		mov	r4, r0
1343:bsp/middlewares/freertos/source/tasks.c ****             vTaskSuspendAll();
 3171              		.loc 1 1343 13 is_stmt 1 view .LVU892
 3172 0006 104B     		ldr	r3, .L244
 3173 0008 1B68     		ldr	r3, [r3]
 3174 000a 43B1     		cbz	r3, .L240
1343:bsp/middlewares/freertos/source/tasks.c ****             vTaskSuspendAll();
 3175              		.loc 1 1343 13 view .LVU893
 3176              	.LBB163:
 3177              	.LBI163:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3178              		.loc 2 193 34 view .LVU894
 3179              	.LBB164:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3180              		.loc 2 195 9 view .LVU895
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3181              		.loc 2 197 9 view .LVU896
 3182              		.syntax unified
 3183              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3184 000c 4FF01003 			mov r3, #16												
 3185 0010 83F31188 		msr basepri, r3											
 3186 0014 BFF36F8F 		isb														
 3187 0018 BFF34F8F 		dsb														
 3188              	
 3189              	@ 0 "" 2
 3190              	.LVL229:
 3191              		.thumb
 3192              		.syntax unified
 3193              	.L241:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 169


 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3194              		.loc 2 197 9 is_stmt 0 view .LVU897
 3195              	.LBE164:
 3196              	.LBE163:
1343:bsp/middlewares/freertos/source/tasks.c ****             vTaskSuspendAll();
 3197              		.loc 1 1343 13 is_stmt 1 discriminator 1 view .LVU898
1343:bsp/middlewares/freertos/source/tasks.c ****             vTaskSuspendAll();
 3198              		.loc 1 1343 13 discriminator 1 view .LVU899
1343:bsp/middlewares/freertos/source/tasks.c ****             vTaskSuspendAll();
 3199              		.loc 1 1343 13 discriminator 1 view .LVU900
 3200 001c FEE7     		b	.L241
 3201              	.L240:
1343:bsp/middlewares/freertos/source/tasks.c ****             vTaskSuspendAll();
 3202              		.loc 1 1343 54 discriminator 2 view .LVU901
1344:bsp/middlewares/freertos/source/tasks.c ****             {
 3203              		.loc 1 1344 13 discriminator 2 view .LVU902
 3204 001e FFF7FEFF 		bl	vTaskSuspendAll
 3205              	.LVL230:
1346:bsp/middlewares/freertos/source/tasks.c **** 
 3206              		.loc 1 1346 34 discriminator 2 view .LVU903
1355:bsp/middlewares/freertos/source/tasks.c ****             }
 3207              		.loc 1 1355 17 discriminator 2 view .LVU904
 3208 0022 0021     		movs	r1, #0
 3209 0024 2046     		mov	r0, r4
 3210 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3211              	.LVL231:
1357:bsp/middlewares/freertos/source/tasks.c ****         }
 3212              		.loc 1 1357 13 discriminator 2 view .LVU905
1357:bsp/middlewares/freertos/source/tasks.c ****         }
 3213              		.loc 1 1357 31 is_stmt 0 discriminator 2 view .LVU906
 3214 002a FFF7FEFF 		bl	xTaskResumeAll
 3215              	.LVL232:
1361:bsp/middlewares/freertos/source/tasks.c ****         }
 3216              		.loc 1 1361 37 is_stmt 1 discriminator 2 view .LVU907
1366:bsp/middlewares/freertos/source/tasks.c ****         {
 3217              		.loc 1 1366 9 discriminator 2 view .LVU908
1366:bsp/middlewares/freertos/source/tasks.c ****         {
 3218              		.loc 1 1366 11 is_stmt 0 discriminator 2 view .LVU909
 3219 002e 48B9     		cbnz	r0, .L238
 3220              	.LVL233:
 3221              	.L239:
1368:bsp/middlewares/freertos/source/tasks.c ****         }
 3222              		.loc 1 1368 13 is_stmt 1 view .LVU910
 3223 0030 4FF0E023 		mov	r3, #-536813568
 3224 0034 4FF08052 		mov	r2, #268435456
 3225 0038 C3F8042D 		str	r2, [r3, #3332]
1368:bsp/middlewares/freertos/source/tasks.c ****         }
 3226              		.loc 1 1368 13 view .LVU911
 3227              		.syntax unified
 3228              	@ 1368 "bsp/middlewares/freertos/source/tasks.c" 1
 3229 003c BFF34F8F 		dsb
 3230              	@ 0 "" 2
1368:bsp/middlewares/freertos/source/tasks.c ****         }
 3231              		.loc 1 1368 13 view .LVU912
 3232              	@ 1368 "bsp/middlewares/freertos/source/tasks.c" 1
 3233 0040 BFF36F8F 		isb
 3234              	@ 0 "" 2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 170


1368:bsp/middlewares/freertos/source/tasks.c ****         }
 3235              		.loc 1 1368 35 view .LVU913
1372:bsp/middlewares/freertos/source/tasks.c ****         }
 3236              		.loc 1 1372 37 view .LVU914
 3237              		.thumb
 3238              		.syntax unified
 3239              	.L238:
1374:bsp/middlewares/freertos/source/tasks.c **** 
 3240              		.loc 1 1374 5 is_stmt 0 view .LVU915
 3241 0044 10BD     		pop	{r4, pc}
 3242              	.L245:
 3243 0046 00BF     		.align	2
 3244              	.L244:
 3245 0048 00000000 		.word	.LANCHOR16
 3246              		.cfi_endproc
 3247              	.LFE10:
 3249              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3250              		.align	1
 3251              		.global	xTaskCatchUpTicks
 3252              		.syntax unified
 3253              		.thumb
 3254              		.thumb_func
 3256              	xTaskCatchUpTicks:
 3257              	.LVL234:
 3258              	.LFB26:
2628:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xYieldOccurred;
 3259              		.loc 1 2628 1 is_stmt 1 view -0
 3260              		.cfi_startproc
 3261              		@ args = 0, pretend = 0, frame = 0
 3262              		@ frame_needed = 0, uses_anonymous_args = 0
2629:bsp/middlewares/freertos/source/tasks.c **** 
 3263              		.loc 1 2629 5 view .LVU917
2633:bsp/middlewares/freertos/source/tasks.c **** 
 3264              		.loc 1 2633 5 view .LVU918
 3265 0000 0B4B     		ldr	r3, .L251
 3266 0002 1B68     		ldr	r3, [r3]
 3267 0004 43B1     		cbz	r3, .L247
2633:bsp/middlewares/freertos/source/tasks.c **** 
 3268              		.loc 1 2633 5 view .LVU919
 3269              	.LBB165:
 3270              	.LBI165:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3271              		.loc 2 193 34 view .LVU920
 3272              	.LBB166:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3273              		.loc 2 195 9 view .LVU921
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3274              		.loc 2 197 9 view .LVU922
 3275              		.syntax unified
 3276              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3277 0006 4FF01003 			mov r3, #16												
 3278 000a 83F31188 		msr basepri, r3											
 3279 000e BFF36F8F 		isb														
 3280 0012 BFF34F8F 		dsb														
 3281              	
 3282              	@ 0 "" 2
 3283              	.LVL235:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 171


 3284              		.thumb
 3285              		.syntax unified
 3286              	.L248:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3287              		.loc 2 197 9 is_stmt 0 view .LVU923
 3288              	.LBE166:
 3289              	.LBE165:
2633:bsp/middlewares/freertos/source/tasks.c **** 
 3290              		.loc 1 2633 5 is_stmt 1 discriminator 1 view .LVU924
2633:bsp/middlewares/freertos/source/tasks.c **** 
 3291              		.loc 1 2633 5 discriminator 1 view .LVU925
2633:bsp/middlewares/freertos/source/tasks.c **** 
 3292              		.loc 1 2633 5 discriminator 1 view .LVU926
 3293 0016 FEE7     		b	.L248
 3294              	.L247:
2628:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xYieldOccurred;
 3295              		.loc 1 2628 1 is_stmt 0 discriminator 2 view .LVU927
 3296 0018 10B5     		push	{r4, lr}
 3297              	.LCFI28:
 3298              		.cfi_def_cfa_offset 8
 3299              		.cfi_offset 4, -8
 3300              		.cfi_offset 14, -4
 3301 001a 0446     		mov	r4, r0
2633:bsp/middlewares/freertos/source/tasks.c **** 
 3302              		.loc 1 2633 46 is_stmt 1 discriminator 2 view .LVU928
2637:bsp/middlewares/freertos/source/tasks.c ****     xPendedTicks += xTicksToCatchUp;
 3303              		.loc 1 2637 5 discriminator 2 view .LVU929
 3304 001c FFF7FEFF 		bl	vTaskSuspendAll
 3305              	.LVL236:
2638:bsp/middlewares/freertos/source/tasks.c ****     xYieldOccurred = xTaskResumeAll();
 3306              		.loc 1 2638 5 discriminator 2 view .LVU930
2638:bsp/middlewares/freertos/source/tasks.c ****     xYieldOccurred = xTaskResumeAll();
 3307              		.loc 1 2638 18 is_stmt 0 discriminator 2 view .LVU931
 3308 0020 044B     		ldr	r3, .L251+4
 3309 0022 1868     		ldr	r0, [r3]
 3310 0024 2044     		add	r0, r0, r4
 3311 0026 1860     		str	r0, [r3]
2639:bsp/middlewares/freertos/source/tasks.c **** 
 3312              		.loc 1 2639 5 is_stmt 1 discriminator 2 view .LVU932
2639:bsp/middlewares/freertos/source/tasks.c **** 
 3313              		.loc 1 2639 22 is_stmt 0 discriminator 2 view .LVU933
 3314 0028 FFF7FEFF 		bl	xTaskResumeAll
 3315              	.LVL237:
2641:bsp/middlewares/freertos/source/tasks.c **** }
 3316              		.loc 1 2641 5 is_stmt 1 discriminator 2 view .LVU934
2642:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
 3317              		.loc 1 2642 1 is_stmt 0 discriminator 2 view .LVU935
 3318 002c 10BD     		pop	{r4, pc}
 3319              	.LVL238:
 3320              	.L252:
2642:bsp/middlewares/freertos/source/tasks.c **** /*----------------------------------------------------------*/
 3321              		.loc 1 2642 1 discriminator 2 view .LVU936
 3322 002e 00BF     		.align	2
 3323              	.L251:
 3324 0030 00000000 		.word	.LANCHOR16
 3325 0034 00000000 		.word	.LANCHOR21
 3326              		.cfi_endproc
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 172


 3327              	.LFE26:
 3329              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3330              		.align	1
 3331              		.global	vTaskSwitchContext
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3336              	vTaskSwitchContext:
 3337              	.LFB28:
3011:bsp/middlewares/freertos/source/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3338              		.loc 1 3011 1 is_stmt 1 view -0
 3339              		.cfi_startproc
 3340              		@ args = 0, pretend = 0, frame = 0
 3341              		@ frame_needed = 0, uses_anonymous_args = 0
 3342              		@ link register save eliminated.
3012:bsp/middlewares/freertos/source/tasks.c ****     {
 3343              		.loc 1 3012 5 view .LVU938
3012:bsp/middlewares/freertos/source/tasks.c ****     {
 3344              		.loc 1 3012 30 is_stmt 0 view .LVU939
 3345 0000 204B     		ldr	r3, .L260
 3346 0002 1B68     		ldr	r3, [r3]
3012:bsp/middlewares/freertos/source/tasks.c ****     {
 3347              		.loc 1 3012 7 view .LVU940
 3348 0004 1BB1     		cbz	r3, .L254
3016:bsp/middlewares/freertos/source/tasks.c ****     }
 3349              		.loc 1 3016 9 is_stmt 1 view .LVU941
3016:bsp/middlewares/freertos/source/tasks.c ****     }
 3350              		.loc 1 3016 23 is_stmt 0 view .LVU942
 3351 0006 204B     		ldr	r3, .L260+4
 3352 0008 0122     		movs	r2, #1
 3353 000a 1A60     		str	r2, [r3]
 3354 000c 7047     		bx	lr
 3355              	.L254:
3020:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_OUT();
 3356              		.loc 1 3020 9 is_stmt 1 view .LVU943
3020:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_OUT();
 3357              		.loc 1 3020 23 is_stmt 0 view .LVU944
 3358 000e 1E4B     		ldr	r3, .L260+4
 3359 0010 0022     		movs	r2, #0
 3360 0012 1A60     		str	r2, [r3]
3021:bsp/middlewares/freertos/source/tasks.c **** 
 3361              		.loc 1 3021 33 is_stmt 1 view .LVU945
3052:bsp/middlewares/freertos/source/tasks.c **** 
 3362              		.loc 1 3052 39 view .LVU946
 3363              	.LBB167:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3364              		.loc 1 3063 9 view .LVU947
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3365              		.loc 1 3063 9 view .LVU948
 3366 0014 1D4B     		ldr	r3, .L260+8
 3367 0016 1B68     		ldr	r3, [r3]
 3368              	.LVL239:
 3369              	.LBB168:
 3370              	.LBI168:
 131:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         {
 3371              		.loc 2 131 66 view .LVU949
 3372              	.LBB169:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 173


 133:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3373              		.loc 2 133 13 view .LVU950
 135:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3374              		.loc 2 135 13 view .LVU951
 3375              		.syntax unified
 3376              	@ 135 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3377 0018 B3FA83F3 		clz r3, r3
 3378              	@ 0 "" 2
 3379              	.LVL240:
 135:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3380              		.loc 2 135 13 is_stmt 0 view .LVU952
 3381              		.thumb
 3382              		.syntax unified
 3383 001c DBB2     		uxtb	r3, r3
 3384              	.LVL241:
 137:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3385              		.loc 2 137 13 is_stmt 1 view .LVU953
 137:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3386              		.loc 2 137 13 is_stmt 0 view .LVU954
 3387              	.LBE169:
 3388              	.LBE168:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3389              		.loc 1 3063 9 view .LVU955
 3390 001e C3F11F03 		rsb	r3, r3, #31
 3391              	.LVL242:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3392              		.loc 1 3063 9 is_stmt 1 view .LVU956
 3393 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3394 0026 8A00     		lsls	r2, r1, #2
 3395 0028 1949     		ldr	r1, .L260+12
 3396 002a 8A58     		ldr	r2, [r1, r2]
 3397 002c 42B9     		cbnz	r2, .L256
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3398              		.loc 1 3063 9 view .LVU957
 3399              	.LBB170:
 3400              	.LBI170:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3401              		.loc 2 193 34 view .LVU958
 3402              	.LBB171:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3403              		.loc 2 195 9 view .LVU959
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3404              		.loc 2 197 9 view .LVU960
 3405              		.syntax unified
 3406              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3407 002e 4FF01003 			mov r3, #16												
 3408 0032 83F31188 		msr basepri, r3											
 3409 0036 BFF36F8F 		isb														
 3410 003a BFF34F8F 		dsb														
 3411              	
 3412              	@ 0 "" 2
 3413              	.LVL243:
 3414              		.thumb
 3415              		.syntax unified
 3416              	.L257:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3417              		.loc 2 197 9 is_stmt 0 view .LVU961
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 174


 3418              	.LBE171:
 3419              	.LBE170:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3420              		.loc 1 3063 9 is_stmt 1 discriminator 1 view .LVU962
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3421              		.loc 1 3063 9 discriminator 1 view .LVU963
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3422              		.loc 1 3063 9 discriminator 1 view .LVU964
 3423 003e FEE7     		b	.L257
 3424              	.LVL244:
 3425              	.L256:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3426              		.loc 1 3063 9 discriminator 2 view .LVU965
 3427              	.LBB172:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3428              		.loc 1 3063 9 discriminator 2 view .LVU966
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3429              		.loc 1 3063 9 discriminator 2 view .LVU967
 3430 0040 1349     		ldr	r1, .L260+12
 3431 0042 03EB8300 		add	r0, r3, r3, lsl #2
 3432 0046 8200     		lsls	r2, r0, #2
 3433 0048 0A44     		add	r2, r2, r1
 3434 004a 5068     		ldr	r0, [r2, #4]
 3435 004c 4068     		ldr	r0, [r0, #4]
 3436 004e 5060     		str	r0, [r2, #4]
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3437              		.loc 1 3063 9 discriminator 2 view .LVU968
 3438 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3439 0054 4FEA8C02 		lsl	r2, ip, #2
 3440 0058 0832     		adds	r2, r2, #8
 3441 005a 1144     		add	r1, r1, r2
 3442 005c 8842     		cmp	r0, r1
 3443 005e 09D0     		beq	.L259
 3444              	.L258:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3445              		.loc 1 3063 9 discriminator 6 view .LVU969
 3446 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3447              	.LVL245:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3448              		.loc 1 3063 9 is_stmt 0 discriminator 6 view .LVU970
 3449 0064 9A00     		lsls	r2, r3, #2
 3450 0066 0A4B     		ldr	r3, .L260+12
 3451 0068 1344     		add	r3, r3, r2
 3452 006a 5B68     		ldr	r3, [r3, #4]
 3453 006c DA68     		ldr	r2, [r3, #12]
 3454 006e 094B     		ldr	r3, .L260+16
 3455 0070 1A60     		str	r2, [r3]
 3456              	.LBE172:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3457              		.loc 1 3063 9 is_stmt 1 discriminator 6 view .LVU971
 3458              	.LBE167:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3459              		.loc 1 3063 43 discriminator 6 view .LVU972
3064:bsp/middlewares/freertos/source/tasks.c **** 
 3460              		.loc 1 3064 32 discriminator 6 view .LVU973
3083:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 3461              		.loc 1 3083 1 is_stmt 0 discriminator 6 view .LVU974
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 175


 3462 0072 7047     		bx	lr
 3463              	.LVL246:
 3464              	.L259:
 3465              	.LBB174:
 3466              	.LBB173:
3063:bsp/middlewares/freertos/source/tasks.c ****         traceTASK_SWITCHED_IN();
 3467              		.loc 1 3063 9 is_stmt 1 discriminator 4 view .LVU975
 3468 0074 4068     		ldr	r0, [r0, #4]
 3469 0076 6246     		mov	r2, ip
 3470 0078 9100     		lsls	r1, r2, #2
 3471 007a 054A     		ldr	r2, .L260+12
 3472 007c 0A44     		add	r2, r2, r1
 3473 007e 5060     		str	r0, [r2, #4]
 3474 0080 EEE7     		b	.L258
 3475              	.L261:
 3476 0082 00BF     		.align	2
 3477              	.L260:
 3478 0084 00000000 		.word	.LANCHOR16
 3479 0088 00000000 		.word	.LANCHOR17
 3480 008c 00000000 		.word	.LANCHOR13
 3481 0090 00000000 		.word	.LANCHOR4
 3482 0094 00000000 		.word	.LANCHOR10
 3483              	.LBE173:
 3484              	.LBE174:
 3485              		.cfi_endproc
 3486              	.LFE28:
 3488              		.section	.text.vTaskSuspend,"ax",%progbits
 3489              		.align	1
 3490              		.global	vTaskSuspend
 3491              		.syntax unified
 3492              		.thumb
 3493              		.thumb_func
 3495              	vTaskSuspend:
 3496              	.LVL247:
 3497              	.LFB14:
1707:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 3498              		.loc 1 1707 5 view -0
 3499              		.cfi_startproc
 3500              		@ args = 0, pretend = 0, frame = 0
 3501              		@ frame_needed = 0, uses_anonymous_args = 0
1707:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 3502              		.loc 1 1707 5 is_stmt 0 view .LVU977
 3503 0000 38B5     		push	{r3, r4, r5, lr}
 3504              	.LCFI29:
 3505              		.cfi_def_cfa_offset 16
 3506              		.cfi_offset 3, -16
 3507              		.cfi_offset 4, -12
 3508              		.cfi_offset 5, -8
 3509              		.cfi_offset 14, -4
 3510 0002 0446     		mov	r4, r0
1708:bsp/middlewares/freertos/source/tasks.c **** 
 3511              		.loc 1 1708 9 is_stmt 1 view .LVU978
1710:bsp/middlewares/freertos/source/tasks.c ****         {
 3512              		.loc 1 1710 9 view .LVU979
 3513 0004 FFF7FEFF 		bl	vPortEnterCritical
 3514              	.LVL248:
1714:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 176


 3515              		.loc 1 1714 13 view .LVU980
1714:bsp/middlewares/freertos/source/tasks.c **** 
 3516              		.loc 1 1714 21 is_stmt 0 view .LVU981
 3517 0008 4CB3     		cbz	r4, .L276
 3518              	.LVL249:
 3519              	.L263:
1716:bsp/middlewares/freertos/source/tasks.c **** 
 3520              		.loc 1 1716 39 is_stmt 1 discriminator 4 view .LVU982
1720:bsp/middlewares/freertos/source/tasks.c ****             {
 3521              		.loc 1 1720 13 discriminator 4 view .LVU983
1720:bsp/middlewares/freertos/source/tasks.c ****             {
 3522              		.loc 1 1720 17 is_stmt 0 discriminator 4 view .LVU984
 3523 000a 251D     		adds	r5, r4, #4
 3524 000c 2846     		mov	r0, r5
 3525 000e FFF7FEFF 		bl	uxListRemove
 3526              	.LVL250:
1720:bsp/middlewares/freertos/source/tasks.c ****             {
 3527              		.loc 1 1720 15 discriminator 4 view .LVU985
 3528 0012 68B9     		cbnz	r0, .L264
1722:bsp/middlewares/freertos/source/tasks.c ****             }
 3529              		.loc 1 1722 17 is_stmt 1 view .LVU986
 3530 0014 E26A     		ldr	r2, [r4, #44]
 3531 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3532 001a 9B00     		lsls	r3, r3, #2
 3533 001c 2F49     		ldr	r1, .L280
 3534 001e CB58     		ldr	r3, [r1, r3]
 3535 0020 33B9     		cbnz	r3, .L264
1722:bsp/middlewares/freertos/source/tasks.c ****             }
 3536              		.loc 1 1722 17 discriminator 1 view .LVU987
 3537 0022 0123     		movs	r3, #1
 3538 0024 9340     		lsls	r3, r3, r2
 3539 0026 2E49     		ldr	r1, .L280+4
 3540 0028 0A68     		ldr	r2, [r1]
 3541 002a 22EA0302 		bic	r2, r2, r3
 3542 002e 0A60     		str	r2, [r1]
 3543              	.L264:
1726:bsp/middlewares/freertos/source/tasks.c ****             }
 3544              		.loc 1 1726 41 view .LVU988
1730:bsp/middlewares/freertos/source/tasks.c ****             {
 3545              		.loc 1 1730 13 view .LVU989
1730:bsp/middlewares/freertos/source/tasks.c ****             {
 3546              		.loc 1 1730 17 is_stmt 0 view .LVU990
 3547 0030 A36A     		ldr	r3, [r4, #40]
1730:bsp/middlewares/freertos/source/tasks.c ****             {
 3548              		.loc 1 1730 15 view .LVU991
 3549 0032 1BB1     		cbz	r3, .L265
1732:bsp/middlewares/freertos/source/tasks.c ****             }
 3550              		.loc 1 1732 17 is_stmt 1 view .LVU992
1732:bsp/middlewares/freertos/source/tasks.c ****             }
 3551              		.loc 1 1732 26 is_stmt 0 view .LVU993
 3552 0034 04F11800 		add	r0, r4, #24
 3553 0038 FFF7FEFF 		bl	uxListRemove
 3554              	.LVL251:
 3555              	.L265:
1736:bsp/middlewares/freertos/source/tasks.c ****             }
 3556              		.loc 1 1736 41 is_stmt 1 view .LVU994
1739:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 177


 3557              		.loc 1 1739 13 view .LVU995
 3558 003c 2946     		mov	r1, r5
 3559 003e 2948     		ldr	r0, .L280+8
 3560 0040 FFF7FEFF 		bl	vListInsertEnd
 3561              	.LVL252:
 3562              	.LBB175:
1743:bsp/middlewares/freertos/source/tasks.c **** 
 3563              		.loc 1 1743 21 view .LVU996
1745:bsp/middlewares/freertos/source/tasks.c ****                     {
 3564              		.loc 1 1745 21 view .LVU997
1745:bsp/middlewares/freertos/source/tasks.c ****                     {
 3565              		.loc 1 1745 28 is_stmt 0 view .LVU998
 3566 0044 0023     		movs	r3, #0
 3567              	.LVL253:
 3568              	.L266:
1745:bsp/middlewares/freertos/source/tasks.c ****                     {
 3569              		.loc 1 1745 33 is_stmt 1 discriminator 1 view .LVU999
1745:bsp/middlewares/freertos/source/tasks.c ****                     {
 3570              		.loc 1 1745 21 is_stmt 0 discriminator 1 view .LVU1000
 3571 0046 002B     		cmp	r3, #0
 3572 0048 0CDD     		ble	.L268
 3573              	.LBE175:
1757:bsp/middlewares/freertos/source/tasks.c **** 
 3574              		.loc 1 1757 9 is_stmt 1 view .LVU1001
 3575 004a FFF7FEFF 		bl	vPortExitCritical
 3576              	.LVL254:
1759:bsp/middlewares/freertos/source/tasks.c ****         {
 3577              		.loc 1 1759 9 view .LVU1002
1759:bsp/middlewares/freertos/source/tasks.c ****         {
 3578              		.loc 1 1759 31 is_stmt 0 view .LVU1003
 3579 004e 264B     		ldr	r3, .L280+12
 3580 0050 1B68     		ldr	r3, [r3]
1759:bsp/middlewares/freertos/source/tasks.c ****         {
 3581              		.loc 1 1759 11 view .LVU1004
 3582 0052 A3B9     		cbnz	r3, .L277
 3583              	.L269:
1771:bsp/middlewares/freertos/source/tasks.c ****         }
 3584              		.loc 1 1771 37 is_stmt 1 view .LVU1005
1774:bsp/middlewares/freertos/source/tasks.c ****         {
 3585              		.loc 1 1774 9 view .LVU1006
1774:bsp/middlewares/freertos/source/tasks.c ****         {
 3586              		.loc 1 1774 19 is_stmt 0 view .LVU1007
 3587 0054 254B     		ldr	r3, .L280+16
 3588 0056 1B68     		ldr	r3, [r3]
1774:bsp/middlewares/freertos/source/tasks.c ****         {
 3589              		.loc 1 1774 11 view .LVU1008
 3590 0058 A342     		cmp	r3, r4
 3591 005a 17D0     		beq	.L278
 3592              	.L262:
1805:bsp/middlewares/freertos/source/tasks.c **** 
 3593              		.loc 1 1805 5 view .LVU1009
 3594 005c 38BD     		pop	{r3, r4, r5, pc}
 3595              	.LVL255:
 3596              	.L276:
1714:bsp/middlewares/freertos/source/tasks.c **** 
 3597              		.loc 1 1714 21 discriminator 1 view .LVU1010
 3598 005e 234B     		ldr	r3, .L280+16
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 178


 3599 0060 1C68     		ldr	r4, [r3]
 3600              	.LVL256:
1714:bsp/middlewares/freertos/source/tasks.c **** 
 3601              		.loc 1 1714 21 discriminator 1 view .LVU1011
 3602 0062 D2E7     		b	.L263
 3603              	.LVL257:
 3604              	.L268:
 3605              	.LBB176:
1747:bsp/middlewares/freertos/source/tasks.c ****                         {
 3606              		.loc 1 1747 25 is_stmt 1 view .LVU1012
1747:bsp/middlewares/freertos/source/tasks.c ****                         {
 3607              		.loc 1 1747 49 is_stmt 0 view .LVU1013
 3608 0064 E218     		adds	r2, r4, r3
 3609 0066 92F84820 		ldrb	r2, [r2, #72]	@ zero_extendqisi2
 3610 006a D2B2     		uxtb	r2, r2
1747:bsp/middlewares/freertos/source/tasks.c ****                         {
 3611              		.loc 1 1747 27 view .LVU1014
 3612 006c 012A     		cmp	r2, #1
 3613 006e 01D0     		beq	.L279
 3614              	.L267:
1745:bsp/middlewares/freertos/source/tasks.c ****                     {
 3615              		.loc 1 1745 76 is_stmt 1 discriminator 2 view .LVU1015
1745:bsp/middlewares/freertos/source/tasks.c ****                     {
 3616              		.loc 1 1745 77 is_stmt 0 discriminator 2 view .LVU1016
 3617 0070 0133     		adds	r3, r3, #1
 3618              	.LVL258:
1745:bsp/middlewares/freertos/source/tasks.c ****                     {
 3619              		.loc 1 1745 77 discriminator 2 view .LVU1017
 3620 0072 E8E7     		b	.L266
 3621              	.L279:
1751:bsp/middlewares/freertos/source/tasks.c ****                         }
 3622              		.loc 1 1751 29 is_stmt 1 view .LVU1018
1751:bsp/middlewares/freertos/source/tasks.c ****                         }
 3623              		.loc 1 1751 55 is_stmt 0 view .LVU1019
 3624 0074 E218     		adds	r2, r4, r3
 3625 0076 0021     		movs	r1, #0
 3626 0078 82F84810 		strb	r1, [r2, #72]
 3627 007c F8E7     		b	.L267
 3628              	.LVL259:
 3629              	.L277:
1751:bsp/middlewares/freertos/source/tasks.c ****                         }
 3630              		.loc 1 1751 55 view .LVU1020
 3631              	.LBE176:
1763:bsp/middlewares/freertos/source/tasks.c ****             {
 3632              		.loc 1 1763 13 is_stmt 1 view .LVU1021
 3633 007e FFF7FEFF 		bl	vPortEnterCritical
 3634              	.LVL260:
1765:bsp/middlewares/freertos/source/tasks.c ****             }
 3635              		.loc 1 1765 17 view .LVU1022
 3636 0082 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3637              	.LVL261:
1767:bsp/middlewares/freertos/source/tasks.c ****         }
 3638              		.loc 1 1767 13 view .LVU1023
 3639 0086 FFF7FEFF 		bl	vPortExitCritical
 3640              	.LVL262:
 3641 008a E3E7     		b	.L269
 3642              	.L278:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 179


1776:bsp/middlewares/freertos/source/tasks.c ****             {
 3643              		.loc 1 1776 13 view .LVU1024
1776:bsp/middlewares/freertos/source/tasks.c ****             {
 3644              		.loc 1 1776 35 is_stmt 0 view .LVU1025
 3645 008c 164B     		ldr	r3, .L280+12
 3646 008e 1B68     		ldr	r3, [r3]
1776:bsp/middlewares/freertos/source/tasks.c ****             {
 3647              		.loc 1 1776 15 view .LVU1026
 3648 0090 B3B1     		cbz	r3, .L271
1779:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 3649              		.loc 1 1779 17 is_stmt 1 view .LVU1027
 3650 0092 174B     		ldr	r3, .L280+20
 3651 0094 1B68     		ldr	r3, [r3]
 3652 0096 43B1     		cbz	r3, .L272
1779:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 3653              		.loc 1 1779 17 view .LVU1028
 3654              	.LBB177:
 3655              	.LBI177:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3656              		.loc 2 193 34 view .LVU1029
 3657              	.LBB178:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3658              		.loc 2 195 9 view .LVU1030
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3659              		.loc 2 197 9 view .LVU1031
 3660              		.syntax unified
 3661              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3662 0098 4FF01003 			mov r3, #16												
 3663 009c 83F31188 		msr basepri, r3											
 3664 00a0 BFF36F8F 		isb														
 3665 00a4 BFF34F8F 		dsb														
 3666              	
 3667              	@ 0 "" 2
 3668              	.LVL263:
 3669              		.thumb
 3670              		.syntax unified
 3671              	.L273:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3672              		.loc 2 197 9 is_stmt 0 view .LVU1032
 3673              	.LBE178:
 3674              	.LBE177:
1779:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 3675              		.loc 1 1779 17 is_stmt 1 discriminator 1 view .LVU1033
1779:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 3676              		.loc 1 1779 17 discriminator 1 view .LVU1034
1779:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 3677              		.loc 1 1779 17 discriminator 1 view .LVU1035
 3678 00a8 FEE7     		b	.L273
 3679              	.L272:
1779:bsp/middlewares/freertos/source/tasks.c ****                 portYIELD_WITHIN_API();
 3680              		.loc 1 1779 58 discriminator 2 view .LVU1036
1780:bsp/middlewares/freertos/source/tasks.c ****             }
 3681              		.loc 1 1780 17 discriminator 2 view .LVU1037
 3682 00aa 4FF0E023 		mov	r3, #-536813568
 3683 00ae 4FF08052 		mov	r2, #268435456
 3684 00b2 C3F8042D 		str	r2, [r3, #3332]
1780:bsp/middlewares/freertos/source/tasks.c ****             }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 180


 3685              		.loc 1 1780 17 discriminator 2 view .LVU1038
 3686              		.syntax unified
 3687              	@ 1780 "bsp/middlewares/freertos/source/tasks.c" 1
 3688 00b6 BFF34F8F 		dsb
 3689              	@ 0 "" 2
1780:bsp/middlewares/freertos/source/tasks.c ****             }
 3690              		.loc 1 1780 17 discriminator 2 view .LVU1039
 3691              	@ 1780 "bsp/middlewares/freertos/source/tasks.c" 1
 3692 00ba BFF36F8F 		isb
 3693              	@ 0 "" 2
1780:bsp/middlewares/freertos/source/tasks.c ****             }
 3694              		.loc 1 1780 39 discriminator 2 view .LVU1040
 3695              		.thumb
 3696              		.syntax unified
 3697 00be CDE7     		b	.L262
 3698              	.L271:
1787:bsp/middlewares/freertos/source/tasks.c ****                 {
 3699              		.loc 1 1787 17 view .LVU1041
1787:bsp/middlewares/freertos/source/tasks.c ****                 {
 3700              		.loc 1 1787 21 is_stmt 0 view .LVU1042
 3701 00c0 084B     		ldr	r3, .L280+8
 3702 00c2 1A68     		ldr	r2, [r3]
1787:bsp/middlewares/freertos/source/tasks.c ****                 {
 3703              		.loc 1 1787 68 view .LVU1043
 3704 00c4 0B4B     		ldr	r3, .L280+24
 3705 00c6 1B68     		ldr	r3, [r3]
1787:bsp/middlewares/freertos/source/tasks.c ****                 {
 3706              		.loc 1 1787 19 view .LVU1044
 3707 00c8 9A42     		cmp	r2, r3
 3708 00ca 03D1     		bne	.L274
1793:bsp/middlewares/freertos/source/tasks.c ****                 }
 3709              		.loc 1 1793 21 is_stmt 1 view .LVU1045
1793:bsp/middlewares/freertos/source/tasks.c ****                 }
 3710              		.loc 1 1793 34 is_stmt 0 view .LVU1046
 3711 00cc 074B     		ldr	r3, .L280+16
 3712 00ce 0022     		movs	r2, #0
 3713 00d0 1A60     		str	r2, [r3]
 3714 00d2 C3E7     		b	.L262
 3715              	.L274:
1797:bsp/middlewares/freertos/source/tasks.c ****                 }
 3716              		.loc 1 1797 21 is_stmt 1 view .LVU1047
 3717 00d4 FFF7FEFF 		bl	vTaskSwitchContext
 3718              	.LVL264:
1803:bsp/middlewares/freertos/source/tasks.c ****         }
 3719              		.loc 1 1803 37 view .LVU1048
1805:bsp/middlewares/freertos/source/tasks.c **** 
 3720              		.loc 1 1805 5 is_stmt 0 view .LVU1049
 3721 00d8 C0E7     		b	.L262
 3722              	.L281:
 3723 00da 00BF     		.align	2
 3724              	.L280:
 3725 00dc 00000000 		.word	.LANCHOR4
 3726 00e0 00000000 		.word	.LANCHOR13
 3727 00e4 00000000 		.word	.LANCHOR0
 3728 00e8 00000000 		.word	.LANCHOR11
 3729 00ec 00000000 		.word	.LANCHOR10
 3730 00f0 00000000 		.word	.LANCHOR16
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 181


 3731 00f4 00000000 		.word	.LANCHOR9
 3732              		.cfi_endproc
 3733              	.LFE14:
 3735              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3736              		.align	1
 3737              		.global	vTaskPlaceOnEventList
 3738              		.syntax unified
 3739              		.thumb
 3740              		.thumb_func
 3742              	vTaskPlaceOnEventList:
 3743              	.LVL265:
 3744              	.LFB29:
3088:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxEventList );
 3745              		.loc 1 3088 1 is_stmt 1 view -0
 3746              		.cfi_startproc
 3747              		@ args = 0, pretend = 0, frame = 0
 3748              		@ frame_needed = 0, uses_anonymous_args = 0
3089:bsp/middlewares/freertos/source/tasks.c **** 
 3749              		.loc 1 3089 5 view .LVU1051
 3750 0000 58B1     		cbz	r0, .L287
3088:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxEventList );
 3751              		.loc 1 3088 1 is_stmt 0 discriminator 2 view .LVU1052
 3752 0002 10B5     		push	{r4, lr}
 3753              	.LCFI30:
 3754              		.cfi_def_cfa_offset 8
 3755              		.cfi_offset 4, -8
 3756              		.cfi_offset 14, -4
 3757 0004 0C46     		mov	r4, r1
3089:bsp/middlewares/freertos/source/tasks.c **** 
 3758              		.loc 1 3089 32 is_stmt 1 discriminator 2 view .LVU1053
3098:bsp/middlewares/freertos/source/tasks.c **** 
 3759              		.loc 1 3098 5 discriminator 2 view .LVU1054
3098:bsp/middlewares/freertos/source/tasks.c **** 
 3760              		.loc 1 3098 46 is_stmt 0 discriminator 2 view .LVU1055
 3761 0006 094A     		ldr	r2, .L288
 3762 0008 1168     		ldr	r1, [r2]
 3763              	.LVL266:
3098:bsp/middlewares/freertos/source/tasks.c **** 
 3764              		.loc 1 3098 5 discriminator 2 view .LVU1056
 3765 000a 1831     		adds	r1, r1, #24
 3766 000c FFF7FEFF 		bl	vListInsert
 3767              	.LVL267:
3100:bsp/middlewares/freertos/source/tasks.c **** }
 3768              		.loc 1 3100 5 is_stmt 1 discriminator 2 view .LVU1057
 3769 0010 0121     		movs	r1, #1
 3770 0012 2046     		mov	r0, r4
 3771 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3772              	.LVL268:
3101:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 3773              		.loc 1 3101 1 is_stmt 0 discriminator 2 view .LVU1058
 3774 0018 10BD     		pop	{r4, pc}
 3775              	.LVL269:
 3776              	.L287:
 3777              	.LCFI31:
 3778              		.cfi_def_cfa_offset 0
 3779              		.cfi_restore 4
 3780              		.cfi_restore 14
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 182


3089:bsp/middlewares/freertos/source/tasks.c **** 
 3781              		.loc 1 3089 5 is_stmt 1 view .LVU1059
 3782              	.LBB179:
 3783              	.LBI179:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3784              		.loc 2 193 34 view .LVU1060
 3785              	.LBB180:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3786              		.loc 2 195 9 view .LVU1061
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3787              		.loc 2 197 9 view .LVU1062
 3788              		.syntax unified
 3789              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3790 001a 4FF01003 			mov r3, #16												
 3791 001e 83F31188 		msr basepri, r3											
 3792 0022 BFF36F8F 		isb														
 3793 0026 BFF34F8F 		dsb														
 3794              	
 3795              	@ 0 "" 2
 3796              	.LVL270:
 3797              		.thumb
 3798              		.syntax unified
 3799              	.L284:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3800              		.loc 2 197 9 is_stmt 0 view .LVU1063
 3801              	.LBE180:
 3802              	.LBE179:
3089:bsp/middlewares/freertos/source/tasks.c **** 
 3803              		.loc 1 3089 5 is_stmt 1 discriminator 1 view .LVU1064
3089:bsp/middlewares/freertos/source/tasks.c **** 
 3804              		.loc 1 3089 5 discriminator 1 view .LVU1065
3089:bsp/middlewares/freertos/source/tasks.c **** 
 3805              		.loc 1 3089 5 discriminator 1 view .LVU1066
 3806 002a FEE7     		b	.L284
 3807              	.L289:
 3808              		.align	2
 3809              	.L288:
 3810 002c 00000000 		.word	.LANCHOR10
 3811              		.cfi_endproc
 3812              	.LFE29:
 3814              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3815              		.align	1
 3816              		.global	vTaskPlaceOnUnorderedEventList
 3817              		.syntax unified
 3818              		.thumb
 3819              		.thumb_func
 3821              	vTaskPlaceOnUnorderedEventList:
 3822              	.LVL271:
 3823              	.LFB30:
3107:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxEventList );
 3824              		.loc 1 3107 1 view -0
 3825              		.cfi_startproc
 3826              		@ args = 0, pretend = 0, frame = 0
 3827              		@ frame_needed = 0, uses_anonymous_args = 0
3108:bsp/middlewares/freertos/source/tasks.c **** 
 3828              		.loc 1 3108 5 view .LVU1068
 3829 0000 70B1     		cbz	r0, .L297
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 183


3107:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxEventList );
 3830              		.loc 1 3107 1 is_stmt 0 discriminator 2 view .LVU1069
 3831 0002 10B5     		push	{r4, lr}
 3832              	.LCFI32:
 3833              		.cfi_def_cfa_offset 8
 3834              		.cfi_offset 4, -8
 3835              		.cfi_offset 14, -4
 3836 0004 1446     		mov	r4, r2
 3837 0006 0246     		mov	r2, r0
 3838              	.LVL272:
3108:bsp/middlewares/freertos/source/tasks.c **** 
 3839              		.loc 1 3108 32 is_stmt 1 discriminator 2 view .LVU1070
3112:bsp/middlewares/freertos/source/tasks.c **** 
 3840              		.loc 1 3112 5 discriminator 2 view .LVU1071
 3841 0008 114B     		ldr	r3, .L298
 3842 000a 1B68     		ldr	r3, [r3]
 3843 000c 8BB9     		cbnz	r3, .L293
3112:bsp/middlewares/freertos/source/tasks.c **** 
 3844              		.loc 1 3112 5 view .LVU1072
 3845              	.LBB181:
 3846              	.LBI181:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3847              		.loc 2 193 34 view .LVU1073
 3848              	.LBB182:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3849              		.loc 2 195 9 view .LVU1074
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3850              		.loc 2 197 9 view .LVU1075
 3851              		.syntax unified
 3852              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3853 000e 4FF01003 			mov r3, #16												
 3854 0012 83F31188 		msr basepri, r3											
 3855 0016 BFF36F8F 		isb														
 3856 001a BFF34F8F 		dsb														
 3857              	
 3858              	@ 0 "" 2
 3859              	.LVL273:
 3860              		.thumb
 3861              		.syntax unified
 3862              	.L294:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3863              		.loc 2 197 9 is_stmt 0 view .LVU1076
 3864              	.LBE182:
 3865              	.LBE181:
3112:bsp/middlewares/freertos/source/tasks.c **** 
 3866              		.loc 1 3112 5 is_stmt 1 discriminator 2 view .LVU1077
3112:bsp/middlewares/freertos/source/tasks.c **** 
 3867              		.loc 1 3112 5 discriminator 2 view .LVU1078
3112:bsp/middlewares/freertos/source/tasks.c **** 
 3868              		.loc 1 3112 5 discriminator 2 view .LVU1079
 3869 001e FEE7     		b	.L294
 3870              	.LVL274:
 3871              	.L297:
 3872              	.LCFI33:
 3873              		.cfi_def_cfa_offset 0
 3874              		.cfi_restore 4
 3875              		.cfi_restore 14
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 184


3108:bsp/middlewares/freertos/source/tasks.c **** 
 3876              		.loc 1 3108 5 view .LVU1080
 3877              	.LBB183:
 3878              	.LBI183:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3879              		.loc 2 193 34 view .LVU1081
 3880              	.LBB184:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3881              		.loc 2 195 9 view .LVU1082
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3882              		.loc 2 197 9 view .LVU1083
 3883              		.syntax unified
 3884              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3885 0020 4FF01003 			mov r3, #16												
 3886 0024 83F31188 		msr basepri, r3											
 3887 0028 BFF36F8F 		isb														
 3888 002c BFF34F8F 		dsb														
 3889              	
 3890              	@ 0 "" 2
 3891              	.LVL275:
 3892              		.thumb
 3893              		.syntax unified
 3894              	.L292:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3895              		.loc 2 197 9 is_stmt 0 view .LVU1084
 3896              	.LBE184:
 3897              	.LBE183:
3108:bsp/middlewares/freertos/source/tasks.c **** 
 3898              		.loc 1 3108 5 is_stmt 1 discriminator 1 view .LVU1085
3108:bsp/middlewares/freertos/source/tasks.c **** 
 3899              		.loc 1 3108 5 discriminator 1 view .LVU1086
3108:bsp/middlewares/freertos/source/tasks.c **** 
 3900              		.loc 1 3108 5 discriminator 1 view .LVU1087
 3901 0030 FEE7     		b	.L292
 3902              	.LVL276:
 3903              	.L293:
 3904              	.LCFI34:
 3905              		.cfi_def_cfa_offset 8
 3906              		.cfi_offset 4, -8
 3907              		.cfi_offset 14, -4
3112:bsp/middlewares/freertos/source/tasks.c **** 
 3908              		.loc 1 3112 46 discriminator 2 view .LVU1088
3117:bsp/middlewares/freertos/source/tasks.c **** 
 3909              		.loc 1 3117 5 discriminator 2 view .LVU1089
 3910 0032 084B     		ldr	r3, .L298+4
 3911 0034 1868     		ldr	r0, [r3]
 3912              	.LVL277:
3117:bsp/middlewares/freertos/source/tasks.c **** 
 3913              		.loc 1 3117 5 is_stmt 0 discriminator 2 view .LVU1090
 3914 0036 41F00041 		orr	r1, r1, #-2147483648
 3915              	.LVL278:
3117:bsp/middlewares/freertos/source/tasks.c **** 
 3916              		.loc 1 3117 5 discriminator 2 view .LVU1091
 3917 003a 8161     		str	r1, [r0, #24]
3124:bsp/middlewares/freertos/source/tasks.c **** 
 3918              		.loc 1 3124 5 is_stmt 1 discriminator 2 view .LVU1092
3124:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 185


 3919              		.loc 1 3124 49 is_stmt 0 discriminator 2 view .LVU1093
 3920 003c 1968     		ldr	r1, [r3]
3124:bsp/middlewares/freertos/source/tasks.c **** 
 3921              		.loc 1 3124 5 discriminator 2 view .LVU1094
 3922 003e 1831     		adds	r1, r1, #24
 3923 0040 1046     		mov	r0, r2
 3924 0042 FFF7FEFF 		bl	vListInsertEnd
 3925              	.LVL279:
3126:bsp/middlewares/freertos/source/tasks.c **** }
 3926              		.loc 1 3126 5 is_stmt 1 discriminator 2 view .LVU1095
 3927 0046 0121     		movs	r1, #1
 3928 0048 2046     		mov	r0, r4
 3929 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3930              	.LVL280:
3127:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 3931              		.loc 1 3127 1 is_stmt 0 discriminator 2 view .LVU1096
 3932 004e 10BD     		pop	{r4, pc}
 3933              	.LVL281:
 3934              	.L299:
3127:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 3935              		.loc 1 3127 1 discriminator 2 view .LVU1097
 3936              		.align	2
 3937              	.L298:
 3938 0050 00000000 		.word	.LANCHOR16
 3939 0054 00000000 		.word	.LANCHOR10
 3940              		.cfi_endproc
 3941              	.LFE30:
 3943              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3944              		.align	1
 3945              		.global	xTaskRemoveFromEventList
 3946              		.syntax unified
 3947              		.thumb
 3948              		.thumb_func
 3950              	xTaskRemoveFromEventList:
 3951              	.LVL282:
 3952              	.LFB31:
3166:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxUnblockedTCB;
 3953              		.loc 1 3166 1 is_stmt 1 view -0
 3954              		.cfi_startproc
 3955              		@ args = 0, pretend = 0, frame = 0
 3956              		@ frame_needed = 0, uses_anonymous_args = 0
3166:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxUnblockedTCB;
 3957              		.loc 1 3166 1 is_stmt 0 view .LVU1099
 3958 0000 38B5     		push	{r3, r4, r5, lr}
 3959              	.LCFI35:
 3960              		.cfi_def_cfa_offset 16
 3961              		.cfi_offset 3, -16
 3962              		.cfi_offset 4, -12
 3963              		.cfi_offset 5, -8
 3964              		.cfi_offset 14, -4
3167:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xReturn;
 3965              		.loc 1 3167 5 is_stmt 1 view .LVU1100
3168:bsp/middlewares/freertos/source/tasks.c **** 
 3966              		.loc 1 3168 5 view .LVU1101
3183:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxUnblockedTCB );
 3967              		.loc 1 3183 5 view .LVU1102
3183:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxUnblockedTCB );
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 186


 3968              		.loc 1 3183 22 is_stmt 0 view .LVU1103
 3969 0002 C368     		ldr	r3, [r0, #12]
3183:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxUnblockedTCB );
 3970              		.loc 1 3183 20 view .LVU1104
 3971 0004 DC68     		ldr	r4, [r3, #12]
 3972              	.LVL283:
3184:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3973              		.loc 1 3184 5 is_stmt 1 view .LVU1105
 3974 0006 24B3     		cbz	r4, .L308
3184:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3975              		.loc 1 3184 35 discriminator 2 view .LVU1106
3185:bsp/middlewares/freertos/source/tasks.c **** 
 3976              		.loc 1 3185 5 discriminator 2 view .LVU1107
3185:bsp/middlewares/freertos/source/tasks.c **** 
 3977              		.loc 1 3185 14 is_stmt 0 discriminator 2 view .LVU1108
 3978 0008 04F11805 		add	r5, r4, #24
 3979 000c 2846     		mov	r0, r5
 3980              	.LVL284:
3185:bsp/middlewares/freertos/source/tasks.c **** 
 3981              		.loc 1 3185 14 discriminator 2 view .LVU1109
 3982 000e FFF7FEFF 		bl	uxListRemove
 3983              	.LVL285:
3187:bsp/middlewares/freertos/source/tasks.c ****     {
 3984              		.loc 1 3187 5 is_stmt 1 discriminator 2 view .LVU1110
3187:bsp/middlewares/freertos/source/tasks.c ****     {
 3985              		.loc 1 3187 30 is_stmt 0 discriminator 2 view .LVU1111
 3986 0012 184B     		ldr	r3, .L309
 3987 0014 1B68     		ldr	r3, [r3]
3187:bsp/middlewares/freertos/source/tasks.c ****     {
 3988              		.loc 1 3187 7 discriminator 2 view .LVU1112
 3989 0016 2BBB     		cbnz	r3, .L303
3189:bsp/middlewares/freertos/source/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 3990              		.loc 1 3189 9 is_stmt 1 view .LVU1113
3189:bsp/middlewares/freertos/source/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 3991              		.loc 1 3189 18 is_stmt 0 view .LVU1114
 3992 0018 251D     		adds	r5, r4, #4
 3993 001a 2846     		mov	r0, r5
 3994 001c FFF7FEFF 		bl	uxListRemove
 3995              	.LVL286:
3190:bsp/middlewares/freertos/source/tasks.c **** 
 3996              		.loc 1 3190 9 is_stmt 1 view .LVU1115
3190:bsp/middlewares/freertos/source/tasks.c **** 
 3997              		.loc 1 3190 9 view .LVU1116
 3998 0020 E06A     		ldr	r0, [r4, #44]
 3999 0022 0123     		movs	r3, #1
 4000 0024 8340     		lsls	r3, r3, r0
 4001 0026 144A     		ldr	r2, .L309+4
 4002 0028 1168     		ldr	r1, [r2]
 4003 002a 0B43     		orrs	r3, r3, r1
 4004 002c 1360     		str	r3, [r2]
3190:bsp/middlewares/freertos/source/tasks.c **** 
 4005              		.loc 1 3190 9 view .LVU1117
 4006 002e 00EB8000 		add	r0, r0, r0, lsl #2
 4007 0032 2946     		mov	r1, r5
 4008 0034 114B     		ldr	r3, .L309+8
 4009 0036 03EB8000 		add	r0, r3, r0, lsl #2
 4010 003a FFF7FEFF 		bl	vListInsertEnd
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 187


 4011              	.LVL287:
3190:bsp/middlewares/freertos/source/tasks.c **** 
 4012              		.loc 1 3190 48 view .LVU1118
 4013              	.L304:
3213:bsp/middlewares/freertos/source/tasks.c ****     {
 4014              		.loc 1 3213 5 view .LVU1119
3213:bsp/middlewares/freertos/source/tasks.c ****     {
 4015              		.loc 1 3213 23 is_stmt 0 view .LVU1120
 4016 003e E26A     		ldr	r2, [r4, #44]
3213:bsp/middlewares/freertos/source/tasks.c ****     {
 4017              		.loc 1 3213 50 view .LVU1121
 4018 0040 0F4B     		ldr	r3, .L309+12
 4019 0042 1B68     		ldr	r3, [r3]
 4020 0044 DB6A     		ldr	r3, [r3, #44]
3213:bsp/middlewares/freertos/source/tasks.c ****     {
 4021              		.loc 1 3213 7 view .LVU1122
 4022 0046 9A42     		cmp	r2, r3
 4023 0048 11D9     		bls	.L306
3218:bsp/middlewares/freertos/source/tasks.c **** 
 4024              		.loc 1 3218 9 is_stmt 1 view .LVU1123
 4025              	.LVL288:
3222:bsp/middlewares/freertos/source/tasks.c ****     }
 4026              		.loc 1 3222 9 view .LVU1124
3222:bsp/middlewares/freertos/source/tasks.c ****     }
 4027              		.loc 1 3222 23 is_stmt 0 view .LVU1125
 4028 004a 0120     		movs	r0, #1
 4029 004c 0D4B     		ldr	r3, .L309+16
 4030 004e 1860     		str	r0, [r3]
 4031              	.LVL289:
 4032              	.L300:
3230:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 4033              		.loc 1 3230 1 view .LVU1126
 4034 0050 38BD     		pop	{r3, r4, r5, pc}
 4035              	.LVL290:
 4036              	.L308:
3184:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4037              		.loc 1 3184 5 is_stmt 1 view .LVU1127
 4038              	.LBB185:
 4039              	.LBI185:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4040              		.loc 2 193 34 view .LVU1128
 4041              	.LBB186:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4042              		.loc 2 195 9 view .LVU1129
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4043              		.loc 2 197 9 view .LVU1130
 4044              		.syntax unified
 4045              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4046 0052 4FF01003 			mov r3, #16												
 4047 0056 83F31188 		msr basepri, r3											
 4048 005a BFF36F8F 		isb														
 4049 005e BFF34F8F 		dsb														
 4050              	
 4051              	@ 0 "" 2
 4052              	.LVL291:
 4053              		.thumb
 4054              		.syntax unified
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 188


 4055              	.L302:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4056              		.loc 2 197 9 is_stmt 0 view .LVU1131
 4057              	.LBE186:
 4058              	.LBE185:
3184:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4059              		.loc 1 3184 5 is_stmt 1 discriminator 1 view .LVU1132
3184:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4060              		.loc 1 3184 5 discriminator 1 view .LVU1133
3184:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4061              		.loc 1 3184 5 discriminator 1 view .LVU1134
 4062 0062 FEE7     		b	.L302
 4063              	.LVL292:
 4064              	.L303:
3210:bsp/middlewares/freertos/source/tasks.c ****     }
 4065              		.loc 1 3210 9 view .LVU1135
 4066 0064 2946     		mov	r1, r5
 4067 0066 0848     		ldr	r0, .L309+20
 4068 0068 FFF7FEFF 		bl	vListInsertEnd
 4069              	.LVL293:
 4070 006c E7E7     		b	.L304
 4071              	.L306:
3226:bsp/middlewares/freertos/source/tasks.c ****     }
 4072              		.loc 1 3226 17 is_stmt 0 view .LVU1136
 4073 006e 0020     		movs	r0, #0
 4074              	.LVL294:
3229:bsp/middlewares/freertos/source/tasks.c **** }
 4075              		.loc 1 3229 5 is_stmt 1 view .LVU1137
3229:bsp/middlewares/freertos/source/tasks.c **** }
 4076              		.loc 1 3229 12 is_stmt 0 view .LVU1138
 4077 0070 EEE7     		b	.L300
 4078              	.L310:
 4079 0072 00BF     		.align	2
 4080              	.L309:
 4081 0074 00000000 		.word	.LANCHOR16
 4082 0078 00000000 		.word	.LANCHOR13
 4083 007c 00000000 		.word	.LANCHOR4
 4084 0080 00000000 		.word	.LANCHOR10
 4085 0084 00000000 		.word	.LANCHOR17
 4086 0088 00000000 		.word	.LANCHOR1
 4087              		.cfi_endproc
 4088              	.LFE31:
 4090              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4091              		.align	1
 4092              		.global	vTaskRemoveFromUnorderedEventList
 4093              		.syntax unified
 4094              		.thumb
 4095              		.thumb_func
 4097              	vTaskRemoveFromUnorderedEventList:
 4098              	.LVL295:
 4099              	.LFB32:
3235:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxUnblockedTCB;
 4100              		.loc 1 3235 1 is_stmt 1 view -0
 4101              		.cfi_startproc
 4102              		@ args = 0, pretend = 0, frame = 0
 4103              		@ frame_needed = 0, uses_anonymous_args = 0
3235:bsp/middlewares/freertos/source/tasks.c ****     TCB_t * pxUnblockedTCB;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 189


 4104              		.loc 1 3235 1 is_stmt 0 view .LVU1140
 4105 0000 38B5     		push	{r3, r4, r5, lr}
 4106              	.LCFI36:
 4107              		.cfi_def_cfa_offset 16
 4108              		.cfi_offset 3, -16
 4109              		.cfi_offset 4, -12
 4110              		.cfi_offset 5, -8
 4111              		.cfi_offset 14, -4
3236:bsp/middlewares/freertos/source/tasks.c **** 
 4112              		.loc 1 3236 5 is_stmt 1 view .LVU1141
3240:bsp/middlewares/freertos/source/tasks.c **** 
 4113              		.loc 1 3240 5 view .LVU1142
 4114 0002 1C4B     		ldr	r3, .L319
 4115 0004 1B68     		ldr	r3, [r3]
 4116 0006 43B9     		cbnz	r3, .L312
3240:bsp/middlewares/freertos/source/tasks.c **** 
 4117              		.loc 1 3240 5 view .LVU1143
 4118              	.LBB187:
 4119              	.LBI187:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4120              		.loc 2 193 34 view .LVU1144
 4121              	.LBB188:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4122              		.loc 2 195 9 view .LVU1145
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4123              		.loc 2 197 9 view .LVU1146
 4124              		.syntax unified
 4125              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4126 0008 4FF01003 			mov r3, #16												
 4127 000c 83F31188 		msr basepri, r3											
 4128 0010 BFF36F8F 		isb														
 4129 0014 BFF34F8F 		dsb														
 4130              	
 4131              	@ 0 "" 2
 4132              	.LVL296:
 4133              		.thumb
 4134              		.syntax unified
 4135              	.L313:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4136              		.loc 2 197 9 is_stmt 0 view .LVU1147
 4137              	.LBE188:
 4138              	.LBE187:
3240:bsp/middlewares/freertos/source/tasks.c **** 
 4139              		.loc 1 3240 5 is_stmt 1 discriminator 1 view .LVU1148
3240:bsp/middlewares/freertos/source/tasks.c **** 
 4140              		.loc 1 3240 5 discriminator 1 view .LVU1149
3240:bsp/middlewares/freertos/source/tasks.c **** 
 4141              		.loc 1 3240 5 discriminator 1 view .LVU1150
 4142 0018 FEE7     		b	.L313
 4143              	.L312:
3240:bsp/middlewares/freertos/source/tasks.c **** 
 4144              		.loc 1 3240 52 discriminator 2 view .LVU1151
3243:bsp/middlewares/freertos/source/tasks.c **** 
 4145              		.loc 1 3243 5 discriminator 2 view .LVU1152
 4146 001a 41F00041 		orr	r1, r1, #-2147483648
 4147              	.LVL297:
3243:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 190


 4148              		.loc 1 3243 5 is_stmt 0 discriminator 2 view .LVU1153
 4149 001e 0160     		str	r1, [r0]
3247:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxUnblockedTCB );
 4150              		.loc 1 3247 5 is_stmt 1 discriminator 2 view .LVU1154
3247:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxUnblockedTCB );
 4151              		.loc 1 3247 20 is_stmt 0 discriminator 2 view .LVU1155
 4152 0020 C468     		ldr	r4, [r0, #12]
 4153              	.LVL298:
3248:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( pxEventListItem );
 4154              		.loc 1 3248 5 is_stmt 1 discriminator 2 view .LVU1156
 4155 0022 F4B1     		cbz	r4, .L318
3248:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( pxEventListItem );
 4156              		.loc 1 3248 35 discriminator 2 view .LVU1157
3249:bsp/middlewares/freertos/source/tasks.c **** 
 4157              		.loc 1 3249 5 discriminator 2 view .LVU1158
3249:bsp/middlewares/freertos/source/tasks.c **** 
 4158              		.loc 1 3249 14 is_stmt 0 discriminator 2 view .LVU1159
 4159 0024 FFF7FEFF 		bl	uxListRemove
 4160              	.LVL299:
3268:bsp/middlewares/freertos/source/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4161              		.loc 1 3268 5 is_stmt 1 discriminator 2 view .LVU1160
3268:bsp/middlewares/freertos/source/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4162              		.loc 1 3268 14 is_stmt 0 discriminator 2 view .LVU1161
 4163 0028 251D     		adds	r5, r4, #4
 4164 002a 2846     		mov	r0, r5
 4165 002c FFF7FEFF 		bl	uxListRemove
 4166              	.LVL300:
3269:bsp/middlewares/freertos/source/tasks.c **** 
 4167              		.loc 1 3269 5 is_stmt 1 discriminator 2 view .LVU1162
3269:bsp/middlewares/freertos/source/tasks.c **** 
 4168              		.loc 1 3269 5 discriminator 2 view .LVU1163
 4169 0030 E06A     		ldr	r0, [r4, #44]
 4170 0032 0123     		movs	r3, #1
 4171 0034 8340     		lsls	r3, r3, r0
 4172 0036 104A     		ldr	r2, .L319+4
 4173 0038 1168     		ldr	r1, [r2]
 4174 003a 0B43     		orrs	r3, r3, r1
 4175 003c 1360     		str	r3, [r2]
3269:bsp/middlewares/freertos/source/tasks.c **** 
 4176              		.loc 1 3269 5 discriminator 2 view .LVU1164
 4177 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4178 0042 2946     		mov	r1, r5
 4179 0044 0D4B     		ldr	r3, .L319+8
 4180 0046 03EB8000 		add	r0, r3, r0, lsl #2
 4181 004a FFF7FEFF 		bl	vListInsertEnd
 4182              	.LVL301:
3269:bsp/middlewares/freertos/source/tasks.c **** 
 4183              		.loc 1 3269 44 discriminator 2 view .LVU1165
3271:bsp/middlewares/freertos/source/tasks.c ****     {
 4184              		.loc 1 3271 5 discriminator 2 view .LVU1166
3271:bsp/middlewares/freertos/source/tasks.c ****     {
 4185              		.loc 1 3271 23 is_stmt 0 discriminator 2 view .LVU1167
 4186 004e E26A     		ldr	r2, [r4, #44]
3271:bsp/middlewares/freertos/source/tasks.c ****     {
 4187              		.loc 1 3271 50 discriminator 2 view .LVU1168
 4188 0050 0B4B     		ldr	r3, .L319+12
 4189 0052 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 191


 4190 0054 DB6A     		ldr	r3, [r3, #44]
3271:bsp/middlewares/freertos/source/tasks.c ****     {
 4191              		.loc 1 3271 7 discriminator 2 view .LVU1169
 4192 0056 9A42     		cmp	r2, r3
 4193 0058 02D9     		bls	.L311
3277:bsp/middlewares/freertos/source/tasks.c ****     }
 4194              		.loc 1 3277 9 is_stmt 1 view .LVU1170
3277:bsp/middlewares/freertos/source/tasks.c ****     }
 4195              		.loc 1 3277 23 is_stmt 0 view .LVU1171
 4196 005a 0A4B     		ldr	r3, .L319+16
 4197 005c 0122     		movs	r2, #1
 4198 005e 1A60     		str	r2, [r3]
 4199              	.L311:
3279:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 4200              		.loc 1 3279 1 view .LVU1172
 4201 0060 38BD     		pop	{r3, r4, r5, pc}
 4202              	.LVL302:
 4203              	.L318:
3248:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( pxEventListItem );
 4204              		.loc 1 3248 5 is_stmt 1 view .LVU1173
 4205              	.LBB189:
 4206              	.LBI189:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4207              		.loc 2 193 34 view .LVU1174
 4208              	.LBB190:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4209              		.loc 2 195 9 view .LVU1175
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4210              		.loc 2 197 9 view .LVU1176
 4211              		.syntax unified
 4212              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4213 0062 4FF01003 			mov r3, #16												
 4214 0066 83F31188 		msr basepri, r3											
 4215 006a BFF36F8F 		isb														
 4216 006e BFF34F8F 		dsb														
 4217              	
 4218              	@ 0 "" 2
 4219              	.LVL303:
 4220              		.thumb
 4221              		.syntax unified
 4222              	.L315:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4223              		.loc 2 197 9 is_stmt 0 view .LVU1177
 4224              	.LBE190:
 4225              	.LBE189:
3248:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( pxEventListItem );
 4226              		.loc 1 3248 5 is_stmt 1 discriminator 2 view .LVU1178
3248:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( pxEventListItem );
 4227              		.loc 1 3248 5 discriminator 2 view .LVU1179
3248:bsp/middlewares/freertos/source/tasks.c ****     ( void ) uxListRemove( pxEventListItem );
 4228              		.loc 1 3248 5 discriminator 2 view .LVU1180
 4229 0072 FEE7     		b	.L315
 4230              	.L320:
 4231              		.align	2
 4232              	.L319:
 4233 0074 00000000 		.word	.LANCHOR16
 4234 0078 00000000 		.word	.LANCHOR13
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 192


 4235 007c 00000000 		.word	.LANCHOR4
 4236 0080 00000000 		.word	.LANCHOR10
 4237 0084 00000000 		.word	.LANCHOR17
 4238              		.cfi_endproc
 4239              	.LFE32:
 4241              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4242              		.align	1
 4243              		.global	vTaskSetTimeOutState
 4244              		.syntax unified
 4245              		.thumb
 4246              		.thumb_func
 4248              	vTaskSetTimeOutState:
 4249              	.LVL304:
 4250              	.LFB33:
3283:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTimeOut );
 4251              		.loc 1 3283 1 view -0
 4252              		.cfi_startproc
 4253              		@ args = 0, pretend = 0, frame = 0
 4254              		@ frame_needed = 0, uses_anonymous_args = 0
3284:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
 4255              		.loc 1 3284 5 view .LVU1182
 4256 0000 60B1     		cbz	r0, .L326
3283:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTimeOut );
 4257              		.loc 1 3283 1 is_stmt 0 discriminator 2 view .LVU1183
 4258 0002 10B5     		push	{r4, lr}
 4259              	.LCFI37:
 4260              		.cfi_def_cfa_offset 8
 4261              		.cfi_offset 4, -8
 4262              		.cfi_offset 14, -4
 4263 0004 0446     		mov	r4, r0
3284:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
 4264              		.loc 1 3284 30 is_stmt 1 discriminator 2 view .LVU1184
3285:bsp/middlewares/freertos/source/tasks.c ****     {
 4265              		.loc 1 3285 5 discriminator 2 view .LVU1185
 4266 0006 FFF7FEFF 		bl	vPortEnterCritical
 4267              	.LVL305:
3287:bsp/middlewares/freertos/source/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 4268              		.loc 1 3287 9 discriminator 2 view .LVU1186
3287:bsp/middlewares/freertos/source/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 4269              		.loc 1 3287 35 is_stmt 0 discriminator 2 view .LVU1187
 4270 000a 094B     		ldr	r3, .L327
 4271 000c 1B68     		ldr	r3, [r3]
 4272 000e 2360     		str	r3, [r4]
3288:bsp/middlewares/freertos/source/tasks.c ****     }
 4273              		.loc 1 3288 9 is_stmt 1 discriminator 2 view .LVU1188
3288:bsp/middlewares/freertos/source/tasks.c ****     }
 4274              		.loc 1 3288 36 is_stmt 0 discriminator 2 view .LVU1189
 4275 0010 084B     		ldr	r3, .L327+4
 4276 0012 1B68     		ldr	r3, [r3]
 4277 0014 6360     		str	r3, [r4, #4]
3290:bsp/middlewares/freertos/source/tasks.c **** }
 4278              		.loc 1 3290 5 is_stmt 1 discriminator 2 view .LVU1190
 4279 0016 FFF7FEFF 		bl	vPortExitCritical
 4280              	.LVL306:
3291:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 4281              		.loc 1 3291 1 is_stmt 0 discriminator 2 view .LVU1191
 4282 001a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 193


 4283              	.LVL307:
 4284              	.L326:
 4285              	.LCFI38:
 4286              		.cfi_def_cfa_offset 0
 4287              		.cfi_restore 4
 4288              		.cfi_restore 14
3284:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
 4289              		.loc 1 3284 5 is_stmt 1 view .LVU1192
 4290              	.LBB191:
 4291              	.LBI191:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4292              		.loc 2 193 34 view .LVU1193
 4293              	.LBB192:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4294              		.loc 2 195 9 view .LVU1194
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4295              		.loc 2 197 9 view .LVU1195
 4296              		.syntax unified
 4297              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4298 001c 4FF01003 			mov r3, #16												
 4299 0020 83F31188 		msr basepri, r3											
 4300 0024 BFF36F8F 		isb														
 4301 0028 BFF34F8F 		dsb														
 4302              	
 4303              	@ 0 "" 2
 4304              	.LVL308:
 4305              		.thumb
 4306              		.syntax unified
 4307              	.L323:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4308              		.loc 2 197 9 is_stmt 0 view .LVU1196
 4309              	.LBE192:
 4310              	.LBE191:
3284:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
 4311              		.loc 1 3284 5 is_stmt 1 discriminator 1 view .LVU1197
3284:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
 4312              		.loc 1 3284 5 discriminator 1 view .LVU1198
3284:bsp/middlewares/freertos/source/tasks.c ****     taskENTER_CRITICAL();
 4313              		.loc 1 3284 5 discriminator 1 view .LVU1199
 4314 002c FEE7     		b	.L323
 4315              	.L328:
 4316 002e 00BF     		.align	2
 4317              	.L327:
 4318 0030 00000000 		.word	.LANCHOR20
 4319 0034 00000000 		.word	.LANCHOR15
 4320              		.cfi_endproc
 4321              	.LFE33:
 4323              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4324              		.align	1
 4325              		.global	vTaskInternalSetTimeOutState
 4326              		.syntax unified
 4327              		.thumb
 4328              		.thumb_func
 4330              	vTaskInternalSetTimeOutState:
 4331              	.LVL309:
 4332              	.LFB34:
3295:bsp/middlewares/freertos/source/tasks.c ****     /* For internal use only as it does not use a critical section. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 194


 4333              		.loc 1 3295 1 view -0
 4334              		.cfi_startproc
 4335              		@ args = 0, pretend = 0, frame = 0
 4336              		@ frame_needed = 0, uses_anonymous_args = 0
 4337              		@ link register save eliminated.
3297:bsp/middlewares/freertos/source/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 4338              		.loc 1 3297 5 view .LVU1201
3297:bsp/middlewares/freertos/source/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 4339              		.loc 1 3297 31 is_stmt 0 view .LVU1202
 4340 0000 034B     		ldr	r3, .L330
 4341 0002 1B68     		ldr	r3, [r3]
 4342 0004 0360     		str	r3, [r0]
3298:bsp/middlewares/freertos/source/tasks.c **** }
 4343              		.loc 1 3298 5 is_stmt 1 view .LVU1203
3298:bsp/middlewares/freertos/source/tasks.c **** }
 4344              		.loc 1 3298 32 is_stmt 0 view .LVU1204
 4345 0006 034B     		ldr	r3, .L330+4
 4346 0008 1B68     		ldr	r3, [r3]
 4347 000a 4360     		str	r3, [r0, #4]
3299:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 4348              		.loc 1 3299 1 view .LVU1205
 4349 000c 7047     		bx	lr
 4350              	.L331:
 4351 000e 00BF     		.align	2
 4352              	.L330:
 4353 0010 00000000 		.word	.LANCHOR20
 4354 0014 00000000 		.word	.LANCHOR15
 4355              		.cfi_endproc
 4356              	.LFE34:
 4358              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4359              		.align	1
 4360              		.global	xTaskCheckForTimeOut
 4361              		.syntax unified
 4362              		.thumb
 4363              		.thumb_func
 4365              	xTaskCheckForTimeOut:
 4366              	.LVL310:
 4367              	.LFB35:
3304:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xReturn;
 4368              		.loc 1 3304 1 is_stmt 1 view -0
 4369              		.cfi_startproc
 4370              		@ args = 0, pretend = 0, frame = 0
 4371              		@ frame_needed = 0, uses_anonymous_args = 0
3305:bsp/middlewares/freertos/source/tasks.c **** 
 4372              		.loc 1 3305 5 view .LVU1207
3307:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTicksToWait );
 4373              		.loc 1 3307 5 view .LVU1208
 4374 0000 C8B1     		cbz	r0, .L343
3304:bsp/middlewares/freertos/source/tasks.c ****     BaseType_t xReturn;
 4375              		.loc 1 3304 1 is_stmt 0 discriminator 2 view .LVU1209
 4376 0002 70B5     		push	{r4, r5, r6, lr}
 4377              	.LCFI39:
 4378              		.cfi_def_cfa_offset 16
 4379              		.cfi_offset 4, -16
 4380              		.cfi_offset 5, -12
 4381              		.cfi_offset 6, -8
 4382              		.cfi_offset 14, -4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 195


 4383 0004 0C46     		mov	r4, r1
 4384 0006 0546     		mov	r5, r0
3307:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTicksToWait );
 4385              		.loc 1 3307 30 is_stmt 1 discriminator 2 view .LVU1210
3308:bsp/middlewares/freertos/source/tasks.c **** 
 4386              		.loc 1 3308 5 discriminator 2 view .LVU1211
 4387 0008 F1B1     		cbz	r1, .L344
3308:bsp/middlewares/freertos/source/tasks.c **** 
 4388              		.loc 1 3308 34 discriminator 2 view .LVU1212
3310:bsp/middlewares/freertos/source/tasks.c ****     {
 4389              		.loc 1 3310 5 discriminator 2 view .LVU1213
 4390 000a FFF7FEFF 		bl	vPortEnterCritical
 4391              	.LVL311:
 4392              	.LBB193:
3313:bsp/middlewares/freertos/source/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4393              		.loc 1 3313 9 discriminator 2 view .LVU1214
3313:bsp/middlewares/freertos/source/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4394              		.loc 1 3313 26 is_stmt 0 discriminator 2 view .LVU1215
 4395 000e 1C4B     		ldr	r3, .L346
 4396 0010 1968     		ldr	r1, [r3]
 4397              	.LVL312:
3314:bsp/middlewares/freertos/source/tasks.c **** 
 4398              		.loc 1 3314 9 is_stmt 1 discriminator 2 view .LVU1216
3314:bsp/middlewares/freertos/source/tasks.c **** 
 4399              		.loc 1 3314 68 is_stmt 0 discriminator 2 view .LVU1217
 4400 0012 6B68     		ldr	r3, [r5, #4]
3314:bsp/middlewares/freertos/source/tasks.c **** 
 4401              		.loc 1 3314 26 discriminator 2 view .LVU1218
 4402 0014 C81A     		subs	r0, r1, r3
 4403              	.LVL313:
3328:bsp/middlewares/freertos/source/tasks.c ****             {
 4404              		.loc 1 3328 13 is_stmt 1 discriminator 2 view .LVU1219
3328:bsp/middlewares/freertos/source/tasks.c ****             {
 4405              		.loc 1 3328 17 is_stmt 0 discriminator 2 view .LVU1220
 4406 0016 2268     		ldr	r2, [r4]
3328:bsp/middlewares/freertos/source/tasks.c ****             {
 4407              		.loc 1 3328 15 discriminator 2 view .LVU1221
 4408 0018 B2F1FF3F 		cmp	r2, #-1
 4409 001c 2BD0     		beq	.L340
3338:bsp/middlewares/freertos/source/tasks.c ****         {
 4410              		.loc 1 3338 9 is_stmt 1 view .LVU1222
3338:bsp/middlewares/freertos/source/tasks.c ****         {
 4411              		.loc 1 3338 31 is_stmt 0 view .LVU1223
 4412 001e 194E     		ldr	r6, .L346+4
 4413 0020 3668     		ldr	r6, [r6]
3338:bsp/middlewares/freertos/source/tasks.c ****         {
 4414              		.loc 1 3338 11 view .LVU1224
 4415 0022 D5F800C0 		ldr	ip, [r5]
 4416 0026 B445     		cmp	ip, r6
 4417 0028 17D0     		beq	.L338
3338:bsp/middlewares/freertos/source/tasks.c ****         {
 4418              		.loc 1 3338 62 discriminator 1 view .LVU1225
 4419 002a 8B42     		cmp	r3, r1
 4420 002c 15D8     		bhi	.L338
3345:bsp/middlewares/freertos/source/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 4421              		.loc 1 3345 13 is_stmt 1 view .LVU1226
 4422              	.LVL314:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 196


3346:bsp/middlewares/freertos/source/tasks.c ****         }
 4423              		.loc 1 3346 13 view .LVU1227
3346:bsp/middlewares/freertos/source/tasks.c ****         }
 4424              		.loc 1 3346 28 is_stmt 0 view .LVU1228
 4425 002e 0023     		movs	r3, #0
 4426 0030 2360     		str	r3, [r4]
3345:bsp/middlewares/freertos/source/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 4427              		.loc 1 3345 21 view .LVU1229
 4428 0032 0124     		movs	r4, #1
 4429              	.LVL315:
3346:bsp/middlewares/freertos/source/tasks.c ****         }
 4430              		.loc 1 3346 28 view .LVU1230
 4431 0034 20E0     		b	.L337
 4432              	.LVL316:
 4433              	.L343:
 4434              	.LCFI40:
 4435              		.cfi_def_cfa_offset 0
 4436              		.cfi_restore 4
 4437              		.cfi_restore 5
 4438              		.cfi_restore 6
 4439              		.cfi_restore 14
3346:bsp/middlewares/freertos/source/tasks.c ****         }
 4440              		.loc 1 3346 28 view .LVU1231
 4441              	.LBE193:
3307:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTicksToWait );
 4442              		.loc 1 3307 5 is_stmt 1 view .LVU1232
 4443              	.LBB194:
 4444              	.LBI194:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4445              		.loc 2 193 34 view .LVU1233
 4446              	.LBB195:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4447              		.loc 2 195 9 view .LVU1234
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4448              		.loc 2 197 9 view .LVU1235
 4449              		.syntax unified
 4450              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4451 0036 4FF01003 			mov r3, #16												
 4452 003a 83F31188 		msr basepri, r3											
 4453 003e BFF36F8F 		isb														
 4454 0042 BFF34F8F 		dsb														
 4455              	
 4456              	@ 0 "" 2
 4457              	.LVL317:
 4458              		.thumb
 4459              		.syntax unified
 4460              	.L334:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4461              		.loc 2 197 9 is_stmt 0 view .LVU1236
 4462              	.LBE195:
 4463              	.LBE194:
3307:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTicksToWait );
 4464              		.loc 1 3307 5 is_stmt 1 discriminator 1 view .LVU1237
3307:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTicksToWait );
 4465              		.loc 1 3307 5 discriminator 1 view .LVU1238
3307:bsp/middlewares/freertos/source/tasks.c ****     configASSERT( pxTicksToWait );
 4466              		.loc 1 3307 5 discriminator 1 view .LVU1239
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 197


 4467 0046 FEE7     		b	.L334
 4468              	.L344:
 4469              	.LCFI41:
 4470              		.cfi_def_cfa_offset 16
 4471              		.cfi_offset 4, -16
 4472              		.cfi_offset 5, -12
 4473              		.cfi_offset 6, -8
 4474              		.cfi_offset 14, -4
3308:bsp/middlewares/freertos/source/tasks.c **** 
 4475              		.loc 1 3308 5 view .LVU1240
 4476              	.LBB196:
 4477              	.LBI196:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4478              		.loc 2 193 34 view .LVU1241
 4479              	.LBB197:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4480              		.loc 2 195 9 view .LVU1242
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4481              		.loc 2 197 9 view .LVU1243
 4482              		.syntax unified
 4483              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4484 0048 4FF01003 			mov r3, #16												
 4485 004c 83F31188 		msr basepri, r3											
 4486 0050 BFF36F8F 		isb														
 4487 0054 BFF34F8F 		dsb														
 4488              	
 4489              	@ 0 "" 2
 4490              	.LVL318:
 4491              		.thumb
 4492              		.syntax unified
 4493              	.L336:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4494              		.loc 2 197 9 is_stmt 0 view .LVU1244
 4495              	.LBE197:
 4496              	.LBE196:
3308:bsp/middlewares/freertos/source/tasks.c **** 
 4497              		.loc 1 3308 5 is_stmt 1 discriminator 2 view .LVU1245
3308:bsp/middlewares/freertos/source/tasks.c **** 
 4498              		.loc 1 3308 5 discriminator 2 view .LVU1246
3308:bsp/middlewares/freertos/source/tasks.c **** 
 4499              		.loc 1 3308 5 discriminator 2 view .LVU1247
 4500 0058 FEE7     		b	.L336
 4501              	.LVL319:
 4502              	.L338:
 4503              	.LBB198:
3348:bsp/middlewares/freertos/source/tasks.c ****         {
 4504              		.loc 1 3348 14 view .LVU1248
3348:bsp/middlewares/freertos/source/tasks.c ****         {
 4505              		.loc 1 3348 16 is_stmt 0 view .LVU1249
 4506 005a 8242     		cmp	r2, r0
 4507 005c 03D8     		bhi	.L345
3357:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdTRUE;
 4508              		.loc 1 3357 13 is_stmt 1 view .LVU1250
3357:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdTRUE;
 4509              		.loc 1 3357 28 is_stmt 0 view .LVU1251
 4510 005e 0023     		movs	r3, #0
 4511 0060 2360     		str	r3, [r4]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 198


3358:bsp/middlewares/freertos/source/tasks.c ****         }
 4512              		.loc 1 3358 13 is_stmt 1 view .LVU1252
 4513              	.LVL320:
3358:bsp/middlewares/freertos/source/tasks.c ****         }
 4514              		.loc 1 3358 21 is_stmt 0 view .LVU1253
 4515 0062 0124     		movs	r4, #1
 4516              	.LVL321:
3358:bsp/middlewares/freertos/source/tasks.c ****         }
 4517              		.loc 1 3358 21 view .LVU1254
 4518 0064 08E0     		b	.L337
 4519              	.LVL322:
 4520              	.L345:
3351:bsp/middlewares/freertos/source/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 4521              		.loc 1 3351 13 is_stmt 1 view .LVU1255
3351:bsp/middlewares/freertos/source/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 4522              		.loc 1 3351 28 is_stmt 0 view .LVU1256
 4523 0066 5B1A     		subs	r3, r3, r1
 4524 0068 1344     		add	r3, r3, r2
 4525 006a 2360     		str	r3, [r4]
3352:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdFALSE;
 4526              		.loc 1 3352 13 is_stmt 1 view .LVU1257
 4527 006c 2846     		mov	r0, r5
 4528              	.LVL323:
3352:bsp/middlewares/freertos/source/tasks.c ****             xReturn = pdFALSE;
 4529              		.loc 1 3352 13 is_stmt 0 view .LVU1258
 4530 006e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4531              	.LVL324:
3353:bsp/middlewares/freertos/source/tasks.c ****         }
 4532              		.loc 1 3353 13 is_stmt 1 view .LVU1259
3353:bsp/middlewares/freertos/source/tasks.c ****         }
 4533              		.loc 1 3353 21 is_stmt 0 view .LVU1260
 4534 0072 0024     		movs	r4, #0
 4535              	.LVL325:
3353:bsp/middlewares/freertos/source/tasks.c ****         }
 4536              		.loc 1 3353 21 view .LVU1261
 4537 0074 00E0     		b	.L337
 4538              	.LVL326:
 4539              	.L340:
3333:bsp/middlewares/freertos/source/tasks.c ****             }
 4540              		.loc 1 3333 25 view .LVU1262
 4541 0076 0024     		movs	r4, #0
 4542              	.LVL327:
 4543              	.L337:
3333:bsp/middlewares/freertos/source/tasks.c ****             }
 4544              		.loc 1 3333 25 view .LVU1263
 4545              	.LBE198:
3361:bsp/middlewares/freertos/source/tasks.c **** 
 4546              		.loc 1 3361 5 is_stmt 1 view .LVU1264
 4547 0078 FFF7FEFF 		bl	vPortExitCritical
 4548              	.LVL328:
3363:bsp/middlewares/freertos/source/tasks.c **** }
 4549              		.loc 1 3363 5 view .LVU1265
3364:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 4550              		.loc 1 3364 1 is_stmt 0 view .LVU1266
 4551 007c 2046     		mov	r0, r4
 4552 007e 70BD     		pop	{r4, r5, r6, pc}
 4553              	.LVL329:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 199


 4554              	.L347:
3364:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 4555              		.loc 1 3364 1 view .LVU1267
 4556              		.align	2
 4557              	.L346:
 4558 0080 00000000 		.word	.LANCHOR15
 4559 0084 00000000 		.word	.LANCHOR20
 4560              		.cfi_endproc
 4561              	.LFE35:
 4563              		.section	.text.vTaskMissedYield,"ax",%progbits
 4564              		.align	1
 4565              		.global	vTaskMissedYield
 4566              		.syntax unified
 4567              		.thumb
 4568              		.thumb_func
 4570              	vTaskMissedYield:
 4571              	.LFB36:
3368:bsp/middlewares/freertos/source/tasks.c ****     xYieldPending = pdTRUE;
 4572              		.loc 1 3368 1 is_stmt 1 view -0
 4573              		.cfi_startproc
 4574              		@ args = 0, pretend = 0, frame = 0
 4575              		@ frame_needed = 0, uses_anonymous_args = 0
 4576              		@ link register save eliminated.
3369:bsp/middlewares/freertos/source/tasks.c **** }
 4577              		.loc 1 3369 5 view .LVU1269
3369:bsp/middlewares/freertos/source/tasks.c **** }
 4578              		.loc 1 3369 19 is_stmt 0 view .LVU1270
 4579 0000 014B     		ldr	r3, .L349
 4580 0002 0122     		movs	r2, #1
 4581 0004 1A60     		str	r2, [r3]
3370:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 4582              		.loc 1 3370 1 view .LVU1271
 4583 0006 7047     		bx	lr
 4584              	.L350:
 4585              		.align	2
 4586              	.L349:
 4587 0008 00000000 		.word	.LANCHOR17
 4588              		.cfi_endproc
 4589              	.LFE36:
 4591              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4592              		.align	1
 4593              		.global	xTaskGetCurrentTaskHandle
 4594              		.syntax unified
 4595              		.thumb
 4596              		.thumb_func
 4598              	xTaskGetCurrentTaskHandle:
 4599              	.LFB42:
4012:bsp/middlewares/freertos/source/tasks.c ****         TaskHandle_t xReturn;
 4600              		.loc 1 4012 5 is_stmt 1 view -0
 4601              		.cfi_startproc
 4602              		@ args = 0, pretend = 0, frame = 0
 4603              		@ frame_needed = 0, uses_anonymous_args = 0
 4604              		@ link register save eliminated.
4013:bsp/middlewares/freertos/source/tasks.c **** 
 4605              		.loc 1 4013 9 view .LVU1273
4018:bsp/middlewares/freertos/source/tasks.c **** 
 4606              		.loc 1 4018 9 view .LVU1274
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 200


4018:bsp/middlewares/freertos/source/tasks.c **** 
 4607              		.loc 1 4018 17 is_stmt 0 view .LVU1275
 4608 0000 014B     		ldr	r3, .L352
 4609 0002 1868     		ldr	r0, [r3]
 4610              	.LVL330:
4020:bsp/middlewares/freertos/source/tasks.c ****     }
 4611              		.loc 1 4020 9 is_stmt 1 view .LVU1276
4021:bsp/middlewares/freertos/source/tasks.c **** 
 4612              		.loc 1 4021 5 is_stmt 0 view .LVU1277
 4613 0004 7047     		bx	lr
 4614              	.L353:
 4615 0006 00BF     		.align	2
 4616              	.L352:
 4617 0008 00000000 		.word	.LANCHOR10
 4618              		.cfi_endproc
 4619              	.LFE42:
 4621              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4622              		.align	1
 4623              		.global	uxTaskResetEventItemValue
 4624              		.syntax unified
 4625              		.thumb
 4626              		.thumb_func
 4628              	uxTaskResetEventItemValue:
 4629              	.LFB43:
4652:bsp/middlewares/freertos/source/tasks.c ****     TickType_t uxReturn;
 4630              		.loc 1 4652 1 is_stmt 1 view -0
 4631              		.cfi_startproc
 4632              		@ args = 0, pretend = 0, frame = 0
 4633              		@ frame_needed = 0, uses_anonymous_args = 0
 4634              		@ link register save eliminated.
4653:bsp/middlewares/freertos/source/tasks.c **** 
 4635              		.loc 1 4653 5 view .LVU1279
4655:bsp/middlewares/freertos/source/tasks.c **** 
 4636              		.loc 1 4655 5 view .LVU1280
4655:bsp/middlewares/freertos/source/tasks.c **** 
 4637              		.loc 1 4655 16 is_stmt 0 view .LVU1281
 4638 0000 044A     		ldr	r2, .L355
 4639 0002 1368     		ldr	r3, [r2]
4655:bsp/middlewares/freertos/source/tasks.c **** 
 4640              		.loc 1 4655 14 view .LVU1282
 4641 0004 9869     		ldr	r0, [r3, #24]
 4642              	.LVL331:
4659:bsp/middlewares/freertos/source/tasks.c **** 
 4643              		.loc 1 4659 5 is_stmt 1 view .LVU1283
 4644 0006 1368     		ldr	r3, [r2]
 4645 0008 DB6A     		ldr	r3, [r3, #44]
 4646 000a 1268     		ldr	r2, [r2]
 4647 000c C3F12003 		rsb	r3, r3, #32
 4648 0010 9361     		str	r3, [r2, #24]
4661:bsp/middlewares/freertos/source/tasks.c **** }
 4649              		.loc 1 4661 5 view .LVU1284
4662:bsp/middlewares/freertos/source/tasks.c **** /*-----------------------------------------------------------*/
 4650              		.loc 1 4662 1 is_stmt 0 view .LVU1285
 4651 0012 7047     		bx	lr
 4652              	.L356:
 4653              		.align	2
 4654              	.L355:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 201


 4655 0014 00000000 		.word	.LANCHOR10
 4656              		.cfi_endproc
 4657              	.LFE43:
 4659              		.section	.text.ulTaskGenericNotifyTake,"ax",%progbits
 4660              		.align	1
 4661              		.global	ulTaskGenericNotifyTake
 4662              		.syntax unified
 4663              		.thumb
 4664              		.thumb_func
 4666              	ulTaskGenericNotifyTake:
 4667              	.LVL332:
 4668              	.LFB44:
4687:bsp/middlewares/freertos/source/tasks.c ****         uint32_t ulReturn;
 4669              		.loc 1 4687 5 is_stmt 1 view -0
 4670              		.cfi_startproc
 4671              		@ args = 0, pretend = 0, frame = 0
 4672              		@ frame_needed = 0, uses_anonymous_args = 0
4688:bsp/middlewares/freertos/source/tasks.c **** 
 4673              		.loc 1 4688 9 view .LVU1287
4690:bsp/middlewares/freertos/source/tasks.c **** 
 4674              		.loc 1 4690 9 view .LVU1288
 4675 0000 40B1     		cbz	r0, .L358
4690:bsp/middlewares/freertos/source/tasks.c **** 
 4676              		.loc 1 4690 9 view .LVU1289
 4677              	.LBB199:
 4678              	.LBI199:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4679              		.loc 2 193 34 view .LVU1290
 4680              	.LBB200:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4681              		.loc 2 195 9 view .LVU1291
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4682              		.loc 2 197 9 view .LVU1292
 4683              		.syntax unified
 4684              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4685 0002 4FF01003 			mov r3, #16												
 4686 0006 83F31188 		msr basepri, r3											
 4687 000a BFF36F8F 		isb														
 4688 000e BFF34F8F 		dsb														
 4689              	
 4690              	@ 0 "" 2
 4691              	.LVL333:
 4692              		.thumb
 4693              		.syntax unified
 4694              	.L359:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4695              		.loc 2 197 9 is_stmt 0 view .LVU1293
 4696              	.LBE200:
 4697              	.LBE199:
4690:bsp/middlewares/freertos/source/tasks.c **** 
 4698              		.loc 1 4690 9 is_stmt 1 discriminator 1 view .LVU1294
4690:bsp/middlewares/freertos/source/tasks.c **** 
 4699              		.loc 1 4690 9 discriminator 1 view .LVU1295
4690:bsp/middlewares/freertos/source/tasks.c **** 
 4700              		.loc 1 4690 9 discriminator 1 view .LVU1296
 4701 0012 FEE7     		b	.L359
 4702              	.L358:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 202


4687:bsp/middlewares/freertos/source/tasks.c ****         uint32_t ulReturn;
 4703              		.loc 1 4687 5 is_stmt 0 discriminator 2 view .LVU1297
 4704 0014 70B5     		push	{r4, r5, r6, lr}
 4705              	.LCFI42:
 4706              		.cfi_def_cfa_offset 16
 4707              		.cfi_offset 4, -16
 4708              		.cfi_offset 5, -12
 4709              		.cfi_offset 6, -8
 4710              		.cfi_offset 14, -4
 4711 0016 0E46     		mov	r6, r1
 4712 0018 1446     		mov	r4, r2
 4713 001a 0546     		mov	r5, r0
4690:bsp/middlewares/freertos/source/tasks.c **** 
 4714              		.loc 1 4690 78 is_stmt 1 discriminator 2 view .LVU1298
4692:bsp/middlewares/freertos/source/tasks.c ****         {
 4715              		.loc 1 4692 9 discriminator 2 view .LVU1299
 4716 001c FFF7FEFF 		bl	vPortEnterCritical
 4717              	.LVL334:
4695:bsp/middlewares/freertos/source/tasks.c ****             {
 4718              		.loc 1 4695 13 discriminator 2 view .LVU1300
4695:bsp/middlewares/freertos/source/tasks.c ****             {
 4719              		.loc 1 4695 29 is_stmt 0 discriminator 2 view .LVU1301
 4720 0020 214B     		ldr	r3, .L366
 4721 0022 1B68     		ldr	r3, [r3]
4695:bsp/middlewares/freertos/source/tasks.c ****             {
 4722              		.loc 1 4695 46 discriminator 2 view .LVU1302
 4723 0024 05F11002 		add	r2, r5, #16
 4724 0028 03EB8203 		add	r3, r3, r2, lsl #2
 4725 002c 5B68     		ldr	r3, [r3, #4]
4695:bsp/middlewares/freertos/source/tasks.c ****             {
 4726              		.loc 1 4695 15 discriminator 2 view .LVU1303
 4727 002e 33B9     		cbnz	r3, .L360
4698:bsp/middlewares/freertos/source/tasks.c **** 
 4728              		.loc 1 4698 17 is_stmt 1 view .LVU1304
4698:bsp/middlewares/freertos/source/tasks.c **** 
 4729              		.loc 1 4698 29 is_stmt 0 view .LVU1305
 4730 0030 1D4B     		ldr	r3, .L366
 4731 0032 1B68     		ldr	r3, [r3]
4698:bsp/middlewares/freertos/source/tasks.c **** 
 4732              		.loc 1 4698 62 view .LVU1306
 4733 0034 2B44     		add	r3, r3, r5
 4734 0036 0122     		movs	r2, #1
 4735 0038 83F84820 		strb	r2, [r3, #72]
4700:bsp/middlewares/freertos/source/tasks.c ****                 {
 4736              		.loc 1 4700 17 is_stmt 1 view .LVU1307
4700:bsp/middlewares/freertos/source/tasks.c ****                 {
 4737              		.loc 1 4700 19 is_stmt 0 view .LVU1308
 4738 003c E4B9     		cbnz	r4, .L365
 4739              	.L360:
4718:bsp/middlewares/freertos/source/tasks.c ****             }
 4740              		.loc 1 4718 41 is_stmt 1 view .LVU1309
4721:bsp/middlewares/freertos/source/tasks.c **** 
 4741              		.loc 1 4721 9 view .LVU1310
 4742 003e FFF7FEFF 		bl	vPortExitCritical
 4743              	.LVL335:
4723:bsp/middlewares/freertos/source/tasks.c ****         {
 4744              		.loc 1 4723 9 view .LVU1311
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 203


 4745 0042 FFF7FEFF 		bl	vPortEnterCritical
 4746              	.LVL336:
4725:bsp/middlewares/freertos/source/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
 4747              		.loc 1 4725 51 view .LVU1312
4726:bsp/middlewares/freertos/source/tasks.c **** 
 4748              		.loc 1 4726 13 view .LVU1313
4726:bsp/middlewares/freertos/source/tasks.c **** 
 4749              		.loc 1 4726 36 is_stmt 0 view .LVU1314
 4750 0046 184B     		ldr	r3, .L366
 4751 0048 1B68     		ldr	r3, [r3]
4726:bsp/middlewares/freertos/source/tasks.c **** 
 4752              		.loc 1 4726 22 view .LVU1315
 4753 004a 05F11002 		add	r2, r5, #16
 4754 004e 03EB8203 		add	r3, r3, r2, lsl #2
 4755 0052 5C68     		ldr	r4, [r3, #4]
 4756              	.LVL337:
4728:bsp/middlewares/freertos/source/tasks.c ****             {
 4757              		.loc 1 4728 13 is_stmt 1 view .LVU1316
4728:bsp/middlewares/freertos/source/tasks.c ****             {
 4758              		.loc 1 4728 15 is_stmt 0 view .LVU1317
 4759 0054 34B1     		cbz	r4, .L361
4730:bsp/middlewares/freertos/source/tasks.c ****                 {
 4760              		.loc 1 4730 17 is_stmt 1 view .LVU1318
4730:bsp/middlewares/freertos/source/tasks.c ****                 {
 4761              		.loc 1 4730 19 is_stmt 0 view .LVU1319
 4762 0056 F6B1     		cbz	r6, .L362
4732:bsp/middlewares/freertos/source/tasks.c ****                 }
 4763              		.loc 1 4732 21 is_stmt 1 view .LVU1320
4732:bsp/middlewares/freertos/source/tasks.c ****                 }
 4764              		.loc 1 4732 33 is_stmt 0 view .LVU1321
 4765 0058 134B     		ldr	r3, .L366
 4766 005a 1B68     		ldr	r3, [r3]
4732:bsp/middlewares/freertos/source/tasks.c ****                 }
 4767              		.loc 1 4732 68 view .LVU1322
 4768 005c 03EB8203 		add	r3, r3, r2, lsl #2
 4769 0060 0022     		movs	r2, #0
 4770 0062 5A60     		str	r2, [r3, #4]
 4771              	.L361:
4741:bsp/middlewares/freertos/source/tasks.c ****             }
 4772              		.loc 1 4741 41 is_stmt 1 view .LVU1323
4744:bsp/middlewares/freertos/source/tasks.c ****         }
 4773              		.loc 1 4744 13 view .LVU1324
4744:bsp/middlewares/freertos/source/tasks.c ****         }
 4774              		.loc 1 4744 25 is_stmt 0 view .LVU1325
 4775 0064 104B     		ldr	r3, .L366
 4776 0066 1B68     		ldr	r3, [r3]
4744:bsp/middlewares/freertos/source/tasks.c ****         }
 4777              		.loc 1 4744 58 view .LVU1326
 4778 0068 1D44     		add	r5, r5, r3
 4779              	.LVL338:
4744:bsp/middlewares/freertos/source/tasks.c ****         }
 4780              		.loc 1 4744 58 view .LVU1327
 4781 006a 0023     		movs	r3, #0
 4782 006c 85F84830 		strb	r3, [r5, #72]
4746:bsp/middlewares/freertos/source/tasks.c **** 
 4783              		.loc 1 4746 9 is_stmt 1 view .LVU1328
 4784 0070 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 204


 4785              	.LVL339:
4748:bsp/middlewares/freertos/source/tasks.c ****     }
 4786              		.loc 1 4748 9 view .LVU1329
4749:bsp/middlewares/freertos/source/tasks.c **** 
 4787              		.loc 1 4749 5 is_stmt 0 view .LVU1330
 4788 0074 2046     		mov	r0, r4
 4789 0076 70BD     		pop	{r4, r5, r6, pc}
 4790              	.LVL340:
 4791              	.L365:
4702:bsp/middlewares/freertos/source/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
 4792              		.loc 1 4702 21 is_stmt 1 view .LVU1331
 4793 0078 1146     		mov	r1, r2
 4794 007a 2046     		mov	r0, r4
 4795 007c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4796              	.LVL341:
4703:bsp/middlewares/freertos/source/tasks.c **** 
 4797              		.loc 1 4703 65 view .LVU1332
4709:bsp/middlewares/freertos/source/tasks.c ****                 }
 4798              		.loc 1 4709 21 view .LVU1333
 4799 0080 4FF0E023 		mov	r3, #-536813568
 4800 0084 4FF08052 		mov	r2, #268435456
 4801 0088 C3F8042D 		str	r2, [r3, #3332]
4709:bsp/middlewares/freertos/source/tasks.c ****                 }
 4802              		.loc 1 4709 21 view .LVU1334
 4803              		.syntax unified
 4804              	@ 4709 "bsp/middlewares/freertos/source/tasks.c" 1
 4805 008c BFF34F8F 		dsb
 4806              	@ 0 "" 2
4709:bsp/middlewares/freertos/source/tasks.c ****                 }
 4807              		.loc 1 4709 21 view .LVU1335
 4808              	@ 4709 "bsp/middlewares/freertos/source/tasks.c" 1
 4809 0090 BFF36F8F 		isb
 4810              	@ 0 "" 2
4709:bsp/middlewares/freertos/source/tasks.c ****                 }
 4811              		.loc 1 4709 43 view .LVU1336
 4812              		.thumb
 4813              		.syntax unified
 4814 0094 D3E7     		b	.L360
 4815              	.LVL342:
 4816              	.L362:
4736:bsp/middlewares/freertos/source/tasks.c ****                 }
 4817              		.loc 1 4736 21 view .LVU1337
4736:bsp/middlewares/freertos/source/tasks.c ****                 }
 4818              		.loc 1 4736 33 is_stmt 0 view .LVU1338
 4819 0096 044B     		ldr	r3, .L366
 4820 0098 1B68     		ldr	r3, [r3]
4736:bsp/middlewares/freertos/source/tasks.c ****                 }
 4821              		.loc 1 4736 79 view .LVU1339
 4822 009a 621E     		subs	r2, r4, #1
4736:bsp/middlewares/freertos/source/tasks.c ****                 }
 4823              		.loc 1 4736 68 view .LVU1340
 4824 009c 05F11001 		add	r1, r5, #16
 4825 00a0 03EB8103 		add	r3, r3, r1, lsl #2
 4826 00a4 5A60     		str	r2, [r3, #4]
 4827 00a6 DDE7     		b	.L361
 4828              	.L367:
 4829              		.align	2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 205


 4830              	.L366:
 4831 00a8 00000000 		.word	.LANCHOR10
 4832              		.cfi_endproc
 4833              	.LFE44:
 4835              		.section	.text.xTaskGenericNotifyWait,"ax",%progbits
 4836              		.align	1
 4837              		.global	xTaskGenericNotifyWait
 4838              		.syntax unified
 4839              		.thumb
 4840              		.thumb_func
 4842              	xTaskGenericNotifyWait:
 4843              	.LVL343:
 4844              	.LFB45:
4761:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
 4845              		.loc 1 4761 5 is_stmt 1 view -0
 4846              		.cfi_startproc
 4847              		@ args = 4, pretend = 0, frame = 0
 4848              		@ frame_needed = 0, uses_anonymous_args = 0
4761:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
 4849              		.loc 1 4761 5 is_stmt 0 view .LVU1342
 4850 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4851              	.LCFI43:
 4852              		.cfi_def_cfa_offset 24
 4853              		.cfi_offset 3, -24
 4854              		.cfi_offset 4, -20
 4855              		.cfi_offset 5, -16
 4856              		.cfi_offset 6, -12
 4857              		.cfi_offset 7, -8
 4858              		.cfi_offset 14, -4
4762:bsp/middlewares/freertos/source/tasks.c **** 
 4859              		.loc 1 4762 9 is_stmt 1 view .LVU1343
4764:bsp/middlewares/freertos/source/tasks.c **** 
 4860              		.loc 1 4764 9 view .LVU1344
 4861 0002 40B1     		cbz	r0, .L369
4764:bsp/middlewares/freertos/source/tasks.c **** 
 4862              		.loc 1 4764 9 view .LVU1345
 4863              	.LBB201:
 4864              	.LBI201:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4865              		.loc 2 193 34 view .LVU1346
 4866              	.LBB202:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4867              		.loc 2 195 9 view .LVU1347
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4868              		.loc 2 197 9 view .LVU1348
 4869              		.syntax unified
 4870              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4871 0004 4FF01003 			mov r3, #16												
 4872 0008 83F31188 		msr basepri, r3											
 4873 000c BFF36F8F 		isb														
 4874 0010 BFF34F8F 		dsb														
 4875              	
 4876              	@ 0 "" 2
 4877              	.LVL344:
 4878              		.thumb
 4879              		.syntax unified
 4880              	.L370:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 206


 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4881              		.loc 2 197 9 is_stmt 0 view .LVU1349
 4882              	.LBE202:
 4883              	.LBE201:
4764:bsp/middlewares/freertos/source/tasks.c **** 
 4884              		.loc 1 4764 9 is_stmt 1 discriminator 1 view .LVU1350
4764:bsp/middlewares/freertos/source/tasks.c **** 
 4885              		.loc 1 4764 9 discriminator 1 view .LVU1351
4764:bsp/middlewares/freertos/source/tasks.c **** 
 4886              		.loc 1 4764 9 discriminator 1 view .LVU1352
 4887 0014 FEE7     		b	.L370
 4888              	.LVL345:
 4889              	.L369:
4764:bsp/middlewares/freertos/source/tasks.c **** 
 4890              		.loc 1 4764 9 is_stmt 0 discriminator 1 view .LVU1353
 4891 0016 0D46     		mov	r5, r1
 4892 0018 1646     		mov	r6, r2
 4893 001a 1C46     		mov	r4, r3
 4894 001c 0746     		mov	r7, r0
4764:bsp/middlewares/freertos/source/tasks.c **** 
 4895              		.loc 1 4764 78 is_stmt 1 discriminator 2 view .LVU1354
4766:bsp/middlewares/freertos/source/tasks.c ****         {
 4896              		.loc 1 4766 9 discriminator 2 view .LVU1355
 4897 001e FFF7FEFF 		bl	vPortEnterCritical
 4898              	.LVL346:
4769:bsp/middlewares/freertos/source/tasks.c ****             {
 4899              		.loc 1 4769 13 discriminator 2 view .LVU1356
4769:bsp/middlewares/freertos/source/tasks.c ****             {
 4900              		.loc 1 4769 29 is_stmt 0 discriminator 2 view .LVU1357
 4901 0022 2A4B     		ldr	r3, .L378
 4902 0024 1B68     		ldr	r3, [r3]
4769:bsp/middlewares/freertos/source/tasks.c ****             {
 4903              		.loc 1 4769 44 discriminator 2 view .LVU1358
 4904 0026 3B44     		add	r3, r3, r7
 4905 0028 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 4906 002c DBB2     		uxtb	r3, r3
4769:bsp/middlewares/freertos/source/tasks.c ****             {
 4907              		.loc 1 4769 15 discriminator 2 view .LVU1359
 4908 002e 022B     		cmp	r3, #2
 4909 0030 10D0     		beq	.L371
4774:bsp/middlewares/freertos/source/tasks.c **** 
 4910              		.loc 1 4774 17 is_stmt 1 view .LVU1360
4774:bsp/middlewares/freertos/source/tasks.c **** 
 4911              		.loc 1 4774 64 is_stmt 0 view .LVU1361
 4912 0032 264A     		ldr	r2, .L378
 4913 0034 1368     		ldr	r3, [r2]
 4914 0036 07F11001 		add	r1, r7, #16
 4915 003a 03EB8103 		add	r3, r3, r1, lsl #2
 4916 003e 5968     		ldr	r1, [r3, #4]
 4917 0040 21EA0501 		bic	r1, r1, r5
 4918 0044 5960     		str	r1, [r3, #4]
4777:bsp/middlewares/freertos/source/tasks.c **** 
 4919              		.loc 1 4777 17 is_stmt 1 view .LVU1362
4777:bsp/middlewares/freertos/source/tasks.c **** 
 4920              		.loc 1 4777 29 is_stmt 0 view .LVU1363
 4921 0046 1368     		ldr	r3, [r2]
4777:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 207


 4922              		.loc 1 4777 62 view .LVU1364
 4923 0048 3B44     		add	r3, r3, r7
 4924 004a 0122     		movs	r2, #1
 4925 004c 83F84820 		strb	r2, [r3, #72]
4779:bsp/middlewares/freertos/source/tasks.c ****                 {
 4926              		.loc 1 4779 17 is_stmt 1 view .LVU1365
4779:bsp/middlewares/freertos/source/tasks.c ****                 {
 4927              		.loc 1 4779 19 is_stmt 0 view .LVU1366
 4928 0050 069B     		ldr	r3, [sp, #24]
 4929 0052 FBB9     		cbnz	r3, .L376
 4930              	.LVL347:
 4931              	.L371:
4797:bsp/middlewares/freertos/source/tasks.c ****             }
 4932              		.loc 1 4797 41 is_stmt 1 view .LVU1367
4800:bsp/middlewares/freertos/source/tasks.c **** 
 4933              		.loc 1 4800 9 view .LVU1368
 4934 0054 FFF7FEFF 		bl	vPortExitCritical
 4935              	.LVL348:
4802:bsp/middlewares/freertos/source/tasks.c ****         {
 4936              		.loc 1 4802 9 view .LVU1369
 4937 0058 FFF7FEFF 		bl	vPortEnterCritical
 4938              	.LVL349:
4804:bsp/middlewares/freertos/source/tasks.c **** 
 4939              		.loc 1 4804 51 view .LVU1370
4806:bsp/middlewares/freertos/source/tasks.c ****             {
 4940              		.loc 1 4806 13 view .LVU1371
4806:bsp/middlewares/freertos/source/tasks.c ****             {
 4941              		.loc 1 4806 15 is_stmt 0 view .LVU1372
 4942 005c 3CB1     		cbz	r4, .L372
4810:bsp/middlewares/freertos/source/tasks.c ****             }
 4943              		.loc 1 4810 17 is_stmt 1 view .LVU1373
4810:bsp/middlewares/freertos/source/tasks.c ****             }
 4944              		.loc 1 4810 53 is_stmt 0 view .LVU1374
 4945 005e 1B4B     		ldr	r3, .L378
 4946 0060 1B68     		ldr	r3, [r3]
4810:bsp/middlewares/freertos/source/tasks.c ****             }
 4947              		.loc 1 4810 70 view .LVU1375
 4948 0062 07F11002 		add	r2, r7, #16
 4949 0066 03EB8203 		add	r3, r3, r2, lsl #2
 4950 006a 5B68     		ldr	r3, [r3, #4]
4810:bsp/middlewares/freertos/source/tasks.c ****             }
 4951              		.loc 1 4810 39 view .LVU1376
 4952 006c 2360     		str	r3, [r4]
 4953              	.L372:
4817:bsp/middlewares/freertos/source/tasks.c ****             {
 4954              		.loc 1 4817 13 is_stmt 1 view .LVU1377
4817:bsp/middlewares/freertos/source/tasks.c ****             {
 4955              		.loc 1 4817 29 is_stmt 0 view .LVU1378
 4956 006e 174B     		ldr	r3, .L378
 4957 0070 1B68     		ldr	r3, [r3]
4817:bsp/middlewares/freertos/source/tasks.c ****             {
 4958              		.loc 1 4817 44 view .LVU1379
 4959 0072 3B44     		add	r3, r3, r7
 4960 0074 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 4961 0078 DBB2     		uxtb	r3, r3
4817:bsp/middlewares/freertos/source/tasks.c ****             {
 4962              		.loc 1 4817 15 view .LVU1380
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 208


 4963 007a 022B     		cmp	r3, #2
 4964 007c 19D0     		beq	.L377
4820:bsp/middlewares/freertos/source/tasks.c ****             }
 4965              		.loc 1 4820 25 view .LVU1381
 4966 007e 0024     		movs	r4, #0
 4967              	.LVL350:
 4968              	.L373:
4830:bsp/middlewares/freertos/source/tasks.c ****         }
 4969              		.loc 1 4830 13 is_stmt 1 view .LVU1382
4830:bsp/middlewares/freertos/source/tasks.c ****         }
 4970              		.loc 1 4830 25 is_stmt 0 view .LVU1383
 4971 0080 124B     		ldr	r3, .L378
 4972 0082 1B68     		ldr	r3, [r3]
4830:bsp/middlewares/freertos/source/tasks.c ****         }
 4973              		.loc 1 4830 58 view .LVU1384
 4974 0084 1F44     		add	r7, r7, r3
 4975              	.LVL351:
4830:bsp/middlewares/freertos/source/tasks.c ****         }
 4976              		.loc 1 4830 58 view .LVU1385
 4977 0086 0023     		movs	r3, #0
 4978 0088 87F84830 		strb	r3, [r7, #72]
4832:bsp/middlewares/freertos/source/tasks.c **** 
 4979              		.loc 1 4832 9 is_stmt 1 view .LVU1386
 4980 008c FFF7FEFF 		bl	vPortExitCritical
 4981              	.LVL352:
4834:bsp/middlewares/freertos/source/tasks.c ****     }
 4982              		.loc 1 4834 9 view .LVU1387
4835:bsp/middlewares/freertos/source/tasks.c **** 
 4983              		.loc 1 4835 5 is_stmt 0 view .LVU1388
 4984 0090 2046     		mov	r0, r4
 4985 0092 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4986              	.LVL353:
 4987              	.L376:
4781:bsp/middlewares/freertos/source/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
 4988              		.loc 1 4781 21 is_stmt 1 view .LVU1389
 4989 0094 1146     		mov	r1, r2
 4990 0096 1846     		mov	r0, r3
 4991 0098 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4992              	.LVL354:
4782:bsp/middlewares/freertos/source/tasks.c **** 
 4993              		.loc 1 4782 65 view .LVU1390
4788:bsp/middlewares/freertos/source/tasks.c ****                 }
 4994              		.loc 1 4788 21 view .LVU1391
 4995 009c 4FF0E023 		mov	r3, #-536813568
 4996 00a0 4FF08052 		mov	r2, #268435456
 4997 00a4 C3F8042D 		str	r2, [r3, #3332]
 4998              	.LVL355:
4788:bsp/middlewares/freertos/source/tasks.c ****                 }
 4999              		.loc 1 4788 21 view .LVU1392
 5000              		.syntax unified
 5001              	@ 4788 "bsp/middlewares/freertos/source/tasks.c" 1
 5002 00a8 BFF34F8F 		dsb
 5003              	@ 0 "" 2
4788:bsp/middlewares/freertos/source/tasks.c ****                 }
 5004              		.loc 1 4788 21 view .LVU1393
 5005              	@ 4788 "bsp/middlewares/freertos/source/tasks.c" 1
 5006 00ac BFF36F8F 		isb
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 209


 5007              	@ 0 "" 2
4788:bsp/middlewares/freertos/source/tasks.c ****                 }
 5008              		.loc 1 4788 43 view .LVU1394
 5009              		.thumb
 5010              		.syntax unified
 5011 00b0 D0E7     		b	.L371
 5012              	.L377:
4826:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdTRUE;
 5013              		.loc 1 4826 17 view .LVU1395
4826:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdTRUE;
 5014              		.loc 1 4826 64 is_stmt 0 view .LVU1396
 5015 00b2 064B     		ldr	r3, .L378
 5016 00b4 1B68     		ldr	r3, [r3]
 5017 00b6 07F11002 		add	r2, r7, #16
 5018 00ba 03EB8203 		add	r3, r3, r2, lsl #2
 5019 00be 5A68     		ldr	r2, [r3, #4]
 5020 00c0 22EA0602 		bic	r2, r2, r6
 5021 00c4 5A60     		str	r2, [r3, #4]
4827:bsp/middlewares/freertos/source/tasks.c ****             }
 5022              		.loc 1 4827 17 is_stmt 1 view .LVU1397
 5023              	.LVL356:
4827:bsp/middlewares/freertos/source/tasks.c ****             }
 5024              		.loc 1 4827 25 is_stmt 0 view .LVU1398
 5025 00c6 0124     		movs	r4, #1
 5026              	.LVL357:
4827:bsp/middlewares/freertos/source/tasks.c ****             }
 5027              		.loc 1 4827 25 view .LVU1399
 5028 00c8 DAE7     		b	.L373
 5029              	.L379:
 5030 00ca 00BF     		.align	2
 5031              	.L378:
 5032 00cc 00000000 		.word	.LANCHOR10
 5033              		.cfi_endproc
 5034              	.LFE45:
 5036              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5037              		.align	1
 5038              		.global	xTaskGenericNotify
 5039              		.syntax unified
 5040              		.thumb
 5041              		.thumb_func
 5043              	xTaskGenericNotify:
 5044              	.LVL358:
 5045              	.LFB46:
4847:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 5046              		.loc 1 4847 5 is_stmt 1 view -0
 5047              		.cfi_startproc
 5048              		@ args = 4, pretend = 0, frame = 0
 5049              		@ frame_needed = 0, uses_anonymous_args = 0
4847:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 5050              		.loc 1 4847 5 is_stmt 0 view .LVU1401
 5051 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5052              	.LCFI44:
 5053              		.cfi_def_cfa_offset 24
 5054              		.cfi_offset 3, -24
 5055              		.cfi_offset 4, -20
 5056              		.cfi_offset 5, -16
 5057              		.cfi_offset 6, -12
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 210


 5058              		.cfi_offset 7, -8
 5059              		.cfi_offset 14, -4
4848:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = pdPASS;
 5060              		.loc 1 4848 9 is_stmt 1 view .LVU1402
4849:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5061              		.loc 1 4849 9 view .LVU1403
 5062              	.LVL359:
4850:bsp/middlewares/freertos/source/tasks.c **** 
 5063              		.loc 1 4850 9 view .LVU1404
4852:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
 5064              		.loc 1 4852 9 view .LVU1405
 5065 0002 41B1     		cbz	r1, .L381
4852:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
 5066              		.loc 1 4852 9 view .LVU1406
 5067              	.LBB203:
 5068              	.LBI203:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5069              		.loc 2 193 34 view .LVU1407
 5070              	.LBB204:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5071              		.loc 2 195 9 view .LVU1408
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5072              		.loc 2 197 9 view .LVU1409
 5073              		.syntax unified
 5074              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5075 0004 4FF01003 			mov r3, #16												
 5076 0008 83F31188 		msr basepri, r3											
 5077 000c BFF36F8F 		isb														
 5078 0010 BFF34F8F 		dsb														
 5079              	
 5080              	@ 0 "" 2
 5081              	.LVL360:
 5082              		.thumb
 5083              		.syntax unified
 5084              	.L382:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5085              		.loc 2 197 9 is_stmt 0 view .LVU1410
 5086              	.LBE204:
 5087              	.LBE203:
4852:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
 5088              		.loc 1 4852 9 is_stmt 1 discriminator 1 view .LVU1411
4852:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
 5089              		.loc 1 4852 9 discriminator 1 view .LVU1412
4852:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
 5090              		.loc 1 4852 9 discriminator 1 view .LVU1413
 5091 0014 FEE7     		b	.L382
 5092              	.LVL361:
 5093              	.L381:
4852:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
 5094              		.loc 1 4852 9 is_stmt 0 discriminator 1 view .LVU1414
 5095 0016 0446     		mov	r4, r0
 5096 0018 1746     		mov	r7, r2
 5097 001a 1E46     		mov	r6, r3
 5098 001c 0D46     		mov	r5, r1
4852:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( xTaskToNotify );
 5099              		.loc 1 4852 80 is_stmt 1 discriminator 2 view .LVU1415
4853:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 211


 5100              		.loc 1 4853 9 discriminator 2 view .LVU1416
 5101 001e C0B1     		cbz	r0, .L401
4853:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
 5102              		.loc 1 4853 38 discriminator 2 view .LVU1417
4854:bsp/middlewares/freertos/source/tasks.c **** 
 5103              		.loc 1 4854 9 discriminator 2 view .LVU1418
 5104              	.LVL362:
4856:bsp/middlewares/freertos/source/tasks.c ****         {
 5105              		.loc 1 4856 9 discriminator 2 view .LVU1419
 5106 0020 FFF7FEFF 		bl	vPortEnterCritical
 5107              	.LVL363:
4858:bsp/middlewares/freertos/source/tasks.c ****             {
 5108              		.loc 1 4858 13 discriminator 2 view .LVU1420
4858:bsp/middlewares/freertos/source/tasks.c ****             {
 5109              		.loc 1 4858 15 is_stmt 0 discriminator 2 view .LVU1421
 5110 0024 069B     		ldr	r3, [sp, #24]
 5111 0026 33B1     		cbz	r3, .L385
4860:bsp/middlewares/freertos/source/tasks.c ****             }
 5112              		.loc 1 4860 17 is_stmt 1 view .LVU1422
4860:bsp/middlewares/freertos/source/tasks.c ****             }
 5113              		.loc 1 4860 71 is_stmt 0 view .LVU1423
 5114 0028 05F11003 		add	r3, r5, #16
 5115 002c 04EB8303 		add	r3, r4, r3, lsl #2
 5116 0030 5B68     		ldr	r3, [r3, #4]
4860:bsp/middlewares/freertos/source/tasks.c ****             }
 5117              		.loc 1 4860 47 view .LVU1424
 5118 0032 069A     		ldr	r2, [sp, #24]
 5119 0034 1360     		str	r3, [r2]
 5120              	.L385:
4863:bsp/middlewares/freertos/source/tasks.c **** 
 5121              		.loc 1 4863 13 is_stmt 1 view .LVU1425
4863:bsp/middlewares/freertos/source/tasks.c **** 
 5122              		.loc 1 4863 35 is_stmt 0 view .LVU1426
 5123 0036 6319     		adds	r3, r4, r5
 5124 0038 93F84820 		ldrb	r2, [r3, #72]	@ zero_extendqisi2
 5125 003c D2B2     		uxtb	r2, r2
 5126              	.LVL364:
4865:bsp/middlewares/freertos/source/tasks.c **** 
 5127              		.loc 1 4865 13 is_stmt 1 view .LVU1427
4865:bsp/middlewares/freertos/source/tasks.c **** 
 5128              		.loc 1 4865 53 is_stmt 0 view .LVU1428
 5129 003e 0221     		movs	r1, #2
 5130 0040 83F84810 		strb	r1, [r3, #72]
4867:bsp/middlewares/freertos/source/tasks.c ****             {
 5131              		.loc 1 4867 13 is_stmt 1 view .LVU1429
 5132 0044 042E     		cmp	r6, #4
 5133 0046 2FD8     		bhi	.L386
 5134 0048 DFE806F0 		tbb	[pc, r6]
 5135              	.L388:
 5136 004c 3A       		.byte	(.L397-.L388)/2
 5137 004d 0C       		.byte	(.L391-.L388)/2
 5138 004e 15       		.byte	(.L390-.L388)/2
 5139 004f 1E       		.byte	(.L389-.L388)/2
 5140 0050 25       		.byte	(.L387-.L388)/2
 5141              	.LVL365:
 5142 0051 00       		.p2align 1
 5143              	.L401:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 212


4853:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
 5144              		.loc 1 4853 9 view .LVU1430
 5145              	.LBB205:
 5146              	.LBI205:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5147              		.loc 2 193 34 view .LVU1431
 5148              	.LBB206:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5149              		.loc 2 195 9 view .LVU1432
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5150              		.loc 2 197 9 view .LVU1433
 5151              		.syntax unified
 5152              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5153 0052 4FF01003 			mov r3, #16												
 5154 0056 83F31188 		msr basepri, r3											
 5155 005a BFF36F8F 		isb														
 5156 005e BFF34F8F 		dsb														
 5157              	
 5158              	@ 0 "" 2
 5159              	.LVL366:
 5160              		.thumb
 5161              		.syntax unified
 5162              	.L384:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5163              		.loc 2 197 9 is_stmt 0 view .LVU1434
 5164              	.LBE206:
 5165              	.LBE205:
4853:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
 5166              		.loc 1 4853 9 is_stmt 1 discriminator 2 view .LVU1435
4853:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
 5167              		.loc 1 4853 9 discriminator 2 view .LVU1436
4853:bsp/middlewares/freertos/source/tasks.c ****         pxTCB = xTaskToNotify;
 5168              		.loc 1 4853 9 discriminator 2 view .LVU1437
 5169 0062 FEE7     		b	.L384
 5170              	.LVL367:
 5171              	.L391:
4870:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5172              		.loc 1 4870 21 view .LVU1438
4870:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5173              		.loc 1 4870 63 is_stmt 0 view .LVU1439
 5174 0064 05F11003 		add	r3, r5, #16
 5175 0068 04EB8303 		add	r3, r4, r3, lsl #2
 5176 006c 5968     		ldr	r1, [r3, #4]
 5177 006e 0F43     		orrs	r7, r7, r1
 5178              	.LVL368:
4870:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5179              		.loc 1 4870 63 view .LVU1440
 5180 0070 5F60     		str	r7, [r3, #4]
4871:bsp/middlewares/freertos/source/tasks.c **** 
 5181              		.loc 1 4871 21 is_stmt 1 view .LVU1441
4849:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5182              		.loc 1 4849 20 is_stmt 0 view .LVU1442
 5183 0072 0125     		movs	r5, #1
 5184              	.LVL369:
4871:bsp/middlewares/freertos/source/tasks.c **** 
 5185              		.loc 1 4871 21 view .LVU1443
 5186 0074 25E0     		b	.L392
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 213


 5187              	.LVL370:
 5188              	.L390:
4874:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5189              		.loc 1 4874 21 is_stmt 1 view .LVU1444
4874:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5190              		.loc 1 4874 45 is_stmt 0 view .LVU1445
 5191 0076 05F11003 		add	r3, r5, #16
 5192 007a 04EB8303 		add	r3, r4, r3, lsl #2
 5193 007e 5968     		ldr	r1, [r3, #4]
4874:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5194              		.loc 1 4874 66 view .LVU1446
 5195 0080 0131     		adds	r1, r1, #1
 5196 0082 5960     		str	r1, [r3, #4]
4875:bsp/middlewares/freertos/source/tasks.c **** 
 5197              		.loc 1 4875 21 is_stmt 1 view .LVU1447
4849:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5198              		.loc 1 4849 20 is_stmt 0 view .LVU1448
 5199 0084 0125     		movs	r5, #1
 5200              	.LVL371:
4875:bsp/middlewares/freertos/source/tasks.c **** 
 5201              		.loc 1 4875 21 view .LVU1449
 5202 0086 1CE0     		b	.L392
 5203              	.LVL372:
 5204              	.L389:
4878:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5205              		.loc 1 4878 21 is_stmt 1 view .LVU1450
4878:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5206              		.loc 1 4878 63 is_stmt 0 view .LVU1451
 5207 0088 05F11003 		add	r3, r5, #16
 5208 008c 04EB8303 		add	r3, r4, r3, lsl #2
 5209 0090 5F60     		str	r7, [r3, #4]
4879:bsp/middlewares/freertos/source/tasks.c **** 
 5210              		.loc 1 4879 21 is_stmt 1 view .LVU1452
4849:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5211              		.loc 1 4849 20 is_stmt 0 view .LVU1453
 5212 0092 0125     		movs	r5, #1
 5213              	.LVL373:
4879:bsp/middlewares/freertos/source/tasks.c **** 
 5214              		.loc 1 4879 21 view .LVU1454
 5215 0094 15E0     		b	.L392
 5216              	.LVL374:
 5217              	.L387:
4883:bsp/middlewares/freertos/source/tasks.c ****                     {
 5218              		.loc 1 4883 21 is_stmt 1 view .LVU1455
4883:bsp/middlewares/freertos/source/tasks.c ****                     {
 5219              		.loc 1 4883 23 is_stmt 0 view .LVU1456
 5220 0096 022A     		cmp	r2, #2
 5221 0098 19D0     		beq	.L398
4885:bsp/middlewares/freertos/source/tasks.c ****                     }
 5222              		.loc 1 4885 25 is_stmt 1 view .LVU1457
4885:bsp/middlewares/freertos/source/tasks.c ****                     }
 5223              		.loc 1 4885 67 is_stmt 0 view .LVU1458
 5224 009a 05F11003 		add	r3, r5, #16
 5225 009e 04EB8303 		add	r3, r4, r3, lsl #2
 5226 00a2 5F60     		str	r7, [r3, #4]
4849:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5227              		.loc 1 4849 20 view .LVU1459
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 214


 5228 00a4 0125     		movs	r5, #1
 5229              	.LVL375:
4849:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5230              		.loc 1 4849 20 view .LVU1460
 5231 00a6 0CE0     		b	.L392
 5232              	.LVL376:
 5233              	.L386:
4906:bsp/middlewares/freertos/source/tasks.c **** 
 5234              		.loc 1 4906 21 is_stmt 1 view .LVU1461
 5235 00a8 224B     		ldr	r3, .L403
 5236 00aa 1B68     		ldr	r3, [r3]
 5237 00ac 8BB1     		cbz	r3, .L399
4906:bsp/middlewares/freertos/source/tasks.c **** 
 5238              		.loc 1 4906 21 view .LVU1462
 5239              	.LBB207:
 5240              	.LBI207:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5241              		.loc 2 193 34 view .LVU1463
 5242              	.LBB208:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5243              		.loc 2 195 9 view .LVU1464
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5244              		.loc 2 197 9 view .LVU1465
 5245              		.syntax unified
 5246              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5247 00ae 4FF01003 			mov r3, #16												
 5248 00b2 83F31188 		msr basepri, r3											
 5249 00b6 BFF36F8F 		isb														
 5250 00ba BFF34F8F 		dsb														
 5251              	
 5252              	@ 0 "" 2
 5253              	.LVL377:
 5254              		.thumb
 5255              		.syntax unified
 5256              	.L393:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5257              		.loc 2 197 9 is_stmt 0 view .LVU1466
 5258              	.LBE208:
 5259              	.LBE207:
4906:bsp/middlewares/freertos/source/tasks.c **** 
 5260              		.loc 1 4906 21 is_stmt 1 discriminator 3 view .LVU1467
4906:bsp/middlewares/freertos/source/tasks.c **** 
 5261              		.loc 1 4906 21 discriminator 3 view .LVU1468
4906:bsp/middlewares/freertos/source/tasks.c **** 
 5262              		.loc 1 4906 21 discriminator 3 view .LVU1469
 5263 00be FEE7     		b	.L393
 5264              	.L397:
4867:bsp/middlewares/freertos/source/tasks.c ****             {
 5265              		.loc 1 4867 13 is_stmt 0 view .LVU1470
 5266 00c0 0125     		movs	r5, #1
 5267              	.LVL378:
 5268              	.L392:
4911:bsp/middlewares/freertos/source/tasks.c **** 
 5269              		.loc 1 4911 48 is_stmt 1 view .LVU1471
4915:bsp/middlewares/freertos/source/tasks.c ****             {
 5270              		.loc 1 4915 13 view .LVU1472
4915:bsp/middlewares/freertos/source/tasks.c ****             {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 215


 5271              		.loc 1 4915 15 is_stmt 0 view .LVU1473
 5272 00c2 012A     		cmp	r2, #1
 5273 00c4 07D0     		beq	.L402
 5274              	.LVL379:
 5275              	.L394:
4952:bsp/middlewares/freertos/source/tasks.c ****             }
 5276              		.loc 1 4952 41 is_stmt 1 view .LVU1474
4955:bsp/middlewares/freertos/source/tasks.c **** 
 5277              		.loc 1 4955 9 view .LVU1475
 5278 00c6 FFF7FEFF 		bl	vPortExitCritical
 5279              	.LVL380:
4957:bsp/middlewares/freertos/source/tasks.c ****     }
 5280              		.loc 1 4957 9 view .LVU1476
4958:bsp/middlewares/freertos/source/tasks.c **** 
 5281              		.loc 1 4958 5 is_stmt 0 view .LVU1477
 5282 00ca 2846     		mov	r0, r5
 5283 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5284              	.LVL381:
 5285              	.L398:
4890:bsp/middlewares/freertos/source/tasks.c ****                     }
 5286              		.loc 1 4890 33 view .LVU1478
 5287 00ce 0025     		movs	r5, #0
 5288              	.LVL382:
4890:bsp/middlewares/freertos/source/tasks.c ****                     }
 5289              		.loc 1 4890 33 view .LVU1479
 5290 00d0 F7E7     		b	.L392
 5291              	.LVL383:
 5292              	.L399:
4849:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5293              		.loc 1 4849 20 view .LVU1480
 5294 00d2 0125     		movs	r5, #1
 5295              	.LVL384:
4849:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5296              		.loc 1 4849 20 view .LVU1481
 5297 00d4 F5E7     		b	.L392
 5298              	.LVL385:
 5299              	.L402:
4917:bsp/middlewares/freertos/source/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5300              		.loc 1 4917 17 is_stmt 1 view .LVU1482
4917:bsp/middlewares/freertos/source/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 5301              		.loc 1 4917 26 is_stmt 0 view .LVU1483
 5302 00d6 261D     		adds	r6, r4, #4
 5303 00d8 3046     		mov	r0, r6
 5304 00da FFF7FEFF 		bl	uxListRemove
 5305              	.LVL386:
4918:bsp/middlewares/freertos/source/tasks.c **** 
 5306              		.loc 1 4918 17 is_stmt 1 view .LVU1484
4918:bsp/middlewares/freertos/source/tasks.c **** 
 5307              		.loc 1 4918 17 view .LVU1485
 5308 00de E06A     		ldr	r0, [r4, #44]
 5309 00e0 0123     		movs	r3, #1
 5310 00e2 8340     		lsls	r3, r3, r0
 5311 00e4 144A     		ldr	r2, .L403+4
 5312 00e6 1168     		ldr	r1, [r2]
 5313 00e8 0B43     		orrs	r3, r3, r1
 5314 00ea 1360     		str	r3, [r2]
4918:bsp/middlewares/freertos/source/tasks.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 216


 5315              		.loc 1 4918 17 view .LVU1486
 5316 00ec 00EB8000 		add	r0, r0, r0, lsl #2
 5317 00f0 3146     		mov	r1, r6
 5318 00f2 124B     		ldr	r3, .L403+8
 5319 00f4 03EB8000 		add	r0, r3, r0, lsl #2
 5320 00f8 FFF7FEFF 		bl	vListInsertEnd
 5321              	.LVL387:
4918:bsp/middlewares/freertos/source/tasks.c **** 
 5322              		.loc 1 4918 47 view .LVU1487
4921:bsp/middlewares/freertos/source/tasks.c **** 
 5323              		.loc 1 4921 17 view .LVU1488
 5324 00fc A36A     		ldr	r3, [r4, #40]
 5325 00fe 43B1     		cbz	r3, .L395
4921:bsp/middlewares/freertos/source/tasks.c **** 
 5326              		.loc 1 4921 17 view .LVU1489
 5327              	.LBB209:
 5328              	.LBI209:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5329              		.loc 2 193 34 view .LVU1490
 5330              	.LBB210:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5331              		.loc 2 195 9 view .LVU1491
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5332              		.loc 2 197 9 view .LVU1492
 5333              		.syntax unified
 5334              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5335 0100 4FF01003 			mov r3, #16												
 5336 0104 83F31188 		msr basepri, r3											
 5337 0108 BFF36F8F 		isb														
 5338 010c BFF34F8F 		dsb														
 5339              	
 5340              	@ 0 "" 2
 5341              	.LVL388:
 5342              		.thumb
 5343              		.syntax unified
 5344              	.L396:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5345              		.loc 2 197 9 is_stmt 0 view .LVU1493
 5346              	.LBE210:
 5347              	.LBE209:
4921:bsp/middlewares/freertos/source/tasks.c **** 
 5348              		.loc 1 4921 17 is_stmt 1 discriminator 4 view .LVU1494
4921:bsp/middlewares/freertos/source/tasks.c **** 
 5349              		.loc 1 4921 17 discriminator 4 view .LVU1495
4921:bsp/middlewares/freertos/source/tasks.c **** 
 5350              		.loc 1 4921 17 discriminator 4 view .LVU1496
 5351 0110 FEE7     		b	.L396
 5352              	.L395:
4921:bsp/middlewares/freertos/source/tasks.c **** 
 5353              		.loc 1 4921 94 discriminator 2 view .LVU1497
4939:bsp/middlewares/freertos/source/tasks.c ****                 {
 5354              		.loc 1 4939 17 discriminator 2 view .LVU1498
4939:bsp/middlewares/freertos/source/tasks.c ****                 {
 5355              		.loc 1 4939 26 is_stmt 0 discriminator 2 view .LVU1499
 5356 0112 E26A     		ldr	r2, [r4, #44]
4939:bsp/middlewares/freertos/source/tasks.c ****                 {
 5357              		.loc 1 4939 53 discriminator 2 view .LVU1500
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 217


 5358 0114 0A4B     		ldr	r3, .L403+12
 5359 0116 1B68     		ldr	r3, [r3]
 5360 0118 DB6A     		ldr	r3, [r3, #44]
4939:bsp/middlewares/freertos/source/tasks.c ****                 {
 5361              		.loc 1 4939 19 discriminator 2 view .LVU1501
 5362 011a 9A42     		cmp	r2, r3
 5363 011c D3D9     		bls	.L394
4943:bsp/middlewares/freertos/source/tasks.c ****                 }
 5364              		.loc 1 4943 21 is_stmt 1 view .LVU1502
 5365 011e 4FF0E023 		mov	r3, #-536813568
 5366 0122 4FF08052 		mov	r2, #268435456
 5367 0126 C3F8042D 		str	r2, [r3, #3332]
 5368              	.LVL389:
4943:bsp/middlewares/freertos/source/tasks.c ****                 }
 5369              		.loc 1 4943 21 view .LVU1503
 5370              		.syntax unified
 5371              	@ 4943 "bsp/middlewares/freertos/source/tasks.c" 1
 5372 012a BFF34F8F 		dsb
 5373              	@ 0 "" 2
4943:bsp/middlewares/freertos/source/tasks.c ****                 }
 5374              		.loc 1 4943 21 view .LVU1504
 5375              	@ 4943 "bsp/middlewares/freertos/source/tasks.c" 1
 5376 012e BFF36F8F 		isb
 5377              	@ 0 "" 2
4943:bsp/middlewares/freertos/source/tasks.c ****                 }
 5378              		.loc 1 4943 52 view .LVU1505
 5379              		.thumb
 5380              		.syntax unified
 5381 0132 C8E7     		b	.L394
 5382              	.L404:
 5383              		.align	2
 5384              	.L403:
 5385 0134 00000000 		.word	.LANCHOR15
 5386 0138 00000000 		.word	.LANCHOR13
 5387 013c 00000000 		.word	.LANCHOR4
 5388 0140 00000000 		.word	.LANCHOR10
 5389              		.cfi_endproc
 5390              	.LFE46:
 5392              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5393              		.align	1
 5394              		.global	xTaskGenericNotifyFromISR
 5395              		.syntax unified
 5396              		.thumb
 5397              		.thumb_func
 5399              	xTaskGenericNotifyFromISR:
 5400              	.LVL390:
 5401              	.LFB47:
4971:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 5402              		.loc 1 4971 5 view -0
 5403              		.cfi_startproc
 5404              		@ args = 8, pretend = 0, frame = 0
 5405              		@ frame_needed = 0, uses_anonymous_args = 0
4972:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5406              		.loc 1 4972 9 view .LVU1507
4973:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn = pdPASS;
 5407              		.loc 1 4973 9 view .LVU1508
4974:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 218


 5408              		.loc 1 4974 9 view .LVU1509
4975:bsp/middlewares/freertos/source/tasks.c **** 
 5409              		.loc 1 4975 9 view .LVU1510
4977:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5410              		.loc 1 4977 9 view .LVU1511
 5411 0000 78B1     		cbz	r0, .L430
4971:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 5412              		.loc 1 4971 5 is_stmt 0 discriminator 2 view .LVU1512
 5413 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5414              	.LCFI45:
 5415              		.cfi_def_cfa_offset 24
 5416              		.cfi_offset 4, -24
 5417              		.cfi_offset 5, -20
 5418              		.cfi_offset 6, -16
 5419              		.cfi_offset 7, -12
 5420              		.cfi_offset 8, -8
 5421              		.cfi_offset 14, -4
 5422 0006 0C46     		mov	r4, r1
 5423 0008 1646     		mov	r6, r2
 5424 000a 1D46     		mov	r5, r3
 5425 000c 0746     		mov	r7, r0
4977:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5426              		.loc 1 4977 38 is_stmt 1 discriminator 2 view .LVU1513
4978:bsp/middlewares/freertos/source/tasks.c **** 
 5427              		.loc 1 4978 9 discriminator 2 view .LVU1514
 5428 000e 89B1     		cbz	r1, .L408
4978:bsp/middlewares/freertos/source/tasks.c **** 
 5429              		.loc 1 4978 9 view .LVU1515
 5430              	.LBB211:
 5431              	.LBI211:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5432              		.loc 2 193 34 view .LVU1516
 5433              	.LBB212:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5434              		.loc 2 195 9 view .LVU1517
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5435              		.loc 2 197 9 view .LVU1518
 5436              		.syntax unified
 5437              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5438 0010 4FF01003 			mov r3, #16												
 5439 0014 83F31188 		msr basepri, r3											
 5440 0018 BFF36F8F 		isb														
 5441 001c BFF34F8F 		dsb														
 5442              	
 5443              	@ 0 "" 2
 5444              	.LVL391:
 5445              		.thumb
 5446              		.syntax unified
 5447              	.L409:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5448              		.loc 2 197 9 is_stmt 0 view .LVU1519
 5449              	.LBE212:
 5450              	.LBE211:
4978:bsp/middlewares/freertos/source/tasks.c **** 
 5451              		.loc 1 4978 9 is_stmt 1 discriminator 2 view .LVU1520
4978:bsp/middlewares/freertos/source/tasks.c **** 
 5452              		.loc 1 4978 9 discriminator 2 view .LVU1521
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 219


4978:bsp/middlewares/freertos/source/tasks.c **** 
 5453              		.loc 1 4978 9 discriminator 2 view .LVU1522
 5454 0020 FEE7     		b	.L409
 5455              	.LVL392:
 5456              	.L430:
 5457              	.LCFI46:
 5458              		.cfi_def_cfa_offset 0
 5459              		.cfi_restore 4
 5460              		.cfi_restore 5
 5461              		.cfi_restore 6
 5462              		.cfi_restore 7
 5463              		.cfi_restore 8
 5464              		.cfi_restore 14
4977:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5465              		.loc 1 4977 9 view .LVU1523
 5466              	.LBB213:
 5467              	.LBI213:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5468              		.loc 2 193 34 view .LVU1524
 5469              	.LBB214:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5470              		.loc 2 195 9 view .LVU1525
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5471              		.loc 2 197 9 view .LVU1526
 5472              		.syntax unified
 5473              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5474 0022 4FF01003 			mov r3, #16												
 5475 0026 83F31188 		msr basepri, r3											
 5476 002a BFF36F8F 		isb														
 5477 002e BFF34F8F 		dsb														
 5478              	
 5479              	@ 0 "" 2
 5480              	.LVL393:
 5481              		.thumb
 5482              		.syntax unified
 5483              	.L407:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5484              		.loc 2 197 9 is_stmt 0 view .LVU1527
 5485              	.LBE214:
 5486              	.LBE213:
4977:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5487              		.loc 1 4977 9 is_stmt 1 discriminator 1 view .LVU1528
4977:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5488              		.loc 1 4977 9 discriminator 1 view .LVU1529
4977:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5489              		.loc 1 4977 9 discriminator 1 view .LVU1530
 5490 0032 FEE7     		b	.L407
 5491              	.LVL394:
 5492              	.L408:
 5493              	.LCFI47:
 5494              		.cfi_def_cfa_offset 24
 5495              		.cfi_offset 4, -24
 5496              		.cfi_offset 5, -20
 5497              		.cfi_offset 6, -16
 5498              		.cfi_offset 7, -12
 5499              		.cfi_offset 8, -8
 5500              		.cfi_offset 14, -4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 220


4978:bsp/middlewares/freertos/source/tasks.c **** 
 5501              		.loc 1 4978 80 discriminator 2 view .LVU1531
4996:bsp/middlewares/freertos/source/tasks.c **** 
 5502              		.loc 1 4996 9 discriminator 2 view .LVU1532
 5503 0034 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5504              	.LVL395:
4998:bsp/middlewares/freertos/source/tasks.c **** 
 5505              		.loc 1 4998 9 discriminator 2 view .LVU1533
5000:bsp/middlewares/freertos/source/tasks.c ****         {
 5506              		.loc 1 5000 9 discriminator 2 view .LVU1534
 5507              	.LBB215:
 5508              	.LBI215:
 209:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5509              		.loc 2 209 38 discriminator 2 view .LVU1535
 5510              	.LBB216:
 211:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5511              		.loc 2 211 9 discriminator 2 view .LVU1536
 213:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5512              		.loc 2 213 9 discriminator 2 view .LVU1537
 5513              		.syntax unified
 5514              	@ 213 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5515 0038 EFF31188 			mrs r8, basepri											
 5516 003c 4FF01003 		mov r3, #16												
 5517 0040 83F31188 		msr basepri, r3											
 5518 0044 BFF36F8F 		isb														
 5519 0048 BFF34F8F 		dsb														
 5520              	
 5521              	@ 0 "" 2
 5522              	.LVL396:
 225:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 5523              		.loc 2 225 9 discriminator 2 view .LVU1538
 225:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 5524              		.loc 2 225 9 is_stmt 0 discriminator 2 view .LVU1539
 5525              		.thumb
 5526              		.syntax unified
 5527              	.LBE216:
 5528              	.LBE215:
5002:bsp/middlewares/freertos/source/tasks.c ****             {
 5529              		.loc 1 5002 13 is_stmt 1 discriminator 2 view .LVU1540
5002:bsp/middlewares/freertos/source/tasks.c ****             {
 5530              		.loc 1 5002 15 is_stmt 0 discriminator 2 view .LVU1541
 5531 004c 069B     		ldr	r3, [sp, #24]
 5532 004e 33B1     		cbz	r3, .L410
5004:bsp/middlewares/freertos/source/tasks.c ****             }
 5533              		.loc 1 5004 17 is_stmt 1 view .LVU1542
5004:bsp/middlewares/freertos/source/tasks.c ****             }
 5534              		.loc 1 5004 71 is_stmt 0 view .LVU1543
 5535 0050 04F11003 		add	r3, r4, #16
 5536 0054 07EB8303 		add	r3, r7, r3, lsl #2
 5537 0058 5B68     		ldr	r3, [r3, #4]
5004:bsp/middlewares/freertos/source/tasks.c ****             }
 5538              		.loc 1 5004 47 view .LVU1544
 5539 005a 069A     		ldr	r2, [sp, #24]
 5540 005c 1360     		str	r3, [r2]
 5541              	.L410:
5007:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 5542              		.loc 1 5007 13 is_stmt 1 view .LVU1545
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 221


5007:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 5543              		.loc 1 5007 35 is_stmt 0 view .LVU1546
 5544 005e 3B19     		adds	r3, r7, r4
 5545 0060 93F84820 		ldrb	r2, [r3, #72]	@ zero_extendqisi2
 5546 0064 D2B2     		uxtb	r2, r2
 5547              	.LVL397:
5008:bsp/middlewares/freertos/source/tasks.c **** 
 5548              		.loc 1 5008 13 is_stmt 1 view .LVU1547
5008:bsp/middlewares/freertos/source/tasks.c **** 
 5549              		.loc 1 5008 53 is_stmt 0 view .LVU1548
 5550 0066 0221     		movs	r1, #2
 5551 0068 83F84810 		strb	r1, [r3, #72]
5010:bsp/middlewares/freertos/source/tasks.c ****             {
 5552              		.loc 1 5010 13 is_stmt 1 view .LVU1549
 5553 006c 042D     		cmp	r5, #4
 5554 006e 26D8     		bhi	.L411
 5555 0070 DFE805F0 		tbb	[pc, r5]
 5556              	.L413:
 5557 0074 31       		.byte	(.L425-.L413)/2
 5558 0075 03       		.byte	(.L416-.L413)/2
 5559 0076 0C       		.byte	(.L415-.L413)/2
 5560 0077 15       		.byte	(.L414-.L413)/2
 5561 0078 1C       		.byte	(.L412-.L413)/2
 5562 0079 00       		.p2align 1
 5563              	.L416:
5013:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5564              		.loc 1 5013 21 view .LVU1550
5013:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5565              		.loc 1 5013 63 is_stmt 0 view .LVU1551
 5566 007a 04F11003 		add	r3, r4, #16
 5567 007e 07EB8303 		add	r3, r7, r3, lsl #2
 5568 0082 5968     		ldr	r1, [r3, #4]
 5569 0084 0E43     		orrs	r6, r6, r1
 5570              	.LVL398:
5013:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5571              		.loc 1 5013 63 view .LVU1552
 5572 0086 5E60     		str	r6, [r3, #4]
5014:bsp/middlewares/freertos/source/tasks.c **** 
 5573              		.loc 1 5014 21 is_stmt 1 view .LVU1553
4974:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5574              		.loc 1 4974 20 is_stmt 0 view .LVU1554
 5575 0088 0124     		movs	r4, #1
 5576              	.LVL399:
5014:bsp/middlewares/freertos/source/tasks.c **** 
 5577              		.loc 1 5014 21 view .LVU1555
 5578 008a 25E0     		b	.L417
 5579              	.LVL400:
 5580              	.L415:
5017:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5581              		.loc 1 5017 21 is_stmt 1 view .LVU1556
5017:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5582              		.loc 1 5017 45 is_stmt 0 view .LVU1557
 5583 008c 04F11003 		add	r3, r4, #16
 5584 0090 07EB8303 		add	r3, r7, r3, lsl #2
 5585 0094 5968     		ldr	r1, [r3, #4]
5017:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5586              		.loc 1 5017 66 view .LVU1558
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 222


 5587 0096 0131     		adds	r1, r1, #1
 5588 0098 5960     		str	r1, [r3, #4]
5018:bsp/middlewares/freertos/source/tasks.c **** 
 5589              		.loc 1 5018 21 is_stmt 1 view .LVU1559
4974:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5590              		.loc 1 4974 20 is_stmt 0 view .LVU1560
 5591 009a 0124     		movs	r4, #1
 5592              	.LVL401:
5018:bsp/middlewares/freertos/source/tasks.c **** 
 5593              		.loc 1 5018 21 view .LVU1561
 5594 009c 1CE0     		b	.L417
 5595              	.LVL402:
 5596              	.L414:
5021:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5597              		.loc 1 5021 21 is_stmt 1 view .LVU1562
5021:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5598              		.loc 1 5021 63 is_stmt 0 view .LVU1563
 5599 009e 04F11003 		add	r3, r4, #16
 5600 00a2 07EB8303 		add	r3, r7, r3, lsl #2
 5601 00a6 5E60     		str	r6, [r3, #4]
5022:bsp/middlewares/freertos/source/tasks.c **** 
 5602              		.loc 1 5022 21 is_stmt 1 view .LVU1564
4974:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5603              		.loc 1 4974 20 is_stmt 0 view .LVU1565
 5604 00a8 0124     		movs	r4, #1
 5605              	.LVL403:
5022:bsp/middlewares/freertos/source/tasks.c **** 
 5606              		.loc 1 5022 21 view .LVU1566
 5607 00aa 15E0     		b	.L417
 5608              	.LVL404:
 5609              	.L412:
5026:bsp/middlewares/freertos/source/tasks.c ****                     {
 5610              		.loc 1 5026 21 is_stmt 1 view .LVU1567
5026:bsp/middlewares/freertos/source/tasks.c ****                     {
 5611              		.loc 1 5026 23 is_stmt 0 view .LVU1568
 5612 00ac 022A     		cmp	r2, #2
 5613 00ae 1AD0     		beq	.L426
5028:bsp/middlewares/freertos/source/tasks.c ****                     }
 5614              		.loc 1 5028 25 is_stmt 1 view .LVU1569
5028:bsp/middlewares/freertos/source/tasks.c ****                     }
 5615              		.loc 1 5028 67 is_stmt 0 view .LVU1570
 5616 00b0 04F11003 		add	r3, r4, #16
 5617 00b4 07EB8303 		add	r3, r7, r3, lsl #2
 5618 00b8 5E60     		str	r6, [r3, #4]
4974:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5619              		.loc 1 4974 20 view .LVU1571
 5620 00ba 0124     		movs	r4, #1
 5621              	.LVL405:
4974:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5622              		.loc 1 4974 20 view .LVU1572
 5623 00bc 0CE0     		b	.L417
 5624              	.LVL406:
 5625              	.L411:
5049:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5626              		.loc 1 5049 21 is_stmt 1 view .LVU1573
 5627 00be 274B     		ldr	r3, .L432
 5628 00c0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 223


 5629 00c2 93B1     		cbz	r3, .L427
5049:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5630              		.loc 1 5049 21 view .LVU1574
 5631              	.LBB217:
 5632              	.LBI217:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5633              		.loc 2 193 34 view .LVU1575
 5634              	.LBB218:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5635              		.loc 2 195 9 view .LVU1576
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5636              		.loc 2 197 9 view .LVU1577
 5637              		.syntax unified
 5638              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5639 00c4 4FF01003 			mov r3, #16												
 5640 00c8 83F31188 		msr basepri, r3											
 5641 00cc BFF36F8F 		isb														
 5642 00d0 BFF34F8F 		dsb														
 5643              	
 5644              	@ 0 "" 2
 5645              	.LVL407:
 5646              		.thumb
 5647              		.syntax unified
 5648              	.L418:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5649              		.loc 2 197 9 is_stmt 0 view .LVU1578
 5650              	.LBE218:
 5651              	.LBE217:
5049:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5652              		.loc 1 5049 21 is_stmt 1 discriminator 3 view .LVU1579
5049:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5653              		.loc 1 5049 21 discriminator 3 view .LVU1580
5049:bsp/middlewares/freertos/source/tasks.c ****                     break;
 5654              		.loc 1 5049 21 discriminator 3 view .LVU1581
 5655 00d4 FEE7     		b	.L418
 5656              	.L425:
5010:bsp/middlewares/freertos/source/tasks.c ****             {
 5657              		.loc 1 5010 13 is_stmt 0 view .LVU1582
 5658 00d6 0124     		movs	r4, #1
 5659              	.LVL408:
 5660              	.L417:
5053:bsp/middlewares/freertos/source/tasks.c **** 
 5661              		.loc 1 5053 57 is_stmt 1 view .LVU1583
5057:bsp/middlewares/freertos/source/tasks.c ****             {
 5662              		.loc 1 5057 13 view .LVU1584
5057:bsp/middlewares/freertos/source/tasks.c ****             {
 5663              		.loc 1 5057 15 is_stmt 0 view .LVU1585
 5664 00d8 012A     		cmp	r2, #1
 5665 00da 08D0     		beq	.L431
 5666              	.LVL409:
 5667              	.L419:
5090:bsp/middlewares/freertos/source/tasks.c ****                 }
 5668              		.loc 1 5090 45 is_stmt 1 view .LVU1586
5094:bsp/middlewares/freertos/source/tasks.c **** 
 5669              		.loc 1 5094 9 view .LVU1587
 5670              	.LBB219:
 5671              	.LBI219:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 224


 229:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5672              		.loc 2 229 34 view .LVU1588
 5673              	.LBB220:
 5674              		.loc 2 231 9 view .LVU1589
 5675              		.syntax unified
 5676              	@ 231 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5677 00dc 88F31188 			msr basepri, r8	
 5678              	@ 0 "" 2
 5679              	.LVL410:
 5680              		.loc 2 231 9 is_stmt 0 view .LVU1590
 5681              		.thumb
 5682              		.syntax unified
 5683              	.LBE220:
 5684              	.LBE219:
5096:bsp/middlewares/freertos/source/tasks.c ****     }
 5685              		.loc 1 5096 9 is_stmt 1 view .LVU1591
5097:bsp/middlewares/freertos/source/tasks.c **** 
 5686              		.loc 1 5097 5 is_stmt 0 view .LVU1592
 5687 00e0 2046     		mov	r0, r4
 5688 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5689              	.LVL411:
 5690              	.L426:
5033:bsp/middlewares/freertos/source/tasks.c ****                     }
 5691              		.loc 1 5033 33 view .LVU1593
 5692 00e6 0024     		movs	r4, #0
 5693              	.LVL412:
5033:bsp/middlewares/freertos/source/tasks.c ****                     }
 5694              		.loc 1 5033 33 view .LVU1594
 5695 00e8 F6E7     		b	.L417
 5696              	.LVL413:
 5697              	.L427:
4974:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5698              		.loc 1 4974 20 view .LVU1595
 5699 00ea 0124     		movs	r4, #1
 5700              	.LVL414:
4974:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5701              		.loc 1 4974 20 view .LVU1596
 5702 00ec F4E7     		b	.L417
 5703              	.LVL415:
 5704              	.L431:
5060:bsp/middlewares/freertos/source/tasks.c **** 
 5705              		.loc 1 5060 17 is_stmt 1 view .LVU1597
 5706 00ee BB6A     		ldr	r3, [r7, #40]
 5707 00f0 43B1     		cbz	r3, .L420
5060:bsp/middlewares/freertos/source/tasks.c **** 
 5708              		.loc 1 5060 17 view .LVU1598
 5709              	.LBB221:
 5710              	.LBI221:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5711              		.loc 2 193 34 view .LVU1599
 5712              	.LBB222:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5713              		.loc 2 195 9 view .LVU1600
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5714              		.loc 2 197 9 view .LVU1601
 5715              		.syntax unified
 5716              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 225


 5717 00f2 4FF01003 			mov r3, #16												
 5718 00f6 83F31188 		msr basepri, r3											
 5719 00fa BFF36F8F 		isb														
 5720 00fe BFF34F8F 		dsb														
 5721              	
 5722              	@ 0 "" 2
 5723              	.LVL416:
 5724              		.thumb
 5725              		.syntax unified
 5726              	.L421:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5727              		.loc 2 197 9 is_stmt 0 view .LVU1602
 5728              	.LBE222:
 5729              	.LBE221:
5060:bsp/middlewares/freertos/source/tasks.c **** 
 5730              		.loc 1 5060 17 is_stmt 1 discriminator 4 view .LVU1603
5060:bsp/middlewares/freertos/source/tasks.c **** 
 5731              		.loc 1 5060 17 discriminator 4 view .LVU1604
5060:bsp/middlewares/freertos/source/tasks.c **** 
 5732              		.loc 1 5060 17 discriminator 4 view .LVU1605
 5733 0102 FEE7     		b	.L421
 5734              	.L420:
5060:bsp/middlewares/freertos/source/tasks.c **** 
 5735              		.loc 1 5060 94 discriminator 2 view .LVU1606
5062:bsp/middlewares/freertos/source/tasks.c ****                 {
 5736              		.loc 1 5062 17 discriminator 2 view .LVU1607
5062:bsp/middlewares/freertos/source/tasks.c ****                 {
 5737              		.loc 1 5062 42 is_stmt 0 discriminator 2 view .LVU1608
 5738 0104 164B     		ldr	r3, .L432+4
 5739 0106 1B68     		ldr	r3, [r3]
5062:bsp/middlewares/freertos/source/tasks.c ****                 {
 5740              		.loc 1 5062 19 discriminator 2 view .LVU1609
 5741 0108 0BBB     		cbnz	r3, .L422
5064:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5742              		.loc 1 5064 21 is_stmt 1 view .LVU1610
5064:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 5743              		.loc 1 5064 30 is_stmt 0 view .LVU1611
 5744 010a 3D1D     		adds	r5, r7, #4
 5745 010c 2846     		mov	r0, r5
 5746 010e FFF7FEFF 		bl	uxListRemove
 5747              	.LVL417:
5065:bsp/middlewares/freertos/source/tasks.c ****                 }
 5748              		.loc 1 5065 21 is_stmt 1 view .LVU1612
5065:bsp/middlewares/freertos/source/tasks.c ****                 }
 5749              		.loc 1 5065 21 view .LVU1613
 5750 0112 F86A     		ldr	r0, [r7, #44]
 5751 0114 0123     		movs	r3, #1
 5752 0116 8340     		lsls	r3, r3, r0
 5753 0118 124A     		ldr	r2, .L432+8
 5754 011a 1168     		ldr	r1, [r2]
 5755 011c 0B43     		orrs	r3, r3, r1
 5756 011e 1360     		str	r3, [r2]
5065:bsp/middlewares/freertos/source/tasks.c ****                 }
 5757              		.loc 1 5065 21 view .LVU1614
 5758 0120 00EB8000 		add	r0, r0, r0, lsl #2
 5759 0124 2946     		mov	r1, r5
 5760 0126 104B     		ldr	r3, .L432+12
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 226


 5761 0128 03EB8000 		add	r0, r3, r0, lsl #2
 5762 012c FFF7FEFF 		bl	vListInsertEnd
 5763              	.LVL418:
5065:bsp/middlewares/freertos/source/tasks.c ****                 }
 5764              		.loc 1 5065 51 view .LVU1615
 5765              	.L423:
5074:bsp/middlewares/freertos/source/tasks.c ****                 {
 5766              		.loc 1 5074 17 view .LVU1616
5074:bsp/middlewares/freertos/source/tasks.c ****                 {
 5767              		.loc 1 5074 26 is_stmt 0 view .LVU1617
 5768 0130 FA6A     		ldr	r2, [r7, #44]
5074:bsp/middlewares/freertos/source/tasks.c ****                 {
 5769              		.loc 1 5074 53 view .LVU1618
 5770 0132 0E4B     		ldr	r3, .L432+16
 5771 0134 1B68     		ldr	r3, [r3]
 5772 0136 DB6A     		ldr	r3, [r3, #44]
5074:bsp/middlewares/freertos/source/tasks.c ****                 {
 5773              		.loc 1 5074 19 view .LVU1619
 5774 0138 9A42     		cmp	r2, r3
 5775 013a CFD9     		bls	.L419
5078:bsp/middlewares/freertos/source/tasks.c ****                     {
 5776              		.loc 1 5078 21 is_stmt 1 view .LVU1620
5078:bsp/middlewares/freertos/source/tasks.c ****                     {
 5777              		.loc 1 5078 23 is_stmt 0 view .LVU1621
 5778 013c 079B     		ldr	r3, [sp, #28]
 5779 013e 13B1     		cbz	r3, .L424
5080:bsp/middlewares/freertos/source/tasks.c ****                     }
 5780              		.loc 1 5080 25 is_stmt 1 view .LVU1622
5080:bsp/middlewares/freertos/source/tasks.c ****                     }
 5781              		.loc 1 5080 52 is_stmt 0 view .LVU1623
 5782 0140 0123     		movs	r3, #1
 5783 0142 079A     		ldr	r2, [sp, #28]
 5784 0144 1360     		str	r3, [r2]
 5785              	.L424:
5086:bsp/middlewares/freertos/source/tasks.c ****                 }
 5786              		.loc 1 5086 21 is_stmt 1 view .LVU1624
5086:bsp/middlewares/freertos/source/tasks.c ****                 }
 5787              		.loc 1 5086 35 is_stmt 0 view .LVU1625
 5788 0146 0A4B     		ldr	r3, .L432+20
 5789 0148 0122     		movs	r2, #1
 5790 014a 1A60     		str	r2, [r3]
 5791 014c C6E7     		b	.L419
 5792              	.LVL419:
 5793              	.L422:
5071:bsp/middlewares/freertos/source/tasks.c ****                 }
 5794              		.loc 1 5071 21 is_stmt 1 view .LVU1626
 5795 014e 07F11801 		add	r1, r7, #24
 5796 0152 0848     		ldr	r0, .L432+24
 5797 0154 FFF7FEFF 		bl	vListInsertEnd
 5798              	.LVL420:
5071:bsp/middlewares/freertos/source/tasks.c ****                 }
 5799              		.loc 1 5071 21 is_stmt 0 view .LVU1627
 5800 0158 EAE7     		b	.L423
 5801              	.L433:
 5802 015a 00BF     		.align	2
 5803              	.L432:
 5804 015c 00000000 		.word	.LANCHOR15
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 227


 5805 0160 00000000 		.word	.LANCHOR16
 5806 0164 00000000 		.word	.LANCHOR13
 5807 0168 00000000 		.word	.LANCHOR4
 5808 016c 00000000 		.word	.LANCHOR10
 5809 0170 00000000 		.word	.LANCHOR17
 5810 0174 00000000 		.word	.LANCHOR1
 5811              		.cfi_endproc
 5812              	.LFE47:
 5814              		.section	.text.vTaskGenericNotifyGiveFromISR,"ax",%progbits
 5815              		.align	1
 5816              		.global	vTaskGenericNotifyGiveFromISR
 5817              		.syntax unified
 5818              		.thumb
 5819              		.thumb_func
 5821              	vTaskGenericNotifyGiveFromISR:
 5822              	.LVL421:
 5823              	.LFB48:
5107:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 5824              		.loc 1 5107 5 is_stmt 1 view -0
 5825              		.cfi_startproc
 5826              		@ args = 0, pretend = 0, frame = 0
 5827              		@ frame_needed = 0, uses_anonymous_args = 0
5107:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 5828              		.loc 1 5107 5 is_stmt 0 view .LVU1629
 5829 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5830              	.LCFI48:
 5831              		.cfi_def_cfa_offset 24
 5832              		.cfi_offset 3, -24
 5833              		.cfi_offset 4, -20
 5834              		.cfi_offset 5, -16
 5835              		.cfi_offset 6, -12
 5836              		.cfi_offset 7, -8
 5837              		.cfi_offset 14, -4
5108:bsp/middlewares/freertos/source/tasks.c ****         uint8_t ucOriginalNotifyState;
 5838              		.loc 1 5108 9 is_stmt 1 view .LVU1630
5109:bsp/middlewares/freertos/source/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 5839              		.loc 1 5109 9 view .LVU1631
5110:bsp/middlewares/freertos/source/tasks.c **** 
 5840              		.loc 1 5110 9 view .LVU1632
5112:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5841              		.loc 1 5112 9 view .LVU1633
 5842 0002 60B1     		cbz	r0, .L446
 5843 0004 0C46     		mov	r4, r1
 5844 0006 1546     		mov	r5, r2
 5845 0008 0646     		mov	r6, r0
5112:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5846              		.loc 1 5112 38 discriminator 2 view .LVU1634
5113:bsp/middlewares/freertos/source/tasks.c **** 
 5847              		.loc 1 5113 9 discriminator 2 view .LVU1635
 5848 000a 89B1     		cbz	r1, .L437
5113:bsp/middlewares/freertos/source/tasks.c **** 
 5849              		.loc 1 5113 9 view .LVU1636
 5850              	.LBB223:
 5851              	.LBI223:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5852              		.loc 2 193 34 view .LVU1637
 5853              	.LBB224:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 228


 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5854              		.loc 2 195 9 view .LVU1638
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5855              		.loc 2 197 9 view .LVU1639
 5856              		.syntax unified
 5857              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5858 000c 4FF01003 			mov r3, #16												
 5859 0010 83F31188 		msr basepri, r3											
 5860 0014 BFF36F8F 		isb														
 5861 0018 BFF34F8F 		dsb														
 5862              	
 5863              	@ 0 "" 2
 5864              	.LVL422:
 5865              		.thumb
 5866              		.syntax unified
 5867              	.L438:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5868              		.loc 2 197 9 is_stmt 0 view .LVU1640
 5869              	.LBE224:
 5870              	.LBE223:
5113:bsp/middlewares/freertos/source/tasks.c **** 
 5871              		.loc 1 5113 9 is_stmt 1 discriminator 2 view .LVU1641
5113:bsp/middlewares/freertos/source/tasks.c **** 
 5872              		.loc 1 5113 9 discriminator 2 view .LVU1642
5113:bsp/middlewares/freertos/source/tasks.c **** 
 5873              		.loc 1 5113 9 discriminator 2 view .LVU1643
 5874 001c FEE7     		b	.L438
 5875              	.L446:
5112:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5876              		.loc 1 5112 9 view .LVU1644
 5877              	.LBB225:
 5878              	.LBI225:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5879              		.loc 2 193 34 view .LVU1645
 5880              	.LBB226:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5881              		.loc 2 195 9 view .LVU1646
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5882              		.loc 2 197 9 view .LVU1647
 5883              		.syntax unified
 5884              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5885 001e 4FF01003 			mov r3, #16												
 5886 0022 83F31188 		msr basepri, r3											
 5887 0026 BFF36F8F 		isb														
 5888 002a BFF34F8F 		dsb														
 5889              	
 5890              	@ 0 "" 2
 5891              	.LVL423:
 5892              		.thumb
 5893              		.syntax unified
 5894              	.L436:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5895              		.loc 2 197 9 is_stmt 0 view .LVU1648
 5896              	.LBE226:
 5897              	.LBE225:
5112:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5898              		.loc 1 5112 9 is_stmt 1 discriminator 1 view .LVU1649
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 229


5112:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5899              		.loc 1 5112 9 discriminator 1 view .LVU1650
5112:bsp/middlewares/freertos/source/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 5900              		.loc 1 5112 9 discriminator 1 view .LVU1651
 5901 002e FEE7     		b	.L436
 5902              	.L437:
5113:bsp/middlewares/freertos/source/tasks.c **** 
 5903              		.loc 1 5113 80 discriminator 2 view .LVU1652
5131:bsp/middlewares/freertos/source/tasks.c **** 
 5904              		.loc 1 5131 9 discriminator 2 view .LVU1653
 5905 0030 FFF7FEFF 		bl	vPortValidateInterruptPriority
 5906              	.LVL424:
5133:bsp/middlewares/freertos/source/tasks.c **** 
 5907              		.loc 1 5133 9 discriminator 2 view .LVU1654
5135:bsp/middlewares/freertos/source/tasks.c ****         {
 5908              		.loc 1 5135 9 discriminator 2 view .LVU1655
 5909              	.LBB227:
 5910              	.LBI227:
 209:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5911              		.loc 2 209 38 discriminator 2 view .LVU1656
 5912              	.LBB228:
 211:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5913              		.loc 2 211 9 discriminator 2 view .LVU1657
 213:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5914              		.loc 2 213 9 discriminator 2 view .LVU1658
 5915              		.syntax unified
 5916              	@ 213 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5917 0034 EFF31187 			mrs r7, basepri											
 5918 0038 4FF01003 		mov r3, #16												
 5919 003c 83F31188 		msr basepri, r3											
 5920 0040 BFF36F8F 		isb														
 5921 0044 BFF34F8F 		dsb														
 5922              	
 5923              	@ 0 "" 2
 5924              	.LVL425:
 225:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 5925              		.loc 2 225 9 discriminator 2 view .LVU1659
 225:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     }
 5926              		.loc 2 225 9 is_stmt 0 discriminator 2 view .LVU1660
 5927              		.thumb
 5928              		.syntax unified
 5929              	.LBE228:
 5930              	.LBE227:
5137:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 5931              		.loc 1 5137 13 is_stmt 1 discriminator 2 view .LVU1661
5137:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 5932              		.loc 1 5137 35 is_stmt 0 discriminator 2 view .LVU1662
 5933 0048 3319     		adds	r3, r6, r4
 5934 004a 93F84820 		ldrb	r2, [r3, #72]	@ zero_extendqisi2
 5935 004e D2B2     		uxtb	r2, r2
 5936              	.LVL426:
5138:bsp/middlewares/freertos/source/tasks.c **** 
 5937              		.loc 1 5138 13 is_stmt 1 discriminator 2 view .LVU1663
5138:bsp/middlewares/freertos/source/tasks.c **** 
 5938              		.loc 1 5138 53 is_stmt 0 discriminator 2 view .LVU1664
 5939 0050 0221     		movs	r1, #2
 5940 0052 83F84810 		strb	r1, [r3, #72]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 230


5142:bsp/middlewares/freertos/source/tasks.c **** 
 5941              		.loc 1 5142 13 is_stmt 1 discriminator 2 view .LVU1665
5142:bsp/middlewares/freertos/source/tasks.c **** 
 5942              		.loc 1 5142 37 is_stmt 0 discriminator 2 view .LVU1666
 5943 0056 04F11003 		add	r3, r4, #16
 5944 005a 06EB8303 		add	r3, r6, r3, lsl #2
 5945 005e 5968     		ldr	r1, [r3, #4]
5142:bsp/middlewares/freertos/source/tasks.c **** 
 5946              		.loc 1 5142 58 discriminator 2 view .LVU1667
 5947 0060 0131     		adds	r1, r1, #1
 5948 0062 5960     		str	r1, [r3, #4]
5144:bsp/middlewares/freertos/source/tasks.c **** 
 5949              		.loc 1 5144 62 is_stmt 1 discriminator 2 view .LVU1668
5148:bsp/middlewares/freertos/source/tasks.c ****             {
 5950              		.loc 1 5148 13 discriminator 2 view .LVU1669
5148:bsp/middlewares/freertos/source/tasks.c ****             {
 5951              		.loc 1 5148 15 is_stmt 0 discriminator 2 view .LVU1670
 5952 0064 012A     		cmp	r2, #1
 5953 0066 02D0     		beq	.L447
 5954              	.LVL427:
 5955              	.L439:
5181:bsp/middlewares/freertos/source/tasks.c ****                 }
 5956              		.loc 1 5181 45 is_stmt 1 view .LVU1671
5185:bsp/middlewares/freertos/source/tasks.c ****     }
 5957              		.loc 1 5185 9 view .LVU1672
 5958              	.LBB229:
 5959              	.LBI229:
 229:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5960              		.loc 2 229 34 view .LVU1673
 5961              	.LBB230:
 5962              		.loc 2 231 9 view .LVU1674
 5963              		.syntax unified
 5964              	@ 231 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5965 0068 87F31188 			msr basepri, r7	
 5966              	@ 0 "" 2
 5967              	.LVL428:
 5968              		.loc 2 231 9 is_stmt 0 view .LVU1675
 5969              		.thumb
 5970              		.syntax unified
 5971              	.LBE230:
 5972              	.LBE229:
5186:bsp/middlewares/freertos/source/tasks.c **** 
 5973              		.loc 1 5186 5 view .LVU1676
 5974 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5975              	.LVL429:
 5976              	.L447:
5151:bsp/middlewares/freertos/source/tasks.c **** 
 5977              		.loc 1 5151 17 is_stmt 1 view .LVU1677
 5978 006e B36A     		ldr	r3, [r6, #40]
 5979 0070 43B1     		cbz	r3, .L440
5151:bsp/middlewares/freertos/source/tasks.c **** 
 5980              		.loc 1 5151 17 view .LVU1678
 5981              	.LBB231:
 5982              	.LBI231:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5983              		.loc 2 193 34 view .LVU1679
 5984              	.LBB232:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 231


 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5985              		.loc 2 195 9 view .LVU1680
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5986              		.loc 2 197 9 view .LVU1681
 5987              		.syntax unified
 5988              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5989 0072 4FF01003 			mov r3, #16												
 5990 0076 83F31188 		msr basepri, r3											
 5991 007a BFF36F8F 		isb														
 5992 007e BFF34F8F 		dsb														
 5993              	
 5994              	@ 0 "" 2
 5995              	.LVL430:
 5996              		.thumb
 5997              		.syntax unified
 5998              	.L441:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5999              		.loc 2 197 9 is_stmt 0 view .LVU1682
 6000              	.LBE232:
 6001              	.LBE231:
5151:bsp/middlewares/freertos/source/tasks.c **** 
 6002              		.loc 1 5151 17 is_stmt 1 discriminator 3 view .LVU1683
5151:bsp/middlewares/freertos/source/tasks.c **** 
 6003              		.loc 1 5151 17 discriminator 3 view .LVU1684
5151:bsp/middlewares/freertos/source/tasks.c **** 
 6004              		.loc 1 5151 17 discriminator 3 view .LVU1685
 6005 0082 FEE7     		b	.L441
 6006              	.L440:
5151:bsp/middlewares/freertos/source/tasks.c **** 
 6007              		.loc 1 5151 94 discriminator 2 view .LVU1686
5153:bsp/middlewares/freertos/source/tasks.c ****                 {
 6008              		.loc 1 5153 17 discriminator 2 view .LVU1687
5153:bsp/middlewares/freertos/source/tasks.c ****                 {
 6009              		.loc 1 5153 42 is_stmt 0 discriminator 2 view .LVU1688
 6010 0084 144B     		ldr	r3, .L448
 6011 0086 1B68     		ldr	r3, [r3]
5153:bsp/middlewares/freertos/source/tasks.c ****                 {
 6012              		.loc 1 5153 19 discriminator 2 view .LVU1689
 6013 0088 FBB9     		cbnz	r3, .L442
5155:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6014              		.loc 1 5155 21 is_stmt 1 view .LVU1690
5155:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6015              		.loc 1 5155 30 is_stmt 0 view .LVU1691
 6016 008a 341D     		adds	r4, r6, #4
 6017              	.LVL431:
5155:bsp/middlewares/freertos/source/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6018              		.loc 1 5155 30 view .LVU1692
 6019 008c 2046     		mov	r0, r4
 6020 008e FFF7FEFF 		bl	uxListRemove
 6021              	.LVL432:
5156:bsp/middlewares/freertos/source/tasks.c ****                 }
 6022              		.loc 1 5156 21 is_stmt 1 view .LVU1693
5156:bsp/middlewares/freertos/source/tasks.c ****                 }
 6023              		.loc 1 5156 21 view .LVU1694
 6024 0092 F06A     		ldr	r0, [r6, #44]
 6025 0094 0123     		movs	r3, #1
 6026 0096 8340     		lsls	r3, r3, r0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 232


 6027 0098 104A     		ldr	r2, .L448+4
 6028 009a 1168     		ldr	r1, [r2]
 6029 009c 0B43     		orrs	r3, r3, r1
 6030 009e 1360     		str	r3, [r2]
5156:bsp/middlewares/freertos/source/tasks.c ****                 }
 6031              		.loc 1 5156 21 view .LVU1695
 6032 00a0 00EB8000 		add	r0, r0, r0, lsl #2
 6033 00a4 2146     		mov	r1, r4
 6034 00a6 0E4B     		ldr	r3, .L448+8
 6035 00a8 03EB8000 		add	r0, r3, r0, lsl #2
 6036 00ac FFF7FEFF 		bl	vListInsertEnd
 6037              	.LVL433:
5156:bsp/middlewares/freertos/source/tasks.c ****                 }
 6038              		.loc 1 5156 51 view .LVU1696
 6039              	.L443:
5165:bsp/middlewares/freertos/source/tasks.c ****                 {
 6040              		.loc 1 5165 17 view .LVU1697
5165:bsp/middlewares/freertos/source/tasks.c ****                 {
 6041              		.loc 1 5165 26 is_stmt 0 view .LVU1698
 6042 00b0 F26A     		ldr	r2, [r6, #44]
5165:bsp/middlewares/freertos/source/tasks.c ****                 {
 6043              		.loc 1 5165 53 view .LVU1699
 6044 00b2 0C4B     		ldr	r3, .L448+12
 6045 00b4 1B68     		ldr	r3, [r3]
 6046 00b6 DB6A     		ldr	r3, [r3, #44]
5165:bsp/middlewares/freertos/source/tasks.c ****                 {
 6047              		.loc 1 5165 19 view .LVU1700
 6048 00b8 9A42     		cmp	r2, r3
 6049 00ba D5D9     		bls	.L439
5169:bsp/middlewares/freertos/source/tasks.c ****                     {
 6050              		.loc 1 5169 21 is_stmt 1 view .LVU1701
5169:bsp/middlewares/freertos/source/tasks.c ****                     {
 6051              		.loc 1 5169 23 is_stmt 0 view .LVU1702
 6052 00bc 0DB1     		cbz	r5, .L444
5171:bsp/middlewares/freertos/source/tasks.c ****                     }
 6053              		.loc 1 5171 25 is_stmt 1 view .LVU1703
5171:bsp/middlewares/freertos/source/tasks.c ****                     }
 6054              		.loc 1 5171 52 is_stmt 0 view .LVU1704
 6055 00be 0123     		movs	r3, #1
 6056 00c0 2B60     		str	r3, [r5]
 6057              	.L444:
5177:bsp/middlewares/freertos/source/tasks.c ****                 }
 6058              		.loc 1 5177 21 is_stmt 1 view .LVU1705
5177:bsp/middlewares/freertos/source/tasks.c ****                 }
 6059              		.loc 1 5177 35 is_stmt 0 view .LVU1706
 6060 00c2 094B     		ldr	r3, .L448+16
 6061 00c4 0122     		movs	r2, #1
 6062 00c6 1A60     		str	r2, [r3]
 6063 00c8 CEE7     		b	.L439
 6064              	.LVL434:
 6065              	.L442:
5162:bsp/middlewares/freertos/source/tasks.c ****                 }
 6066              		.loc 1 5162 21 is_stmt 1 view .LVU1707
 6067 00ca 06F11801 		add	r1, r6, #24
 6068 00ce 0748     		ldr	r0, .L448+20
 6069 00d0 FFF7FEFF 		bl	vListInsertEnd
 6070              	.LVL435:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 233


5162:bsp/middlewares/freertos/source/tasks.c ****                 }
 6071              		.loc 1 5162 21 is_stmt 0 view .LVU1708
 6072 00d4 ECE7     		b	.L443
 6073              	.L449:
 6074 00d6 00BF     		.align	2
 6075              	.L448:
 6076 00d8 00000000 		.word	.LANCHOR16
 6077 00dc 00000000 		.word	.LANCHOR13
 6078 00e0 00000000 		.word	.LANCHOR4
 6079 00e4 00000000 		.word	.LANCHOR10
 6080 00e8 00000000 		.word	.LANCHOR17
 6081 00ec 00000000 		.word	.LANCHOR1
 6082              		.cfi_endproc
 6083              	.LFE48:
 6085              		.section	.text.xTaskGenericNotifyStateClear,"ax",%progbits
 6086              		.align	1
 6087              		.global	xTaskGenericNotifyStateClear
 6088              		.syntax unified
 6089              		.thumb
 6090              		.thumb_func
 6092              	xTaskGenericNotifyStateClear:
 6093              	.LVL436:
 6094              	.LFB49:
5195:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 6095              		.loc 1 5195 5 is_stmt 1 view -0
 6096              		.cfi_startproc
 6097              		@ args = 0, pretend = 0, frame = 0
 6098              		@ frame_needed = 0, uses_anonymous_args = 0
5195:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 6099              		.loc 1 5195 5 is_stmt 0 view .LVU1710
 6100 0000 38B5     		push	{r3, r4, r5, lr}
 6101              	.LCFI49:
 6102              		.cfi_def_cfa_offset 16
 6103              		.cfi_offset 3, -16
 6104              		.cfi_offset 4, -12
 6105              		.cfi_offset 5, -8
 6106              		.cfi_offset 14, -4
5196:bsp/middlewares/freertos/source/tasks.c ****         BaseType_t xReturn;
 6107              		.loc 1 5196 9 is_stmt 1 view .LVU1711
5197:bsp/middlewares/freertos/source/tasks.c **** 
 6108              		.loc 1 5197 9 view .LVU1712
5199:bsp/middlewares/freertos/source/tasks.c **** 
 6109              		.loc 1 5199 9 view .LVU1713
 6110 0002 41B1     		cbz	r1, .L451
5199:bsp/middlewares/freertos/source/tasks.c **** 
 6111              		.loc 1 5199 9 view .LVU1714
 6112              	.LBB233:
 6113              	.LBI233:
 193:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6114              		.loc 2 193 34 view .LVU1715
 6115              	.LBB234:
 195:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6116              		.loc 2 195 9 view .LVU1716
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6117              		.loc 2 197 9 view .LVU1717
 6118              		.syntax unified
 6119              	@ 197 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 234


 6120 0004 4FF01003 			mov r3, #16												
 6121 0008 83F31188 		msr basepri, r3											
 6122 000c BFF36F8F 		isb														
 6123 0010 BFF34F8F 		dsb														
 6124              	
 6125              	@ 0 "" 2
 6126              	.LVL437:
 6127              		.thumb
 6128              		.syntax unified
 6129              	.L452:
 197:bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6130              		.loc 2 197 9 is_stmt 0 view .LVU1718
 6131              	.LBE234:
 6132              	.LBE233:
5199:bsp/middlewares/freertos/source/tasks.c **** 
 6133              		.loc 1 5199 9 is_stmt 1 discriminator 1 view .LVU1719
5199:bsp/middlewares/freertos/source/tasks.c **** 
 6134              		.loc 1 5199 9 discriminator 1 view .LVU1720
5199:bsp/middlewares/freertos/source/tasks.c **** 
 6135              		.loc 1 5199 9 discriminator 1 view .LVU1721
 6136 0014 FEE7     		b	.L452
 6137              	.L451:
 6138 0016 0446     		mov	r4, r0
 6139 0018 0D46     		mov	r5, r1
5199:bsp/middlewares/freertos/source/tasks.c **** 
 6140              		.loc 1 5199 79 discriminator 2 view .LVU1722
5203:bsp/middlewares/freertos/source/tasks.c **** 
 6141              		.loc 1 5203 9 discriminator 2 view .LVU1723
5203:bsp/middlewares/freertos/source/tasks.c **** 
 6142              		.loc 1 5203 17 is_stmt 0 discriminator 2 view .LVU1724
 6143 001a 60B1     		cbz	r0, .L457
 6144              	.LVL438:
 6145              	.L453:
5205:bsp/middlewares/freertos/source/tasks.c ****         {
 6146              		.loc 1 5205 9 is_stmt 1 discriminator 4 view .LVU1725
 6147 001c FFF7FEFF 		bl	vPortEnterCritical
 6148              	.LVL439:
5207:bsp/middlewares/freertos/source/tasks.c ****             {
 6149              		.loc 1 5207 13 discriminator 4 view .LVU1726
5207:bsp/middlewares/freertos/source/tasks.c ****             {
 6150              		.loc 1 5207 37 is_stmt 0 discriminator 4 view .LVU1727
 6151 0020 6319     		adds	r3, r4, r5
 6152 0022 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 6153 0026 DBB2     		uxtb	r3, r3
5207:bsp/middlewares/freertos/source/tasks.c ****             {
 6154              		.loc 1 5207 15 discriminator 4 view .LVU1728
 6155 0028 022B     		cmp	r3, #2
 6156 002a 07D0     		beq	.L458
5214:bsp/middlewares/freertos/source/tasks.c ****             }
 6157              		.loc 1 5214 25 view .LVU1729
 6158 002c 0024     		movs	r4, #0
 6159              	.LVL440:
 6160              	.L454:
5217:bsp/middlewares/freertos/source/tasks.c **** 
 6161              		.loc 1 5217 9 is_stmt 1 view .LVU1730
 6162 002e FFF7FEFF 		bl	vPortExitCritical
 6163              	.LVL441:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 235


5219:bsp/middlewares/freertos/source/tasks.c ****     }
 6164              		.loc 1 5219 9 view .LVU1731
5220:bsp/middlewares/freertos/source/tasks.c **** 
 6165              		.loc 1 5220 5 is_stmt 0 view .LVU1732
 6166 0032 2046     		mov	r0, r4
 6167 0034 38BD     		pop	{r3, r4, r5, pc}
 6168              	.LVL442:
 6169              	.L457:
5203:bsp/middlewares/freertos/source/tasks.c **** 
 6170              		.loc 1 5203 17 discriminator 1 view .LVU1733
 6171 0036 044B     		ldr	r3, .L459
 6172 0038 1C68     		ldr	r4, [r3]
 6173              	.LVL443:
5203:bsp/middlewares/freertos/source/tasks.c **** 
 6174              		.loc 1 5203 17 discriminator 1 view .LVU1734
 6175 003a EFE7     		b	.L453
 6176              	.LVL444:
 6177              	.L458:
5209:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdPASS;
 6178              		.loc 1 5209 17 is_stmt 1 view .LVU1735
5209:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdPASS;
 6179              		.loc 1 5209 56 is_stmt 0 view .LVU1736
 6180 003c 2C44     		add	r4, r4, r5
 6181              	.LVL445:
5209:bsp/middlewares/freertos/source/tasks.c ****                 xReturn = pdPASS;
 6182              		.loc 1 5209 56 view .LVU1737
 6183 003e 0023     		movs	r3, #0
 6184 0040 84F84830 		strb	r3, [r4, #72]
5210:bsp/middlewares/freertos/source/tasks.c ****             }
 6185              		.loc 1 5210 17 is_stmt 1 view .LVU1738
 6186              	.LVL446:
5210:bsp/middlewares/freertos/source/tasks.c ****             }
 6187              		.loc 1 5210 25 is_stmt 0 view .LVU1739
 6188 0044 0124     		movs	r4, #1
 6189 0046 F2E7     		b	.L454
 6190              	.L460:
 6191              		.align	2
 6192              	.L459:
 6193 0048 00000000 		.word	.LANCHOR10
 6194              		.cfi_endproc
 6195              	.LFE49:
 6197              		.section	.text.ulTaskGenericNotifyValueClear,"ax",%progbits
 6198              		.align	1
 6199              		.global	ulTaskGenericNotifyValueClear
 6200              		.syntax unified
 6201              		.thumb
 6202              		.thumb_func
 6204              	ulTaskGenericNotifyValueClear:
 6205              	.LVL447:
 6206              	.LFB50:
5230:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 6207              		.loc 1 5230 5 is_stmt 1 view -0
 6208              		.cfi_startproc
 6209              		@ args = 0, pretend = 0, frame = 0
 6210              		@ frame_needed = 0, uses_anonymous_args = 0
5230:bsp/middlewares/freertos/source/tasks.c ****         TCB_t * pxTCB;
 6211              		.loc 1 5230 5 is_stmt 0 view .LVU1741
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 236


 6212 0000 70B5     		push	{r4, r5, r6, lr}
 6213              	.LCFI50:
 6214              		.cfi_def_cfa_offset 16
 6215              		.cfi_offset 4, -16
 6216              		.cfi_offset 5, -12
 6217              		.cfi_offset 6, -8
 6218              		.cfi_offset 14, -4
 6219 0002 0D46     		mov	r5, r1
 6220 0004 1646     		mov	r6, r2
5231:bsp/middlewares/freertos/source/tasks.c ****         uint32_t ulReturn;
 6221              		.loc 1 5231 9 is_stmt 1 view .LVU1742
5232:bsp/middlewares/freertos/source/tasks.c **** 
 6222              		.loc 1 5232 9 view .LVU1743
5236:bsp/middlewares/freertos/source/tasks.c **** 
 6223              		.loc 1 5236 9 view .LVU1744
5236:bsp/middlewares/freertos/source/tasks.c **** 
 6224              		.loc 1 5236 17 is_stmt 0 view .LVU1745
 6225 0006 0446     		mov	r4, r0
 6226 0008 70B1     		cbz	r0, .L464
 6227              	.LVL448:
 6228              	.L462:
5238:bsp/middlewares/freertos/source/tasks.c ****         {
 6229              		.loc 1 5238 9 is_stmt 1 discriminator 4 view .LVU1746
 6230 000a FFF7FEFF 		bl	vPortEnterCritical
 6231              	.LVL449:
5242:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 6232              		.loc 1 5242 13 discriminator 4 view .LVU1747
5242:bsp/middlewares/freertos/source/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 6233              		.loc 1 5242 22 is_stmt 0 discriminator 4 view .LVU1748
 6234 000e 05F11001 		add	r1, r5, #16
 6235 0012 04EB8101 		add	r1, r4, r1, lsl #2
 6236 0016 4C68     		ldr	r4, [r1, #4]
 6237              	.LVL450:
5243:bsp/middlewares/freertos/source/tasks.c ****         }
 6238              		.loc 1 5243 13 is_stmt 1 discriminator 4 view .LVU1749
5243:bsp/middlewares/freertos/source/tasks.c ****         }
 6239              		.loc 1 5243 54 is_stmt 0 discriminator 4 view .LVU1750
 6240 0018 4B68     		ldr	r3, [r1, #4]
 6241 001a 23EA0603 		bic	r3, r3, r6
 6242 001e 4B60     		str	r3, [r1, #4]
5245:bsp/middlewares/freertos/source/tasks.c **** 
 6243              		.loc 1 5245 9 is_stmt 1 discriminator 4 view .LVU1751
 6244 0020 FFF7FEFF 		bl	vPortExitCritical
 6245              	.LVL451:
5247:bsp/middlewares/freertos/source/tasks.c ****     }
 6246              		.loc 1 5247 9 discriminator 4 view .LVU1752
5248:bsp/middlewares/freertos/source/tasks.c **** 
 6247              		.loc 1 5248 5 is_stmt 0 discriminator 4 view .LVU1753
 6248 0024 2046     		mov	r0, r4
 6249 0026 70BD     		pop	{r4, r5, r6, pc}
 6250              	.LVL452:
 6251              	.L464:
5236:bsp/middlewares/freertos/source/tasks.c **** 
 6252              		.loc 1 5236 17 discriminator 1 view .LVU1754
 6253 0028 014B     		ldr	r3, .L465
 6254 002a 1C68     		ldr	r4, [r3]
 6255              	.LVL453:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 237


5236:bsp/middlewares/freertos/source/tasks.c **** 
 6256              		.loc 1 5236 17 discriminator 1 view .LVU1755
 6257 002c EDE7     		b	.L462
 6258              	.L466:
 6259 002e 00BF     		.align	2
 6260              	.L465:
 6261 0030 00000000 		.word	.LANCHOR10
 6262              		.cfi_endproc
 6263              	.LFE50:
 6265              		.global	uxTopUsedPriority
 6266              		.global	pxCurrentTCB
 6267              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6268              		.align	2
 6269              		.set	.LANCHOR10,. + 0
 6272              	pxCurrentTCB:
 6273 0000 00000000 		.space	4
 6274              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6275              		.align	2
 6276              		.set	.LANCHOR2,. + 0
 6279              	pxDelayedTaskList:
 6280 0000 00000000 		.space	4
 6281              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6282              		.align	2
 6283              		.set	.LANCHOR8,. + 0
 6286              	pxOverflowDelayedTaskList:
 6287 0000 00000000 		.space	4
 6288              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6289              		.align	2
 6290              		.set	.LANCHOR4,. + 0
 6293              	pxReadyTasksLists:
 6294 0000 00000000 		.space	640
 6294      00000000 
 6294      00000000 
 6294      00000000 
 6294      00000000 
 6295              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6296              		.align	2
 6297              		.set	.LANCHOR9,. + 0
 6300              	uxCurrentNumberOfTasks:
 6301 0000 00000000 		.space	4
 6302              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6303              		.align	2
 6304              		.set	.LANCHOR14,. + 0
 6307              	uxDeletedTasksWaitingCleanUp:
 6308 0000 00000000 		.space	4
 6309              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6310              		.align	2
 6311              		.set	.LANCHOR16,. + 0
 6314              	uxSchedulerSuspended:
 6315 0000 00000000 		.space	4
 6316              		.section	.bss.uxTaskNumber,"aw",%nobits
 6317              		.align	2
 6318              		.set	.LANCHOR12,. + 0
 6321              	uxTaskNumber:
 6322 0000 00000000 		.space	4
 6323              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6324              		.align	2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 238


 6325              		.set	.LANCHOR13,. + 0
 6328              	uxTopReadyPriority:
 6329 0000 00000000 		.space	4
 6330              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6331              		.align	2
 6332              		.set	.LANCHOR5,. + 0
 6335              	xDelayedTaskList1:
 6336 0000 00000000 		.space	20
 6336      00000000 
 6336      00000000 
 6336      00000000 
 6336      00000000 
 6337              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6338              		.align	2
 6339              		.set	.LANCHOR6,. + 0
 6342              	xDelayedTaskList2:
 6343 0000 00000000 		.space	20
 6343      00000000 
 6343      00000000 
 6343      00000000 
 6343      00000000 
 6344              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6345              		.align	2
 6346              		.set	.LANCHOR18,. + 0
 6349              	xIdleTaskHandle:
 6350 0000 00000000 		.space	4
 6351              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6352              		.align	2
 6353              		.set	.LANCHOR3,. + 0
 6356              	xNextTaskUnblockTime:
 6357 0000 00000000 		.space	4
 6358              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6359              		.align	2
 6360              		.set	.LANCHOR20,. + 0
 6363              	xNumOfOverflows:
 6364 0000 00000000 		.space	4
 6365              		.section	.bss.xPendedTicks,"aw",%nobits
 6366              		.align	2
 6367              		.set	.LANCHOR21,. + 0
 6370              	xPendedTicks:
 6371 0000 00000000 		.space	4
 6372              		.section	.bss.xPendingReadyList,"aw",%nobits
 6373              		.align	2
 6374              		.set	.LANCHOR1,. + 0
 6377              	xPendingReadyList:
 6378 0000 00000000 		.space	20
 6378      00000000 
 6378      00000000 
 6378      00000000 
 6378      00000000 
 6379              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6380              		.align	2
 6381              		.set	.LANCHOR11,. + 0
 6384              	xSchedulerRunning:
 6385 0000 00000000 		.space	4
 6386              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6387              		.align	2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 239


 6388              		.set	.LANCHOR0,. + 0
 6391              	xSuspendedTaskList:
 6392 0000 00000000 		.space	20
 6392      00000000 
 6392      00000000 
 6392      00000000 
 6392      00000000 
 6393              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6394              		.align	2
 6395              		.set	.LANCHOR7,. + 0
 6398              	xTasksWaitingTermination:
 6399 0000 00000000 		.space	20
 6399      00000000 
 6399      00000000 
 6399      00000000 
 6399      00000000 
 6400              		.section	.bss.xTickCount,"aw",%nobits
 6401              		.align	2
 6402              		.set	.LANCHOR15,. + 0
 6405              	xTickCount:
 6406 0000 00000000 		.space	4
 6407              		.section	.bss.xYieldPending,"aw",%nobits
 6408              		.align	2
 6409              		.set	.LANCHOR17,. + 0
 6412              	xYieldPending:
 6413 0000 00000000 		.space	4
 6414              		.section	.data.uxTopUsedPriority,"aw"
 6415              		.align	2
 6416              		.set	.LANCHOR19,. + 0
 6419              	uxTopUsedPriority:
 6420 0000 1F000000 		.word	31
 6421              		.text
 6422              	.Letext0:
 6423              		.file 3 "c:\\at32ide\\platform\\tools\\gcc-arm-none-eabi-10.3-2021.10\\lib\\gcc\\arm-none-eabi\\10
 6424              		.file 4 "c:\\at32ide\\platform\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\mac
 6425              		.file 5 "c:\\at32ide\\platform\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys
 6426              		.file 6 "bsp/middlewares/freertos/source/include/projdefs.h"
 6427              		.file 7 "bsp/middlewares/freertos/source/include/list.h"
 6428              		.file 8 "bsp/middlewares/freertos/source/include/task.h"
 6429              		.file 9 "inc/FreeRTOSConfig.h"
 6430              		.file 10 "bsp/middlewares/freertos/source/include/portable.h"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 240


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:18     .text.prvTaskIsTaskSuspended:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:23     .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:113    .text.prvTaskIsTaskSuspended:00000038 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:119    .text.prvResetNextTaskUnblockTime:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:124    .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:159    .text.prvResetNextTaskUnblockTime:00000020 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:165    .text.prvDeleteTCB:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:170    .text.prvDeleteTCB:00000000 prvDeleteTCB
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:202    .text.prvInitialiseNewTask:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:207    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:358    .text.prvInitialiseTaskLists:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:363    .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:438    .text.prvInitialiseTaskLists:00000048 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:450    .text.prvAddNewTaskToReadyList:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:455    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:591    .text.prvAddNewTaskToReadyList:00000090 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:601    .text.prvCheckTasksWaitingTermination:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:606    .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:683    .text.prvCheckTasksWaitingTermination:00000040 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:690    .text.prvIdleTask:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:695    .text.prvIdleTask:00000000 prvIdleTask
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:744    .text.prvIdleTask:00000024 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:749    .text.prvAddCurrentTaskToDelayedList:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:754    .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:874    .text.prvAddCurrentTaskToDelayedList:0000007c $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:885    .text.xTaskCreate:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:891    .text.xTaskCreate:00000000 xTaskCreate
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1013   .text.vTaskDelete:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1019   .text.vTaskDelete:00000000 vTaskDelete
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1205   .text.vTaskDelete:000000bc $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1218   .text.uxTaskPriorityGet:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1224   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1270   .text.uxTaskPriorityGet:0000001c $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1275   .text.uxTaskPriorityGetFromISR:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1281   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1362   .text.uxTaskPriorityGetFromISR:0000002c $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1367   .text.vTaskPrioritySet:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1373   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1602   .text.vTaskPrioritySet:000000d0 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1609   .text.vTaskResume:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1615   .text.vTaskResume:00000000 vTaskResume
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1746   .text.vTaskResume:0000007c $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1753   .text.xTaskResumeFromISR:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1759   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1936   .text.xTaskResumeFromISR:00000094 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1946   .rodata.vTaskStartScheduler.str1.4:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1950   .text.vTaskStartScheduler:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:1956   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2079   .text.vTaskStartScheduler:00000068 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2090   .text.vTaskEndScheduler:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2096   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2139   .text.vTaskEndScheduler:00000020 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2144   .text.vTaskSuspendAll:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2150   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2169   .text.vTaskSuspendAll:0000000c $d
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 241


C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2174   .text.xTaskGetTickCount:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2180   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2201   .text.xTaskGetTickCount:00000008 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2206   .text.xTaskGetTickCountFromISR:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2212   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2241   .text.xTaskGetTickCountFromISR:0000000c $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2246   .text.uxTaskGetNumberOfTasks:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2252   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2268   .text.uxTaskGetNumberOfTasks:00000008 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2273   .text.pcTaskGetName:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2279   .text.pcTaskGetName:00000000 pcTaskGetName
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2340   .text.pcTaskGetName:00000024 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2345   .text.xTaskIncrementTick:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2351   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2618   .text.xTaskIncrementTick:000000ec $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2633   .text.xTaskResumeAll:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2639   .text.xTaskResumeAll:00000000 xTaskResumeAll
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2875   .text.xTaskResumeAll:000000d8 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2887   .text.xTaskDelayUntil:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:2893   .text.xTaskDelayUntil:00000000 xTaskDelayUntil
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3140   .text.xTaskDelayUntil:000000a8 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3146   .text.vTaskDelay:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3152   .text.vTaskDelay:00000000 vTaskDelay
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3245   .text.vTaskDelay:00000048 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3250   .text.xTaskCatchUpTicks:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3256   .text.xTaskCatchUpTicks:00000000 xTaskCatchUpTicks
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3324   .text.xTaskCatchUpTicks:00000030 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3330   .text.vTaskSwitchContext:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3336   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3478   .text.vTaskSwitchContext:00000084 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3489   .text.vTaskSuspend:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3495   .text.vTaskSuspend:00000000 vTaskSuspend
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3725   .text.vTaskSuspend:000000dc $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3736   .text.vTaskPlaceOnEventList:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3742   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3810   .text.vTaskPlaceOnEventList:0000002c $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3815   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3821   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3938   .text.vTaskPlaceOnUnorderedEventList:00000050 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3944   .text.xTaskRemoveFromEventList:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:3950   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4081   .text.xTaskRemoveFromEventList:00000074 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4091   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4097   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4233   .text.vTaskRemoveFromUnorderedEventList:00000074 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4242   .text.vTaskSetTimeOutState:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4248   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4318   .text.vTaskSetTimeOutState:00000030 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4324   .text.vTaskInternalSetTimeOutState:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4330   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4353   .text.vTaskInternalSetTimeOutState:00000010 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4359   .text.xTaskCheckForTimeOut:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4365   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4558   .text.xTaskCheckForTimeOut:00000080 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4564   .text.vTaskMissedYield:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4570   .text.vTaskMissedYield:00000000 vTaskMissedYield
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4587   .text.vTaskMissedYield:00000008 $d
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 242


C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4592   .text.xTaskGetCurrentTaskHandle:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4598   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4617   .text.xTaskGetCurrentTaskHandle:00000008 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4622   .text.uxTaskResetEventItemValue:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4628   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4655   .text.uxTaskResetEventItemValue:00000014 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4660   .text.ulTaskGenericNotifyTake:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4666   .text.ulTaskGenericNotifyTake:00000000 ulTaskGenericNotifyTake
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4831   .text.ulTaskGenericNotifyTake:000000a8 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4836   .text.xTaskGenericNotifyWait:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:4842   .text.xTaskGenericNotifyWait:00000000 xTaskGenericNotifyWait
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5032   .text.xTaskGenericNotifyWait:000000cc $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5037   .text.xTaskGenericNotify:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5043   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5136   .text.xTaskGenericNotify:0000004c $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5385   .text.xTaskGenericNotify:00000134 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5393   .text.xTaskGenericNotifyFromISR:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5399   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5557   .text.xTaskGenericNotifyFromISR:00000074 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5804   .text.xTaskGenericNotifyFromISR:0000015c $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5815   .text.vTaskGenericNotifyGiveFromISR:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5821   .text.vTaskGenericNotifyGiveFromISR:00000000 vTaskGenericNotifyGiveFromISR
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6076   .text.vTaskGenericNotifyGiveFromISR:000000d8 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6086   .text.xTaskGenericNotifyStateClear:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6092   .text.xTaskGenericNotifyStateClear:00000000 xTaskGenericNotifyStateClear
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6193   .text.xTaskGenericNotifyStateClear:00000048 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6198   .text.ulTaskGenericNotifyValueClear:00000000 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6204   .text.ulTaskGenericNotifyValueClear:00000000 ulTaskGenericNotifyValueClear
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6261   .text.ulTaskGenericNotifyValueClear:00000030 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6419   .data.uxTopUsedPriority:00000000 uxTopUsedPriority
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6272   .bss.pxCurrentTCB:00000000 pxCurrentTCB
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6268   .bss.pxCurrentTCB:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6275   .bss.pxDelayedTaskList:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6279   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6282   .bss.pxOverflowDelayedTaskList:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6286   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6289   .bss.pxReadyTasksLists:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6293   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6296   .bss.uxCurrentNumberOfTasks:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6300   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6303   .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6307   .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6310   .bss.uxSchedulerSuspended:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6314   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6317   .bss.uxTaskNumber:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6321   .bss.uxTaskNumber:00000000 uxTaskNumber
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6324   .bss.uxTopReadyPriority:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6328   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6331   .bss.xDelayedTaskList1:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6335   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6338   .bss.xDelayedTaskList2:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6342   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6345   .bss.xIdleTaskHandle:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6349   .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6352   .bss.xNextTaskUnblockTime:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6356   .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6359   .bss.xNumOfOverflows:00000000 $d
ARM GAS  C:\Users\user\AppData\Local\Temp\ccVFZVdF.s 			page 243


C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6363   .bss.xNumOfOverflows:00000000 xNumOfOverflows
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6366   .bss.xPendedTicks:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6370   .bss.xPendedTicks:00000000 xPendedTicks
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6373   .bss.xPendingReadyList:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6377   .bss.xPendingReadyList:00000000 xPendingReadyList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6380   .bss.xSchedulerRunning:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6384   .bss.xSchedulerRunning:00000000 xSchedulerRunning
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6387   .bss.xSuspendedTaskList:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6391   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6394   .bss.xTasksWaitingTermination:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6398   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6401   .bss.xTickCount:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6405   .bss.xTickCount:00000000 xTickCount
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6408   .bss.xYieldPending:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6412   .bss.xYieldPending:00000000 xYieldPending
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:6415   .data.uxTopUsedPriority:00000000 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5142   .text.xTaskGenericNotify:00000051 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5142   .text.xTaskGenericNotify:00000052 $t
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5562   .text.xTaskGenericNotifyFromISR:00000079 $d
C:\Users\user\AppData\Local\Temp\ccVFZVdF.s:5562   .text.xTaskGenericNotifyFromISR:0000007a $t

UNDEFINED SYMBOLS
vPortFree
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
xPortStartScheduler
vPortEndScheduler
