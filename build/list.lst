ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"list.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.vListInitialise,"ax",%progbits
  18              		.align	1
  19              		.global	vListInitialise
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	vListInitialise:
  25              	.LVL0:
  26              	.LFB5:
  27              		.file 1 "bsp/middlewares/freertos/source/list.c"
   1:bsp/middlewares/freertos/source/list.c **** /*
   2:bsp/middlewares/freertos/source/list.c ****  * FreeRTOS Kernel V10.4.3
   3:bsp/middlewares/freertos/source/list.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:bsp/middlewares/freertos/source/list.c ****  *
   5:bsp/middlewares/freertos/source/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:bsp/middlewares/freertos/source/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:bsp/middlewares/freertos/source/list.c ****  * the Software without restriction, including without limitation the rights to
   8:bsp/middlewares/freertos/source/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:bsp/middlewares/freertos/source/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:bsp/middlewares/freertos/source/list.c ****  * subject to the following conditions:
  11:bsp/middlewares/freertos/source/list.c ****  *
  12:bsp/middlewares/freertos/source/list.c ****  * The above copyright notice and this permission notice shall be included in all
  13:bsp/middlewares/freertos/source/list.c ****  * copies or substantial portions of the Software.
  14:bsp/middlewares/freertos/source/list.c ****  *
  15:bsp/middlewares/freertos/source/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:bsp/middlewares/freertos/source/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:bsp/middlewares/freertos/source/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:bsp/middlewares/freertos/source/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:bsp/middlewares/freertos/source/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:bsp/middlewares/freertos/source/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:bsp/middlewares/freertos/source/list.c ****  *
  22:bsp/middlewares/freertos/source/list.c ****  * https://www.FreeRTOS.org
  23:bsp/middlewares/freertos/source/list.c ****  * https://github.com/FreeRTOS
  24:bsp/middlewares/freertos/source/list.c ****  *
  25:bsp/middlewares/freertos/source/list.c ****  */
  26:bsp/middlewares/freertos/source/list.c **** 
  27:bsp/middlewares/freertos/source/list.c **** 
  28:bsp/middlewares/freertos/source/list.c **** #include <stdlib.h>
  29:bsp/middlewares/freertos/source/list.c **** 
  30:bsp/middlewares/freertos/source/list.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:bsp/middlewares/freertos/source/list.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 2


  32:bsp/middlewares/freertos/source/list.c ****  * task.h is included from an application file. */
  33:bsp/middlewares/freertos/source/list.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:bsp/middlewares/freertos/source/list.c **** 
  35:bsp/middlewares/freertos/source/list.c **** #include "FreeRTOS.h"
  36:bsp/middlewares/freertos/source/list.c **** #include "list.h"
  37:bsp/middlewares/freertos/source/list.c **** 
  38:bsp/middlewares/freertos/source/list.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  39:bsp/middlewares/freertos/source/list.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be
  40:bsp/middlewares/freertos/source/list.c ****  * defined for the header files above, but not in this file, in order to
  41:bsp/middlewares/freertos/source/list.c ****  * generate the correct privileged Vs unprivileged linkage and placement. */
  42:bsp/middlewares/freertos/source/list.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  43:bsp/middlewares/freertos/source/list.c **** 
  44:bsp/middlewares/freertos/source/list.c **** /*-----------------------------------------------------------
  45:bsp/middlewares/freertos/source/list.c **** * PUBLIC LIST API documented in list.h
  46:bsp/middlewares/freertos/source/list.c **** *----------------------------------------------------------*/
  47:bsp/middlewares/freertos/source/list.c **** 
  48:bsp/middlewares/freertos/source/list.c **** void vListInitialise( List_t * const pxList )
  49:bsp/middlewares/freertos/source/list.c **** {
  28              		.loc 1 49 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  50:bsp/middlewares/freertos/source/list.c ****     /* The list structure contains a list item which is used to mark the
  51:bsp/middlewares/freertos/source/list.c ****      * end of the list.  To initialise the list the list end is inserted
  52:bsp/middlewares/freertos/source/list.c ****      * as the only list entry. */
  53:bsp/middlewares/freertos/source/list.c ****     pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini li
  33              		.loc 1 53 5 view .LVU1
  34              		.loc 1 53 40 is_stmt 0 view .LVU2
  35 0000 00F10803 		add	r3, r0, #8
  36              		.loc 1 53 21 view .LVU3
  37 0004 4360     		str	r3, [r0, #4]
  54:bsp/middlewares/freertos/source/list.c **** 
  55:bsp/middlewares/freertos/source/list.c ****     /* The list end value is the highest possible value in the list to
  56:bsp/middlewares/freertos/source/list.c ****      * ensure it remains at the end of the list. */
  57:bsp/middlewares/freertos/source/list.c ****     pxList->xListEnd.xItemValue = portMAX_DELAY;
  38              		.loc 1 57 5 is_stmt 1 view .LVU4
  39              		.loc 1 57 33 is_stmt 0 view .LVU5
  40 0006 4FF0FF32 		mov	r2, #-1
  41 000a 8260     		str	r2, [r0, #8]
  58:bsp/middlewares/freertos/source/list.c **** 
  59:bsp/middlewares/freertos/source/list.c ****     /* The list end next and previous pointers point to itself so we know
  60:bsp/middlewares/freertos/source/list.c ****      * when the list is empty. */
  61:bsp/middlewares/freertos/source/list.c ****     pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087
  42              		.loc 1 61 5 is_stmt 1 view .LVU6
  43              		.loc 1 61 29 is_stmt 0 view .LVU7
  44 000c C360     		str	r3, [r0, #12]
  62:bsp/middlewares/freertos/source/list.c ****     pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087
  45              		.loc 1 62 5 is_stmt 1 view .LVU8
  46              		.loc 1 62 33 is_stmt 0 view .LVU9
  47 000e 0361     		str	r3, [r0, #16]
  63:bsp/middlewares/freertos/source/list.c **** 
  64:bsp/middlewares/freertos/source/list.c ****     pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  48              		.loc 1 64 5 is_stmt 1 view .LVU10
  49              		.loc 1 64 29 is_stmt 0 view .LVU11
  50 0010 0023     		movs	r3, #0
  51 0012 0360     		str	r3, [r0]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 3


  65:bsp/middlewares/freertos/source/list.c **** 
  66:bsp/middlewares/freertos/source/list.c ****     /* Write known values into the list if
  67:bsp/middlewares/freertos/source/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  68:bsp/middlewares/freertos/source/list.c ****     listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  52              		.loc 1 68 51 is_stmt 1 view .LVU12
  69:bsp/middlewares/freertos/source/list.c ****     listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  53              		.loc 1 69 51 view .LVU13
  70:bsp/middlewares/freertos/source/list.c **** }
  54              		.loc 1 70 1 is_stmt 0 view .LVU14
  55 0014 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE5:
  59              		.section	.text.vListInitialiseItem,"ax",%progbits
  60              		.align	1
  61              		.global	vListInitialiseItem
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  66              	vListInitialiseItem:
  67              	.LVL1:
  68              	.LFB6:
  71:bsp/middlewares/freertos/source/list.c **** /*-----------------------------------------------------------*/
  72:bsp/middlewares/freertos/source/list.c **** 
  73:bsp/middlewares/freertos/source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  74:bsp/middlewares/freertos/source/list.c **** {
  69              		.loc 1 74 1 is_stmt 1 view -0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  75:bsp/middlewares/freertos/source/list.c ****     /* Make sure the list item is not recorded as being on a list. */
  76:bsp/middlewares/freertos/source/list.c ****     pxItem->pxContainer = NULL;
  74              		.loc 1 76 5 view .LVU16
  75              		.loc 1 76 25 is_stmt 0 view .LVU17
  76 0000 0023     		movs	r3, #0
  77 0002 0361     		str	r3, [r0, #16]
  77:bsp/middlewares/freertos/source/list.c **** 
  78:bsp/middlewares/freertos/source/list.c ****     /* Write known values into the list item if
  79:bsp/middlewares/freertos/source/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  80:bsp/middlewares/freertos/source/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  78              		.loc 1 80 60 is_stmt 1 view .LVU18
  81:bsp/middlewares/freertos/source/list.c ****     listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  79              		.loc 1 81 61 view .LVU19
  82:bsp/middlewares/freertos/source/list.c **** }
  80              		.loc 1 82 1 is_stmt 0 view .LVU20
  81 0004 7047     		bx	lr
  82              		.cfi_endproc
  83              	.LFE6:
  85              		.section	.text.vListInsertEnd,"ax",%progbits
  86              		.align	1
  87              		.global	vListInsertEnd
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	vListInsertEnd:
  93              	.LVL2:
  94              	.LFB7:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 4


  83:bsp/middlewares/freertos/source/list.c **** /*-----------------------------------------------------------*/
  84:bsp/middlewares/freertos/source/list.c **** 
  85:bsp/middlewares/freertos/source/list.c **** void vListInsertEnd( List_t * const pxList,
  86:bsp/middlewares/freertos/source/list.c ****                      ListItem_t * const pxNewListItem )
  87:bsp/middlewares/freertos/source/list.c **** {
  95              		.loc 1 87 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
  88:bsp/middlewares/freertos/source/list.c ****     ListItem_t * const pxIndex = pxList->pxIndex;
 100              		.loc 1 88 5 view .LVU22
 101              		.loc 1 88 24 is_stmt 0 view .LVU23
 102 0000 4368     		ldr	r3, [r0, #4]
 103              	.LVL3:
  89:bsp/middlewares/freertos/source/list.c **** 
  90:bsp/middlewares/freertos/source/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
  91:bsp/middlewares/freertos/source/list.c ****      * the list data structures being overwritten in memory.  They will not catch
  92:bsp/middlewares/freertos/source/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
  93:bsp/middlewares/freertos/source/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 104              		.loc 1 93 38 is_stmt 1 view .LVU24
  94:bsp/middlewares/freertos/source/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 105              		.loc 1 94 50 view .LVU25
  95:bsp/middlewares/freertos/source/list.c **** 
  96:bsp/middlewares/freertos/source/list.c ****     /* Insert a new list item into pxList, but rather than sort the list,
  97:bsp/middlewares/freertos/source/list.c ****      * makes the new list item the last item to be removed by a call to
  98:bsp/middlewares/freertos/source/list.c ****      * listGET_OWNER_OF_NEXT_ENTRY(). */
  99:bsp/middlewares/freertos/source/list.c ****     pxNewListItem->pxNext = pxIndex;
 106              		.loc 1 99 5 view .LVU26
 107              		.loc 1 99 27 is_stmt 0 view .LVU27
 108 0002 4B60     		str	r3, [r1, #4]
 100:bsp/middlewares/freertos/source/list.c ****     pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 109              		.loc 1 100 5 is_stmt 1 view .LVU28
 110              		.loc 1 100 40 is_stmt 0 view .LVU29
 111 0004 9A68     		ldr	r2, [r3, #8]
 112              		.loc 1 100 31 view .LVU30
 113 0006 8A60     		str	r2, [r1, #8]
 101:bsp/middlewares/freertos/source/list.c **** 
 102:bsp/middlewares/freertos/source/list.c ****     /* Only used during decision coverage testing. */
 103:bsp/middlewares/freertos/source/list.c ****     mtCOVERAGE_TEST_DELAY();
 114              		.loc 1 103 28 is_stmt 1 view .LVU31
 104:bsp/middlewares/freertos/source/list.c **** 
 105:bsp/middlewares/freertos/source/list.c ****     pxIndex->pxPrevious->pxNext = pxNewListItem;
 115              		.loc 1 105 5 view .LVU32
 116              		.loc 1 105 33 is_stmt 0 view .LVU33
 117 0008 5160     		str	r1, [r2, #4]
 106:bsp/middlewares/freertos/source/list.c ****     pxIndex->pxPrevious = pxNewListItem;
 118              		.loc 1 106 5 is_stmt 1 view .LVU34
 119              		.loc 1 106 25 is_stmt 0 view .LVU35
 120 000a 9960     		str	r1, [r3, #8]
 107:bsp/middlewares/freertos/source/list.c **** 
 108:bsp/middlewares/freertos/source/list.c ****     /* Remember which list the item is in. */
 109:bsp/middlewares/freertos/source/list.c ****     pxNewListItem->pxContainer = pxList;
 121              		.loc 1 109 5 is_stmt 1 view .LVU36
 122              		.loc 1 109 32 is_stmt 0 view .LVU37
 123 000c 0861     		str	r0, [r1, #16]
 110:bsp/middlewares/freertos/source/list.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 5


 111:bsp/middlewares/freertos/source/list.c ****     ( pxList->uxNumberOfItems )++;
 124              		.loc 1 111 5 is_stmt 1 view .LVU38
 125              		.loc 1 111 13 is_stmt 0 view .LVU39
 126 000e 0368     		ldr	r3, [r0]
 127              	.LVL4:
 128              		.loc 1 111 32 view .LVU40
 129 0010 0133     		adds	r3, r3, #1
 130 0012 0360     		str	r3, [r0]
 112:bsp/middlewares/freertos/source/list.c **** }
 131              		.loc 1 112 1 view .LVU41
 132 0014 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE7:
 136              		.section	.text.vListInsert,"ax",%progbits
 137              		.align	1
 138              		.global	vListInsert
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	vListInsert:
 144              	.LVL5:
 145              	.LFB8:
 113:bsp/middlewares/freertos/source/list.c **** /*-----------------------------------------------------------*/
 114:bsp/middlewares/freertos/source/list.c **** 
 115:bsp/middlewares/freertos/source/list.c **** void vListInsert( List_t * const pxList,
 116:bsp/middlewares/freertos/source/list.c ****                   ListItem_t * const pxNewListItem )
 117:bsp/middlewares/freertos/source/list.c **** {
 146              		.loc 1 117 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              		.loc 1 117 1 is_stmt 0 view .LVU43
 152 0000 30B4     		push	{r4, r5}
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 5, -4
 118:bsp/middlewares/freertos/source/list.c ****     ListItem_t * pxIterator;
 157              		.loc 1 118 5 is_stmt 1 view .LVU44
 119:bsp/middlewares/freertos/source/list.c ****     const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 158              		.loc 1 119 5 view .LVU45
 159              		.loc 1 119 22 is_stmt 0 view .LVU46
 160 0002 0D68     		ldr	r5, [r1]
 161              	.LVL6:
 120:bsp/middlewares/freertos/source/list.c **** 
 121:bsp/middlewares/freertos/source/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 122:bsp/middlewares/freertos/source/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 123:bsp/middlewares/freertos/source/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 124:bsp/middlewares/freertos/source/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 162              		.loc 1 124 38 is_stmt 1 view .LVU47
 125:bsp/middlewares/freertos/source/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 163              		.loc 1 125 50 view .LVU48
 126:bsp/middlewares/freertos/source/list.c **** 
 127:bsp/middlewares/freertos/source/list.c ****     /* Insert the new list item into the list, sorted in xItemValue order.
 128:bsp/middlewares/freertos/source/list.c ****      *
 129:bsp/middlewares/freertos/source/list.c ****      * If the list already contains a list item with the same item value then the
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 6


 130:bsp/middlewares/freertos/source/list.c ****      * new list item should be placed after it.  This ensures that TCBs which are
 131:bsp/middlewares/freertos/source/list.c ****      * stored in ready lists (all of which have the same xItemValue value) get a
 132:bsp/middlewares/freertos/source/list.c ****      * share of the CPU.  However, if the xItemValue is the same as the back marker
 133:bsp/middlewares/freertos/source/list.c ****      * the iteration loop below will not end.  Therefore the value is checked
 134:bsp/middlewares/freertos/source/list.c ****      * first, and the algorithm slightly modified if necessary. */
 135:bsp/middlewares/freertos/source/list.c ****     if( xValueOfInsertion == portMAX_DELAY )
 164              		.loc 1 135 5 view .LVU49
 165              		.loc 1 135 7 is_stmt 0 view .LVU50
 166 0004 B5F1FF3F 		cmp	r5, #-1
 167 0008 11D0     		beq	.L9
 136:bsp/middlewares/freertos/source/list.c ****     {
 137:bsp/middlewares/freertos/source/list.c ****         pxIterator = pxList->xListEnd.pxPrevious;
 138:bsp/middlewares/freertos/source/list.c ****     }
 139:bsp/middlewares/freertos/source/list.c ****     else
 140:bsp/middlewares/freertos/source/list.c ****     {
 141:bsp/middlewares/freertos/source/list.c ****         /* *** NOTE ***********************************************************
 142:bsp/middlewares/freertos/source/list.c ****         *  If you find your application is crashing here then likely causes are
 143:bsp/middlewares/freertos/source/list.c ****         *  listed below.  In addition see https://www.FreeRTOS.org/FAQHelp.html for
 144:bsp/middlewares/freertos/source/list.c ****         *  more tips, and ensure configASSERT() is defined!
 145:bsp/middlewares/freertos/source/list.c ****         *  https://www.FreeRTOS.org/a00110.html#configASSERT
 146:bsp/middlewares/freertos/source/list.c ****         *
 147:bsp/middlewares/freertos/source/list.c ****         *   1) Stack overflow -
 148:bsp/middlewares/freertos/source/list.c ****         *      see https://www.FreeRTOS.org/Stacks-and-stack-overflow-checking.html
 149:bsp/middlewares/freertos/source/list.c ****         *   2) Incorrect interrupt priority assignment, especially on Cortex-M
 150:bsp/middlewares/freertos/source/list.c ****         *      parts where numerically high priority values denote low actual
 151:bsp/middlewares/freertos/source/list.c ****         *      interrupt priorities, which can seem counter intuitive.  See
 152:bsp/middlewares/freertos/source/list.c ****         *      https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html and the definition
 153:bsp/middlewares/freertos/source/list.c ****         *      of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 154:bsp/middlewares/freertos/source/list.c ****         *      https://www.FreeRTOS.org/a00110.html
 155:bsp/middlewares/freertos/source/list.c ****         *   3) Calling an API function from within a critical section or when
 156:bsp/middlewares/freertos/source/list.c ****         *      the scheduler is suspended, or calling an API function that does
 157:bsp/middlewares/freertos/source/list.c ****         *      not end in "FromISR" from an interrupt.
 158:bsp/middlewares/freertos/source/list.c ****         *   4) Using a queue or semaphore before it has been initialised or
 159:bsp/middlewares/freertos/source/list.c ****         *      before the scheduler has been started (are interrupts firing
 160:bsp/middlewares/freertos/source/list.c ****         *      before vTaskStartScheduler() has been called?).
 161:bsp/middlewares/freertos/source/list.c ****         **********************************************************************/
 162:bsp/middlewares/freertos/source/list.c **** 
 163:bsp/middlewares/freertos/source/list.c ****         for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <=
 168              		.loc 1 163 9 is_stmt 1 view .LVU51
 169              		.loc 1 163 25 is_stmt 0 view .LVU52
 170 000a 00F10803 		add	r3, r0, #8
 171              	.LVL7:
 172              	.L7:
 173              		.loc 1 163 67 is_stmt 1 discriminator 1 view .LVU53
 174 000e 1C46     		mov	r4, r3
 175              		.loc 1 163 77 is_stmt 0 discriminator 1 view .LVU54
 176 0010 5B68     		ldr	r3, [r3, #4]
 177              	.LVL8:
 178              		.loc 1 163 85 discriminator 1 view .LVU55
 179 0012 1A68     		ldr	r2, [r3]
 180              		.loc 1 163 9 discriminator 1 view .LVU56
 181 0014 AA42     		cmp	r2, r5
 182 0016 FAD9     		bls	.L7
 183              	.L6:
 164:bsp/middlewares/freertos/source/list.c ****         {
 165:bsp/middlewares/freertos/source/list.c ****             /* There is nothing to do here, just iterating to the wanted
 166:bsp/middlewares/freertos/source/list.c ****              * insertion position. */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 7


 167:bsp/middlewares/freertos/source/list.c ****         }
 168:bsp/middlewares/freertos/source/list.c ****     }
 169:bsp/middlewares/freertos/source/list.c **** 
 170:bsp/middlewares/freertos/source/list.c ****     pxNewListItem->pxNext = pxIterator->pxNext;
 184              		.loc 1 170 5 is_stmt 1 view .LVU57
 185              		.loc 1 170 39 is_stmt 0 view .LVU58
 186 0018 6368     		ldr	r3, [r4, #4]
 187              		.loc 1 170 27 view .LVU59
 188 001a 4B60     		str	r3, [r1, #4]
 171:bsp/middlewares/freertos/source/list.c ****     pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 189              		.loc 1 171 5 is_stmt 1 view .LVU60
 190              		.loc 1 171 39 is_stmt 0 view .LVU61
 191 001c 9960     		str	r1, [r3, #8]
 172:bsp/middlewares/freertos/source/list.c ****     pxNewListItem->pxPrevious = pxIterator;
 192              		.loc 1 172 5 is_stmt 1 view .LVU62
 193              		.loc 1 172 31 is_stmt 0 view .LVU63
 194 001e 8C60     		str	r4, [r1, #8]
 173:bsp/middlewares/freertos/source/list.c ****     pxIterator->pxNext = pxNewListItem;
 195              		.loc 1 173 5 is_stmt 1 view .LVU64
 196              		.loc 1 173 24 is_stmt 0 view .LVU65
 197 0020 6160     		str	r1, [r4, #4]
 174:bsp/middlewares/freertos/source/list.c **** 
 175:bsp/middlewares/freertos/source/list.c ****     /* Remember which list the item is in.  This allows fast removal of the
 176:bsp/middlewares/freertos/source/list.c ****      * item later. */
 177:bsp/middlewares/freertos/source/list.c ****     pxNewListItem->pxContainer = pxList;
 198              		.loc 1 177 5 is_stmt 1 view .LVU66
 199              		.loc 1 177 32 is_stmt 0 view .LVU67
 200 0022 0861     		str	r0, [r1, #16]
 178:bsp/middlewares/freertos/source/list.c **** 
 179:bsp/middlewares/freertos/source/list.c ****     ( pxList->uxNumberOfItems )++;
 201              		.loc 1 179 5 is_stmt 1 view .LVU68
 202              		.loc 1 179 13 is_stmt 0 view .LVU69
 203 0024 0368     		ldr	r3, [r0]
 204              		.loc 1 179 32 view .LVU70
 205 0026 0133     		adds	r3, r3, #1
 206 0028 0360     		str	r3, [r0]
 180:bsp/middlewares/freertos/source/list.c **** }
 207              		.loc 1 180 1 view .LVU71
 208 002a 30BC     		pop	{r4, r5}
 209              	.LCFI1:
 210              		.cfi_remember_state
 211              		.cfi_restore 5
 212              		.cfi_restore 4
 213              		.cfi_def_cfa_offset 0
 214              	.LVL9:
 215              		.loc 1 180 1 view .LVU72
 216 002c 7047     		bx	lr
 217              	.LVL10:
 218              	.L9:
 219              	.LCFI2:
 220              		.cfi_restore_state
 137:bsp/middlewares/freertos/source/list.c ****     }
 221              		.loc 1 137 9 is_stmt 1 view .LVU73
 137:bsp/middlewares/freertos/source/list.c ****     }
 222              		.loc 1 137 20 is_stmt 0 view .LVU74
 223 002e 0469     		ldr	r4, [r0, #16]
 224              	.LVL11:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 8


 137:bsp/middlewares/freertos/source/list.c ****     }
 225              		.loc 1 137 20 view .LVU75
 226 0030 F2E7     		b	.L6
 227              		.cfi_endproc
 228              	.LFE8:
 230              		.section	.text.uxListRemove,"ax",%progbits
 231              		.align	1
 232              		.global	uxListRemove
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	uxListRemove:
 238              	.LVL12:
 239              	.LFB9:
 181:bsp/middlewares/freertos/source/list.c **** /*-----------------------------------------------------------*/
 182:bsp/middlewares/freertos/source/list.c **** 
 183:bsp/middlewares/freertos/source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 184:bsp/middlewares/freertos/source/list.c **** {
 240              		.loc 1 184 1 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 185:bsp/middlewares/freertos/source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 186:bsp/middlewares/freertos/source/list.c ****  * item. */
 187:bsp/middlewares/freertos/source/list.c ****     List_t * const pxList = pxItemToRemove->pxContainer;
 245              		.loc 1 187 5 view .LVU77
 246              		.loc 1 187 20 is_stmt 0 view .LVU78
 247 0000 0369     		ldr	r3, [r0, #16]
 248              	.LVL13:
 188:bsp/middlewares/freertos/source/list.c **** 
 189:bsp/middlewares/freertos/source/list.c ****     pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 249              		.loc 1 189 5 is_stmt 1 view .LVU79
 250              		.loc 1 189 19 is_stmt 0 view .LVU80
 251 0002 4168     		ldr	r1, [r0, #4]
 252              		.loc 1 189 56 view .LVU81
 253 0004 8268     		ldr	r2, [r0, #8]
 254              		.loc 1 189 40 view .LVU82
 255 0006 8A60     		str	r2, [r1, #8]
 190:bsp/middlewares/freertos/source/list.c ****     pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 256              		.loc 1 190 5 is_stmt 1 view .LVU83
 257              		.loc 1 190 56 is_stmt 0 view .LVU84
 258 0008 4168     		ldr	r1, [r0, #4]
 259              		.loc 1 190 40 view .LVU85
 260 000a 5160     		str	r1, [r2, #4]
 191:bsp/middlewares/freertos/source/list.c **** 
 192:bsp/middlewares/freertos/source/list.c ****     /* Only used during decision coverage testing. */
 193:bsp/middlewares/freertos/source/list.c ****     mtCOVERAGE_TEST_DELAY();
 261              		.loc 1 193 28 is_stmt 1 view .LVU86
 194:bsp/middlewares/freertos/source/list.c **** 
 195:bsp/middlewares/freertos/source/list.c ****     /* Make sure the index is left pointing to a valid item. */
 196:bsp/middlewares/freertos/source/list.c ****     if( pxList->pxIndex == pxItemToRemove )
 262              		.loc 1 196 5 view .LVU87
 263              		.loc 1 196 15 is_stmt 0 view .LVU88
 264 000c 5A68     		ldr	r2, [r3, #4]
 265              		.loc 1 196 7 view .LVU89
 266 000e 8242     		cmp	r2, r0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 9


 267 0010 06D0     		beq	.L12
 268              	.L11:
 197:bsp/middlewares/freertos/source/list.c ****     {
 198:bsp/middlewares/freertos/source/list.c ****         pxList->pxIndex = pxItemToRemove->pxPrevious;
 199:bsp/middlewares/freertos/source/list.c ****     }
 200:bsp/middlewares/freertos/source/list.c ****     else
 201:bsp/middlewares/freertos/source/list.c ****     {
 202:bsp/middlewares/freertos/source/list.c ****         mtCOVERAGE_TEST_MARKER();
 269              		.loc 1 202 33 is_stmt 1 view .LVU90
 203:bsp/middlewares/freertos/source/list.c ****     }
 204:bsp/middlewares/freertos/source/list.c **** 
 205:bsp/middlewares/freertos/source/list.c ****     pxItemToRemove->pxContainer = NULL;
 270              		.loc 1 205 5 view .LVU91
 271              		.loc 1 205 33 is_stmt 0 view .LVU92
 272 0012 0022     		movs	r2, #0
 273 0014 0261     		str	r2, [r0, #16]
 206:bsp/middlewares/freertos/source/list.c ****     ( pxList->uxNumberOfItems )--;
 274              		.loc 1 206 5 is_stmt 1 view .LVU93
 275              		.loc 1 206 13 is_stmt 0 view .LVU94
 276 0016 1A68     		ldr	r2, [r3]
 277              		.loc 1 206 32 view .LVU95
 278 0018 013A     		subs	r2, r2, #1
 279 001a 1A60     		str	r2, [r3]
 207:bsp/middlewares/freertos/source/list.c **** 
 208:bsp/middlewares/freertos/source/list.c ****     return pxList->uxNumberOfItems;
 280              		.loc 1 208 5 is_stmt 1 view .LVU96
 281              		.loc 1 208 18 is_stmt 0 view .LVU97
 282 001c 1868     		ldr	r0, [r3]
 283              	.LVL14:
 209:bsp/middlewares/freertos/source/list.c **** }
 284              		.loc 1 209 1 view .LVU98
 285 001e 7047     		bx	lr
 286              	.LVL15:
 287              	.L12:
 198:bsp/middlewares/freertos/source/list.c ****     }
 288              		.loc 1 198 9 is_stmt 1 view .LVU99
 198:bsp/middlewares/freertos/source/list.c ****     }
 289              		.loc 1 198 41 is_stmt 0 view .LVU100
 290 0020 8268     		ldr	r2, [r0, #8]
 198:bsp/middlewares/freertos/source/list.c ****     }
 291              		.loc 1 198 25 view .LVU101
 292 0022 5A60     		str	r2, [r3, #4]
 293 0024 F5E7     		b	.L11
 294              		.cfi_endproc
 295              	.LFE9:
 297              		.text
 298              	.Letext0:
 299              		.file 2 "c:\\at32ide\\platform\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\mac
 300              		.file 3 "c:\\at32ide\\platform\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys
 301              		.file 4 "bsp/middlewares/freertos/source/portable/GCC/ARM_CM4F/portmacro.h"
 302              		.file 5 "bsp/middlewares/freertos/source/include/list.h"
 303              		.file 6 "inc/FreeRTOSConfig.h"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccWeTBjh.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 list.c
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:18     .text.vListInitialise:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:24     .text.vListInitialise:00000000 vListInitialise
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:60     .text.vListInitialiseItem:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:66     .text.vListInitialiseItem:00000000 vListInitialiseItem
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:86     .text.vListInsertEnd:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:92     .text.vListInsertEnd:00000000 vListInsertEnd
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:137    .text.vListInsert:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:143    .text.vListInsert:00000000 vListInsert
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:231    .text.uxListRemove:00000000 $t
C:\Users\user\AppData\Local\Temp\ccWeTBjh.s:237    .text.uxListRemove:00000000 uxListRemove

NO UNDEFINED SYMBOLS
